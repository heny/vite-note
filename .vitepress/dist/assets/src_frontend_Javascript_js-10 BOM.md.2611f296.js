import{o as n,c as a,d as s}from"./app.246f1876.js";const t='{"title":"js-10 BOM","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、BOM","slug":"一、bom"},{"level":2,"title":"二、打开关闭页面","slug":"二、打开关闭页面"},{"level":2,"title":"三、网络状态","slug":"三、网络状态"},{"level":2,"title":"四、location（位置）","slug":"四、location（位置）"},{"level":3,"title":"location对象的属性","slug":"location对象的属性"},{"level":3,"title":"location对象的方法","slug":"location对象的方法"},{"level":2,"title":"五、history","slug":"五、history"},{"level":2,"title":"六、window页面事件","slug":"六、window页面事件"},{"level":2,"title":"六、navigator","slug":"六、navigator"},{"level":3,"title":"navigator对象的属性","slug":"navigator对象的属性"},{"level":3,"title":"navigator对象的方法","slug":"navigator对象的方法"},{"level":2,"title":"七、设备手机电池状态","slug":"七、设备手机电池状态"},{"level":2,"title":"八、使设备进行震动","slug":"八、使设备进行震动"},{"level":2,"title":"九、页面显示隐藏","slug":"九、页面显示隐藏"},{"level":2,"title":"十、页面方向陀螺仪","slug":"十、页面方向陀螺仪"},{"level":2,"title":"十一、notification 桌面通知","slug":"十一、notification-桌面通知"},{"level":2,"title":"十二、全屏事件","slug":"十二、全屏事件"},{"level":2,"title":"十三、orientation","slug":"十三、orientation"},{"level":2,"title":"十四、弹窗","slug":"十四、弹窗"},{"level":2,"title":"十五、浏览器位置信息","slug":"十五、浏览器位置信息"},{"level":3,"title":"可视距离client","slug":"可视距离client"},{"level":3,"title":"元素的实际距离offset","slug":"元素的实际距离offset"},{"level":3,"title":"卷起的距离scroll","slug":"卷起的距离scroll"},{"level":3,"title":"屏幕的宽度","slug":"屏幕的宽度"},{"level":3,"title":"总结","slug":"总结"},{"level":3,"title":"浏览器滚动事件","slug":"浏览器滚动事件"},{"level":2,"title":"十五、平滑滚动","slug":"十五、平滑滚动"},{"level":2,"title":"十六、onresize自适应布局","slug":"十六、onresize自适应布局"},{"level":2,"title":"高频面试题","slug":"高频面试题"}],"relativePath":"src/frontend/Javascript/js-10 BOM.md","lastUpdated":1615699077385}',o={},p=s('<h1 id="js-10-bom"><a class="header-anchor" href="#js-10-bom" aria-hidden="true">#</a> js-10 BOM</h1><h2 id="一、bom"><a class="header-anchor" href="#一、bom" aria-hidden="true">#</a> 一、BOM</h2><p>bom（browser object model）</p><p>包括：window、location、navigator、screen、history；</p><p><code>window</code>对象：在全局中定义的变量是window的属性，定义的函数是window的方法；window.a，在全局写的变量或函数都是使用window调用的，只是被省略了；</p><h2 id="二、打开关闭页面"><a class="header-anchor" href="#二、打开关闭页面" aria-hidden="true">#</a> 二、打开关闭页面</h2><ol><li><code>window.open(url,name,attr,boolean)</code>;</li></ol><ul><li>url地址，name名字，attr属性设置 <ul><li>boolean：false新历史，true替换历史；</li></ul></li></ul><ol start="2"><li><code>window.close()</code>；直接调用方法，关闭当前窗口；</li></ol><h2 id="三、网络状态"><a class="header-anchor" href="#三、网络状态" aria-hidden="true">#</a> 三、网络状态</h2><p>在线<code>online</code> 离线<code>offline</code></p><p>监听当前的网络状态变动事件：</p><div class="language-js"><pre><code>window<span class="token punctuation">.</span><span class="token function">addEventlistener</span><span class="token punctuation">(</span><span class="token string">&#39;online&#39;</span><span class="token punctuation">,</span>xxx<span class="token punctuation">)</span><span class="token punctuation">;</span>\nwindow<span class="token punctuation">.</span><span class="token function">addEventlistener</span><span class="token punctuation">(</span><span class="token string">&#39;offline&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;您断网啦;&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>PC端测试：点击NetWork，之后点击offline，可以测试；</p><p>手机端：关闭移动网络之后就可以提示了；</p><h2 id="四、location（位置）"><a class="header-anchor" href="#四、location（位置）" aria-hidden="true">#</a> 四、location（位置）</h2><p><code>location</code>既是<code>window</code>的属性，也是document的属性；</p><h3 id="location对象的属性"><a class="header-anchor" href="#location对象的属性" aria-hidden="true">#</a> location对象的属性</h3><ul><li><code>href</code>：获取当前的url； &quot;<a href="http://www.baidu.com" target="_blank" rel="noopener noreferrer">http://www.baidu.com</a>&quot;</li><li><code>host</code>：获取服务器名称和端口； &quot;<a href="http://www.baidu.com:80" target="_blank" rel="noopener noreferrer">www.baidu.com:80</a>&quot;</li><li><code>hostname</code>：不带端口号的服务器； &quot;<a href="http://www.baidu.com" target="_blank" rel="noopener noreferrer">www.baidu.com</a>&quot;</li><li><code>pathname</code>：目录部分； /wileyCDA/</li><li><code>port</code>：返回端口号 &quot;8080&quot;</li><li><code>protocol</code>：协议； &quot;https:&quot;</li><li><code>search</code>：以?开头； &quot;?q=javascript&quot;</li><li><code>hash</code>：#号开头； &quot;#contents&quot;</li></ul><h3 id="location对象的方法"><a class="header-anchor" href="#location对象的方法" aria-hidden="true">#</a> location对象的方法</h3><ul><li><code>href=&quot;新地址&quot;</code>；强制跳转到新地址；不写地址为获取当前地址；</li><li><code>assign(&#39;地址&#39;)</code>；跳转有历史记录；</li><li><code>replace(&#39;地址&#39;)</code>；跳转没有历史记录（免登录常用）</li><li><code>reload()</code>；刷新，重新加载页面；</li></ul><p>链接加密：<code>encodeURIComponent</code></p><p>链接解密：<code>decodeURIComponent</code></p><p>作用场景：用于免登录，需要带上redirectUrl，登录之后跳转的地址，建议使用链接加密一下</p><p>扩展：</p><p>加密汉字：<code>escape</code></p><p>解密：<code>unescape</code></p><h2 id="五、history"><a class="header-anchor" href="#五、history" aria-hidden="true">#</a> 五、history</h2><p><code>history</code>：历史页面，拥有的方法如下：</p><ul><li><code>back()</code>；返回上一个；</li><li><code>forward()</code>；返回下一个；forward(前锋);</li><li><code>go(num)</code>；0:当前，-1上一个，1下一个；也可以2或-2；</li><li><code>pushState({p: &#39;/b&#39;},null,&#39;/b&#39;)</code>，在网址后面添加b； 不会刷新页面</li><li><code>replaceState()</code>：与pushstate相同，不会保留历史栈</li><li><code>listen(location =&gt; {})</code>：监听路由的变化；</li></ul><p><code>window.onhashchange</code>，当hash值发生改变时触发，<code>e.oldURL</code>,<code>e.newURL</code>可以访问</p><h2 id="六、window页面事件"><a class="header-anchor" href="#六、window页面事件" aria-hidden="true">#</a> 六、window页面事件</h2><p>以下均为window的方法</p><ul><li><code>load</code>：页面加载完成</li><li><code>beforeunload</code>：页面即将离开，页面刷新、页面跳转都会触发；</li><li><code>pageshow</code>：页面显示</li><li><code>pagehide</code>：页面离开</li><li><code>popstate</code>：浏览器前进后退时触发，页面跳转不触发</li><li><code>hashchange</code>：当hash发生改变时触发，<code>e.oldURL</code>和<code>newURL</code>可以访问；</li></ul><p>实践：</p><p>监听页面停留时间：可以通过<code>beforeunload</code>和<code>onpageshow</code>控制；</p><h2 id="六、navigator"><a class="header-anchor" href="#六、navigator" aria-hidden="true">#</a> 六、navigator</h2><h3 id="navigator对象的属性"><a class="header-anchor" href="#navigator对象的属性" aria-hidden="true">#</a> navigator对象的属性</h3><ul><li><code>appCodeName</code>：浏览器代号</li><li><code>appName</code>：服务器名称</li><li><code>appVersion</code>：浏览器版本</li><li><code>cookieEnabled</code>：检测Cookies</li><li><code>platform</code>：硬件平台</li><li><code>userAgent</code>：浏览器信息</li><li><code>systemLanguage</code>：代理语言</li></ul><div class="language-js"><pre><code>window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> txt <span class="token operator">=</span> “<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span> 浏览器代号 <span class="token operator">:</span> “ <span class="token operator">+</span> navigator<span class="token punctuation">.</span>appCodeName <span class="token operator">+</span> “<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>”<span class="token punctuation">;</span>\n    txt<span class="token operator">+=</span> “<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span> 浏览器名称 <span class="token operator">:</span> “ <span class="token operator">+</span> navigator<span class="token punctuation">.</span>appName <span class="token operator">+</span> “<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>”<span class="token punctuation">;</span>\n    txt<span class="token operator">+=</span> “<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span> 浏览器版本 <span class="token operator">:</span> “ <span class="token operator">+</span> navigator<span class="token punctuation">.</span>appVersion <span class="token operator">+</span> “<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>”<span class="token punctuation">;</span>\n    txt<span class="token operator">+=</span> “<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span> 启用 Cookies<span class="token operator">:</span> “ <span class="token operator">+</span> navigator<span class="token punctuation">.</span>cookieEnabled <span class="token operator">+</span> “<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>”<span class="token punctuation">;</span>\n    txt<span class="token operator">+=</span> “<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span> 硬件平台 <span class="token operator">:</span> “ <span class="token operator">+</span> navigator<span class="token punctuation">.</span>platform <span class="token operator">+</span> “<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>”<span class="token punctuation">;</span>\n    txt<span class="token operator">+=</span> “<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span> 用户代理 <span class="token operator">:</span> “ <span class="token operator">+</span> navigator<span class="token punctuation">.</span>userAgent <span class="token operator">+</span> “<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>”<span class="token punctuation">;</span>\n    txt<span class="token operator">+=</span> “<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span> 用户代理语言 <span class="token operator">:</span> “ <span class="token operator">+</span> navigator<span class="token punctuation">.</span>systemLanguage <span class="token operator">+</span> “<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>”<span class="token punctuation">;</span>\n    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>“example”<span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>txt<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="navigator对象的方法"><a class="header-anchor" href="#navigator对象的方法" aria-hidden="true">#</a> navigator对象的方法</h3><ul><li><code>getBattery</code>：电池状态</li><li><code>vibrate</code>：设备震动</li></ul><h2 id="七、设备手机电池状态"><a class="header-anchor" href="#七、设备手机电池状态" aria-hidden="true">#</a> 七、设备手机电池状态</h2><p><code>getBattery</code> 电池状态</p><div class="language-js"><pre><code>navigator<span class="token punctuation">.</span><span class="token function">getBattery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">battery</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>battery<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 返回</span>\n<span class="token punctuation">{</span>\n charging<span class="token punctuation">,</span> <span class="token comment">// 是否在充电</span>\n chargingTime<span class="token punctuation">,</span> <span class="token comment">// 充满电所需时间</span>\n dischargingTime<span class="token punctuation">,</span> <span class="token comment">// 当前电量可使用时间</span>\n level<span class="token punctuation">,</span> 剩余电量\n\n onchargingchange<span class="token punctuation">,</span> <span class="token comment">// 监听充电状态变化</span>\n onchargingtimechange<span class="token punctuation">,</span> <span class="token comment">// 监听充满电所需时间变化</span>\n ondischargingtimechange<span class="token punctuation">,</span> <span class="token comment">// 监听当前电量可使用时间变化</span>\n onlevelchange <span class="token comment">// 监听电量变化</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>使用场景：提示用户电量已充满，或者为了让用户有安全感，电量低于99%的时候来个弹框提示&quot;该充电啦&quot;✅</p><h2 id="八、使设备进行震动"><a class="header-anchor" href="#八、使设备进行震动" aria-hidden="true">#</a> 八、使设备进行震动</h2><p>vibration</p><div class="language-js"><pre><code><span class="token comment">// 震动一次</span>\nnavigator<span class="token punctuation">.</span><span class="token function">vibrate</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 连续震动，震动200ms、暂停100ms、震动300ms</span>\nnavigator<span class="token punctuation">.</span><span class="token function">vibrate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>效果如下：不好意思你得用你自己的手握住手机才能感受得到;</p><p>使用场景：通过振动来提供感官反馈，比如太久没有触摸屏幕的时候连续震动提醒用户✅</p><h2 id="九、页面显示隐藏"><a class="header-anchor" href="#九、页面显示隐藏" aria-hidden="true">#</a> 九、页面显示隐藏</h2><div class="language-js"><pre><code>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;visibilitychange&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">页面可见性：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>document<span class="token punctuation">.</span>visibilityState<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">页面可见性：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>document<span class="token punctuation">.</span>hidden<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p><code>document.visibilityState</code>的状态值：</p><ul><li><p>当页面离开时会触发该函数，hidden的属性值</p></li><li><p>当页面显示时，会返回一个visible</p></li></ul><p><code>document.hidden</code>：当页面显示状态返回false；</p><p>使用场景：当程序切到后台的时候，如果当前有视频播放或者一些动画执行，可以先暂停✅</p><h2 id="十、页面方向陀螺仪"><a class="header-anchor" href="#十、页面方向陀螺仪" aria-hidden="true">#</a> 十、页面方向陀螺仪</h2><p>deviceOrientation（如果IOS失效，可以将域名协议改为https）</p><p><img src="https://notecdn.heny.vip/images/js-10_BOM-01.png" alt="image"></p><p>从左到右分别为alpha、beta、gamma</p><div class="language-js"><pre><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;deviceorientation&quot;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span> alpha<span class="token punctuation">,</span> beta<span class="token punctuation">,</span> gamma <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">;</span>\n\n console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">alpha：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>alpha<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">beta：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>beta<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gamma：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>gamma<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>使用场景：页面上的某些元素需要根据手机摆动进行移动，达到视差的效果，比如王者荣耀进入游戏的那个界面，手机转动背景图会跟着动😂</p><h2 id="十一、notification-桌面通知"><a class="header-anchor" href="#十一、notification-桌面通知" aria-hidden="true">#</a> 十一、notification 桌面通知</h2><p>PC端的桌面通知，如网页端的微信， 当收到消息时，右下角会出现一个通知（尽管你把浏览器最小化），因为这个通知时独立于浏览器的，是系统的一个原生控件：</p><div class="language-js"><pre><code><span class="token keyword">const</span> notice <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Notification</span><span class="token punctuation">(</span><span class="token string">&quot;前端宇宙情报局&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    body<span class="token operator">:</span> <span class="token string">&quot;这20个不常用的Web API真的有用吗?，别问，问就是有用🈶&quot;</span><span class="token punctuation">,</span>\n    icon<span class="token operator">:</span> <span class="token string">&quot;我的掘金头像&quot;</span><span class="token punctuation">,</span>\n    data<span class="token operator">:</span> <span class="token punctuation">{</span>\n        url<span class="token operator">:</span> <span class="token string">&quot;https://www.baidu.com&quot;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 点击回调</span>\nnotice<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span>data<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 当用户点击通知时，在浏览器打开百度网站</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><img src="https://notecdn.heny.vip/images/js-10_BOM-02.png" alt="image"></p><p>注意：想要成功的调起通知，首先要用户的授权✅</p><div class="language-js"><pre><code>Notification<span class="token punctuation">.</span><span class="token function">requestPermission</span><span class="token punctuation">(</span><span class="token parameter">prem</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    prem <span class="token operator">==</span> <span class="token string">&quot;granted&quot;</span> <span class="token comment">// 同意</span>\n    prem <span class="token operator">==</span> <span class="token string">&quot;denied&quot;</span> <span class="token comment">// 拒绝</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>所以，再调用之前先向用户发起请求</p><div class="language-js"><pre><code><span class="token keyword">let</span> permission <span class="token operator">=</span> Notification<span class="token punctuation">.</span>permission<span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>permission <span class="token operator">==</span> <span class="token string">&quot;granted&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token comment">// 已同意，开始发送通知</span>\n<span class="token operator">...</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>permission <span class="token operator">==</span> <span class="token string">&quot;denied&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token comment">// 不同意，发不了咯</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n<span class="token comment">// 其他状态，可以重新发送授权提示</span>\n    Notification<span class="token punctuation">.</span><span class="token function">requestPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="十二、全屏事件"><a class="header-anchor" href="#十二、全屏事件" aria-hidden="true">#</a> 十二、全屏事件</h2><p>常用于在后台里面需要点击全屏时的事件</p><div class="language-js"><pre><code><span class="token comment">/**\n* @method launchFullScreen 开启全屏\n* @param {Object} elem = document.documentElement 作用的元素\n*/</span>\n<span class="token keyword">const</span> <span class="token function-variable function">launchFullScreen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">elem <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>elem<span class="token punctuation">.</span>requestFullScreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        elem<span class="token punctuation">.</span><span class="token function">requestFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>elem<span class="token punctuation">.</span>mozRequestFullScreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        elem<span class="token punctuation">.</span><span class="token function">mozRequestFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>elem<span class="token punctuation">.</span>webkitRequestFullScreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        elem<span class="token punctuation">.</span><span class="token function">webkitRequestFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token comment">/**\n* @method exitFullScreen 关闭全屏\n*/</span>\n<span class="token keyword">const</span> <span class="token function-variable function">exitFullScreen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>exitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        document<span class="token punctuation">.</span><span class="token function">exitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>mozCancelFullScreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        document<span class="token punctuation">.</span><span class="token function">mozCancelFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>webkitCancelFullScreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        document<span class="token punctuation">.</span><span class="token function">webkitCancelFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="十三、orientation"><a class="header-anchor" href="#十三、orientation" aria-hidden="true">#</a> 十三、orientation</h2><p>监听用户手机设备的旋转方向变化；</p><div class="language-js"><pre><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;orientationchange&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;p&gt;屏幕旋转后的角度值：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>window<span class="token punctuation">.</span>orientation<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>也可以使用媒体查询</p><h2 id="十四、弹窗"><a class="header-anchor" href="#十四、弹窗" aria-hidden="true">#</a> 十四、弹窗</h2><ol><li><code>alert(&quot;&quot;)</code>； 警告框；</li><li><code>confirm(&quot;&quot;)</code>；确认框，返回值布尔型，确认为true，取消为false；</li><li><code>prompt(&quot;&quot;)</code>；可以输入信息，返回值输入的信息，第二个参数默认value值；</li><li><code>print()</code>；打开打印机</li></ol><h2 id="十五、浏览器位置信息"><a class="header-anchor" href="#十五、浏览器位置信息" aria-hidden="true">#</a> 十五、浏览器位置信息</h2><h3 id="可视距离client"><a class="header-anchor" href="#可视距离client" aria-hidden="true">#</a> 可视距离client</h3><ul><li><p>元素可视区域：<code>clientWidth/Height</code>； width/height+padding 不包含边框</p></li><li><p>元素的边框值：<code>clientLeft/Top</code>；</p></li></ul><p>屏幕可视区域： <code>document.documentElement.clientWidth/Height</code></p><h3 id="元素的实际距离offset"><a class="header-anchor" href="#元素的实际距离offset" aria-hidden="true">#</a> 元素的实际距离offset</h3><ul><li><p>元素的实际宽高：<code>offsetWidth/Height</code>； width/height+padding+border; 包含边框</p></li><li><p>元素距离body的宽高：<code>offsetLeft/Top</code> 如果父元素有定位属性，那么就是离父元素边缘的宽高；</p></li></ul><p>浏览器含滚动条的宽度：<code>window.innerWidth</code> 或者 <code>outerWidth</code></p><h3 id="卷起的距离scroll"><a class="header-anchor" href="#卷起的距离scroll" aria-hidden="true">#</a> 卷起的距离scroll</h3><p>元素实际内容的宽高：<code>scrollWidth/height</code>；</p><p>元素被卷起的宽高：<code>scrollLeft/Top</code>；</p><p><code>元素.scrollIntoView()</code> 可以滚动到该元素；往括号里面填写对象：{behavior: &#39;smooth&#39;}可以平滑滚动；</p><h3 id="屏幕的宽度"><a class="header-anchor" href="#屏幕的宽度" aria-hidden="true">#</a> 屏幕的宽度</h3><p><code>window.screen.width</code></p><h3 id="总结"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><ul><li>clientWidth ------ padding+content 可视宽</li><li>offsetWidth ------ content + padding + border 占位宽</li><li>scrollWidth ------ 页面内容的实际宽度</li><li>clientTop ------ border</li><li>offsetTop ------ 相对父元素的之间的距离</li><li>scrollTop ------ 被卷起的高度</li><li>document.body.scrollTop || document.documentElement.scrollTop （body）</li><li>document.documentElement.clientWidth ----- 屏幕宽</li></ul><div class="language-js"><pre><code>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>  <span class="token comment">//不兼容其他浏览器</span>\n兼容办法：\ndocument<span class="token punctuation">.</span>documentElement <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>   <span class="token comment">//两种方式；兼容</span>\n\n<span class="token comment">//老版本的谷歌认为滚动条是body，而其他浏览器认为是html,所以做兼容；</span>\n<span class="token comment">//用来获取页面中被卷起的高度、宽度;</span>\n</code></pre></div><p><img src="https://notecdn.heny.vip/images/js-10_BOM-03.png" alt="image"></p><p><strong>getBoundingClientRect</strong></p><div class="language-js"><pre><code>元素<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">{</span>\n    x<span class="token operator">:</span> <span class="token number">604.875</span><span class="token punctuation">,</span>\n    y<span class="token operator">:</span> <span class="token number">1312</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">701.625</span><span class="token punctuation">,</span>\n    height<span class="token operator">:</span> <span class="token number">31</span><span class="token punctuation">,</span>\n    top<span class="token operator">:</span> <span class="token number">1312</span><span class="token punctuation">,</span>\n    right<span class="token operator">:</span> <span class="token number">1306.5</span><span class="token punctuation">,</span>\n    bottom<span class="token operator">:</span> <span class="token number">1343</span><span class="token punctuation">,</span>  <span class="token comment">// 元素bottom到顶部document的值</span>\n    left<span class="token operator">:</span> <span class="token number">604.875</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>注意：top是距离文档顶部的距离，y则是距离可视窗口（浏览器屏幕）的顶部距离，如果浏览器滚动，top值不变，y值会变 ✅</p><p><img src="https://notecdn.heny.vip/images/js-10_BOM-04.png" alt="image"></p><h3 id="浏览器滚动事件"><a class="header-anchor" href="#浏览器滚动事件" aria-hidden="true">#</a> 浏览器滚动事件</h3><ul><li><p><code>window.onscroll=function(){}</code> 滚动浏览器；</p></li><li><p><code>window.scrollTo(x,y || options)</code> 可以传入值也可以传入对象 滚动窗口到指定位置；</p><p>options支持的属性：</p><ul><li>top：元素要移动的位置横坐标</li><li>left：元素要移动的位置纵坐标</li><li>behavior：元素的运动模式，smooth平滑滚动；</li></ul></li><li><p><code>el.scrollIntoView()</code> 滚动到可视区；</p><ul><li><code>scrollIntoView(true)</code>，如果是true则顶端对齐，如果是false，则底端对齐；</li><li><code>scrollIntoView(options)</code>，包含以下属性对象： <ul><li>behavior：运动模式，smooth，平滑滚动</li><li>block：垂直对齐方式，值可以是：start、center、end或nearest</li><li>inline：水平方向对齐方式，值可以是：start、center、end或nearest</li></ul></li></ul></li></ul><p><strong>即插即用的滚动代码</strong></p><p>使用的是缓冲运动，算法是：A = A + (B - A) / 2</p><div class="language-js"><pre><code><span class="token comment">/**\n*@param {Number} A  起始位置\n*@param {Number} B  目标位置\n*@param {Number} rate  缓动速率\n*@param {Function} callback {value,boolean{true: 滚动完成,false: 正在滚动}} 变化位置回调,value变化值;\n*/</span>\nMath<span class="token punctuation">.</span><span class="token function-variable function">easeout</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token constant">B</span><span class="token punctuation">,</span> rate<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">A</span> <span class="token operator">==</span> <span class="token constant">B</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> <span class="token constant">A</span> <span class="token operator">!=</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token constant">B</span> <span class="token operator">=</span> <span class="token constant">B</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  rate <span class="token operator">=</span> rate <span class="token operator">||</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">var</span> <span class="token function-variable function">step</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token constant">A</span> <span class="token operator">=</span> <span class="token constant">A</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token constant">B</span> <span class="token operator">-</span> <span class="token constant">A</span><span class="token punctuation">)</span> <span class="token operator">/</span> rate<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">A</span> <span class="token operator">&lt;</span> <span class="token constant">B</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 当等于B时也不会触发;</span>\n      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 如果没有滚动完成则继续调用该函数</span>\n    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function">step</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> doc <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">?</span> document<span class="token punctuation">.</span>body <span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>\nMath<span class="token punctuation">.</span><span class="token function">easeout</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span>scrollTop<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">//实时更改位置, 位置变化的回调函数;</span>\n    doc<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> value\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="十五、平滑滚动"><a class="header-anchor" href="#十五、平滑滚动" aria-hidden="true">#</a> 十五、平滑滚动</h2><ol><li>scroll-behavior: smooth，平滑滚动，给html和body加，或者给滚动的父元素加；</li><li>scroll-snap属性：</li></ol><p>滚动窗口使用的：scroll-snap-type、scroll-padding；</p><p>滚动子元素使用的：scroll-snap-align、scroll-snap-stop、scroll-margin；</p><p>（1）scroll-snap-type</p><p>属性指定能不能去捕捉当前滚动的窗口并让它对齐，以及所执行的方向跟严格程度；</p><p>对齐方向属性：</p><ul><li>x ：捕捉 X 轴上的位置</li><li>y ：捕捉 Y 轴上的位置</li><li>block ：捕捉块轴上的位置（逻辑意义上与 y 一样）</li><li>inline ：捕捉内联轴上的位置（逻辑意义上与 x 一样）</li><li>both ：捕捉两个方向上的位置</li></ul><p>严格值：</p><ul><li>none ：默认值，Mmmm，啥也不干</li><li>proximity ：一个感性的值，如果元素进入到了容器的捕捉位置范围内，则进行捕捉并滚动，否则就不管，至于这个范围是多少，约莫着 45%的位置吧（手动测的，W3C 没给出具体算法，瞎猜吧，哈哈哈）。</li><li>mandatory ：经常使用的值，强制性的，滚动结束后，一定会强制停在我们指定的地方。</li></ul><p>（2）scroll-snap-align属性指定捕捉窗口要捕捉的子元素位置</p><ul><li>none ：默认值，啥也不干 0.0。</li><li>start ：跟开始位置对齐。</li><li>end ：跟结束位置对齐。</li><li>center ：居中对齐。</li></ul><p>（3）scroll-snap-stop 用来控制到达这些位置之后是否被捕获，还是到了指定的位置才被捕获；</p><ul><li>normal ：默认值，滚动的时候，可以忽略捕捉位置。</li><li>always ：滚动的时候，不能忽略捕捉位置，还必须定位到第一个捕捉元素的位置。</li></ul><p>（4）scroll-margin 简写属性，跟margin一样，可以设置元素跟滚动条之间的外边框大小，可用值四个，scroll-margin-top/bottom/left/right</p><p>（5）scroll-padding 跟scroll-margin类似；</p><h2 id="十六、onresize自适应布局"><a class="header-anchor" href="#十六、onresize自适应布局" aria-hidden="true">#</a> 十六、onresize自适应布局</h2><div class="language-js"><pre><code>window<span class="token punctuation">.</span><span class="token function-variable function">onresize</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment">// 当页面窗口发生变化时触发；</span>\n</code></pre></div><p>自适应布局使用；</p><div class="language-js"><pre><code>window<span class="token punctuation">.</span>onload <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function-variable function">onresize</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>   <span class="token comment">// 通过判断不同的设备,执行不同的页面,通过navigate来判断;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="高频面试题"><a class="header-anchor" href="#高频面试题" aria-hidden="true">#</a> 高频面试题</h2><p>● 什么是 window 对象 ? 什么是 document 对象 ?</p><p>● offsetWidth、clientWidth、scrollTop 的区别？</p><p>● 如何获取 url 地址中搜索内容？</p>',130);o.render=function(s,t,o,e,c,l){return n(),a("div",null,[p])};export default o;export{t as __pageData};

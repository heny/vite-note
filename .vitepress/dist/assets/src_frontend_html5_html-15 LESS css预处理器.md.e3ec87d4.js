import{o as n,c as s,d as a}from"./app.246f1876.js";const p='{"title":"html-15 css预处理器","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、SCSS","slug":"一、scss"},{"level":3,"title":"定义变量","slug":"定义变量"},{"level":3,"title":"&引用自身","slug":"引用自身"},{"level":3,"title":"@mixin混合器","slug":"mixin混合器"},{"level":3,"title":"选择器继承","slug":"选择器继承"},{"level":3,"title":"插值语句：#{}","slug":"插值语句："},{"level":3,"title":"控制语句","slug":"控制语句"},{"level":3,"title":"@each","slug":"each"},{"level":3,"title":"@while","slug":"while"},{"level":3,"title":"常用工具函数","slug":"常用工具函数"},{"level":2,"title":"二、less","slug":"二、less"},{"level":3,"title":"注释","slug":"注释"},{"level":3,"title":"import 导入样式","slug":"import-导入样式"},{"level":3,"title":"变量定义","slug":"变量定义"},{"level":3,"title":"嵌套使用","slug":"嵌套使用"},{"level":3,"title":"混入","slug":"混入"},{"level":3,"title":"混入参数","slug":"混入参数"},{"level":3,"title":"@arguments变量","slug":"arguments变量"},{"level":3,"title":"extend","slug":"extend"},{"level":3,"title":"运算","slug":"运算"},{"level":3,"title":"函数","slug":"函数"},{"level":3,"title":"循环","slug":"循环"},{"level":2,"title":"三、Stylus","slug":"三、stylus"},{"level":3,"title":"安装","slug":"安装"},{"level":3,"title":"特点","slug":"特点"},{"level":3,"title":"使用变量","slug":"使用变量"},{"level":3,"title":"使用函数","slug":"使用函数"},{"level":3,"title":"使用选择器","slug":"使用选择器"},{"level":3,"title":"使用插值","slug":"使用插值"},{"level":3,"title":"条件判断","slug":"条件判断"},{"level":3,"title":"导入文件","slug":"导入文件"},{"level":3,"title":"穿透","slug":"穿透"}],"relativePath":"src/frontend/html5/html-15 LESS css预处理器.md","lastUpdated":1615699077447}',t={},o=a('<h1 id="html-15-css预处理器"><a class="header-anchor" href="#html-15-css预处理器" aria-hidden="true">#</a> html-15 css预处理器</h1><p>CSS 预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为 CSS 增加了一些编程的特性，将 CSS 作为目标生成文件，然后开发者就只要使用这种语言进行编码工作。</p><p>使用CSS预处理器语言,可以让你的CSS更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处。</p><p>目前CSS 预处理器技术已经非常的成熟，而且也涌现出了很多种不同的CSS 预处理器语言，其中比较优秀的有LESS、Sass（SCSS）等等</p><p>Less 包含一套自定义的语法及一个解析器，用户根据这些语法定义自己的样式规则，这些规则最终会通过解析器，编译生成对应的 CSS 文件,只有在被编译后才能够被浏览器识别使用。预处理编译工具koala</p><h2 id="一、scss"><a class="header-anchor" href="#一、scss" aria-hidden="true">#</a> 一、SCSS</h2><h3 id="定义变量"><a class="header-anchor" href="#定义变量" aria-hidden="true">#</a> 定义变量</h3><div class="language-scss"><pre><code><span class="token property"><span class="token variable">$color</span></span><span class="token punctuation">:</span> #f00<span class="token punctuation">;</span>   <span class="token comment">// 在scss中使用$符定义变量</span>\n<span class="token selector">.txt</span><span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="引用自身"><a class="header-anchor" href="#引用自身" aria-hidden="true">#</a> &amp;引用自身</h3><blockquote><p>对于BEM规范可以直接引用</p></blockquote><div class="language-scss"><pre><code><span class="token selector">.test</span><span class="token punctuation">{</span>\n    <span class="token selector"><span class="token parent important">&amp;</span>__name</span><span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment">//相当于.test__name</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="mixin混合器"><a class="header-anchor" href="#mixin混合器" aria-hidden="true">#</a> @mixin混合器</h3><blockquote><p>复用代码</p></blockquote><p>使用<code>@mixin</code>定义，使用<code>@include</code>使用；</p><div class="language-scss"><pre><code><span class="token comment">// 普通使用</span>\n<span class="token keyword">@mixin</span> <span class="token selector">danger</span><span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.notice</span><span class="token punctuation">{</span>\n    <span class="token keyword">@include</span> danger\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 传参使用</span>\n<span class="token keyword">@mixin</span> <span class="token function">danger</span><span class="token punctuation">(</span><span class="token property"><span class="token variable">$col</span></span><span class="token punctuation">:</span>#e22<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$col</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.notice</span><span class="token punctuation">{</span>\n    <span class="token keyword">@include</span> <span class="token function">danger</span><span class="token punctuation">(</span>#d33<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 多个参数时</span>\n<span class="token keyword">@mixin</span> <span class="token function">colors</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span> <span class="token variable">$background</span><span class="token punctuation">,</span> <span class="token variable">$border</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$text</span><span class="token punctuation">;</span>\n <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$background</span><span class="token punctuation">;</span>\n <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token variable">$border</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token property"><span class="token variable">$values</span></span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">,</span> #00ff00<span class="token punctuation">,</span> #0000ff<span class="token punctuation">;</span>\n<span class="token selector">.primary </span><span class="token punctuation">{</span>\n <span class="token keyword">@include</span> <span class="token function">colors</span><span class="token punctuation">(</span><span class="token variable">$values</span>...<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 编译</span>\n<span class="token selector">.primary </span><span class="token punctuation">{</span>\n <span class="token property">color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>\n <span class="token property">background-color</span><span class="token punctuation">:</span> #00ff00<span class="token punctuation">;</span>\n <span class="token property">border-color</span><span class="token punctuation">:</span> #0000ff<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 参数使用...全部使用，</span>\n<span class="token keyword">@mixin</span> <span class="token function">box-shadow</span><span class="token punctuation">(</span><span class="token variable">$shadows</span>...<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> <span class="token variable">$shadows</span><span class="token punctuation">;</span>\n <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token variable">$shadows</span><span class="token punctuation">;</span>\n <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token variable">$shadows</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.shadows </span><span class="token punctuation">{</span>\n <span class="token keyword">@include</span> <span class="token function">box-shadow</span><span class="token punctuation">(</span>0px 4px 5px #666<span class="token punctuation">,</span> 2px 6px 10px #999<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 编译</span>\n<span class="token selector">.shadowed </span><span class="token punctuation">{</span>\n <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> 0px 4px 5px #666<span class="token punctuation">,</span> 2px 6px 10px #999<span class="token punctuation">;</span>\n <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0px 4px 5px #666<span class="token punctuation">,</span> 2px 6px 10px #999<span class="token punctuation">;</span>\n <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 4px 5px #666<span class="token punctuation">,</span> 2px 6px 10px #999<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="选择器继承"><a class="header-anchor" href="#选择器继承" aria-hidden="true">#</a> 选择器继承</h3><p>对于<code>mixin</code>使用的，会在每个使用了<code>mixin</code>的css里面都添加对应的样式，对于@extend继承的，则是将需要继承的类添加到一起，成为群组选择器</p><p>占位符输出不会包含定义的类；</p><div class="language-scss"><pre><code><span class="token comment">// 直接使用</span>\n<span class="token selector">.note</span><span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.danger</span><span class="token punctuation">{</span>\n    <span class="token keyword">@extend</span> .note<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 输出：.note, .danger{}</span>\n\n<span class="token comment">// 占位符</span>\n<span class="token selector"><span class="token placeholder">%note</span></span><span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token selector">.danger</span><span class="token punctuation">{</span>\n    <span class="token keyword">@extend</span> <span class="token placeholder selector">%note</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// 输出：.danger {}</span>\n</code></pre></div><h3 id="插值语句："><a class="header-anchor" href="#插值语句：" aria-hidden="true">#</a> 插值语句：#{}</h3><div class="language-scss"><pre><code><span class="token property"><span class="token variable">$name</span></span><span class="token punctuation">:</span> foo<span class="token punctuation">;</span>\n<span class="token property"><span class="token variable">$attr</span></span><span class="token punctuation">:</span> border<span class="token punctuation">;</span>\n<span class="token selector">p.<span class="token variable">#{$name}</span></span><span class="token punctuation">{</span>\n    <span class="token property"><span class="token variable">#{$attr}</span>-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 编译</span>\n<span class="token selector">p.foo</span><span class="token punctuation">{</span>\n    <span class="token property"><span class="token variable">#{$attr}</span>-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="控制语句"><a class="header-anchor" href="#控制语句" aria-hidden="true">#</a> 控制语句</h3><h4 id="if-，只能使用-；"><a class="header-anchor" href="#if-，只能使用-；" aria-hidden="true">#</a> @if()，只能使用==；</h4><div class="language-scss"><pre><code><span class="token selector">p </span><span class="token punctuation">{</span>\n <span class="token keyword">@if</span> <span class="token selector">1 + 1 == 2 </span><span class="token punctuation">{</span> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n <span class="token keyword">@if</span> <span class="token selector">5 &lt; 3 </span><span class="token punctuation">{</span> <span class="token property">border</span><span class="token punctuation">:</span> 2px dotted<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n <span class="token keyword">@if</span> <span class="token selector">null  </span><span class="token punctuation">{</span> <span class="token property">border</span><span class="token punctuation">:</span> 3px double<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 编译</span>\n<span class="token selector">p </span><span class="token punctuation">{</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid <span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// @else</span>\n<span class="token property"><span class="token variable">$type</span></span><span class="token punctuation">:</span> monster<span class="token punctuation">;</span>\n<span class="token selector">p </span><span class="token punctuation">{</span>\n    <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$type</span> == ocean </span><span class="token punctuation">{</span>\n\n   <span class="token punctuation">}</span> <span class="token keyword">@else if</span> <span class="token selector"><span class="token variable">$type</span> == matador </span><span class="token punctuation">{</span>\n\n   <span class="token punctuation">}</span> <span class="token keyword">@else</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h4 id="for"><a class="header-anchor" href="#for" aria-hidden="true">#</a> @for</h4><p>格式：<code>@for $var from &lt;start&gt; through &lt;end&gt;</code></p><p>或：<code>@for $var from &lt;start&gt; to &lt;end&gt;</code></p><p>使用through和to的区别： * through包含start和end的值 * to只包含start的值，不包含end的值，to比through少执行一次；</p><div class="language-scss"><pre><code><span class="token keyword">@for</span> <span class="token variable">$i</span> <span class="token keyword">from</span> 1 <span class="token keyword">through</span> <span class="token selector">3 </span><span class="token punctuation">{</span>\n    <span class="token selector">.item-<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 2em <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="each"><a class="header-anchor" href="#each" aria-hidden="true">#</a> @each</h3><p>格式：<code>$var in &lt;list&gt;</code></p><div class="language-scss"><pre><code><span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$animal</span> in puma,sea-slug,egret </span><span class="token punctuation">{</span>\n    <span class="token selector">.<span class="token variable">#{$animal}</span>-icon </span><span class="token punctuation">{</span>\n       <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">&#39;/images/#{animal}.png&#39;</span><span class="token punctuation">)</span>\n   <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 编译</span>\n<span class="token selector">.puma-icon </span><span class="token punctuation">{</span>\n <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">&#39;/images/puma.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token selector">.sea-slug-icon </span><span class="token punctuation">{</span>\n <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">&#39;/images/sea-slug.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token selector">.egret-icon </span><span class="token punctuation">{</span>\n <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">&#39;/images/egret.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token selector">.salamander-icon </span><span class="token punctuation">{</span>\n <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">&#39;/images/salamander.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token comment">// 当多个变量数组时</span>\n<span class="token keyword">@each</span> <span class="token variable">$animal</span><span class="token punctuation">,</span> <span class="token variable">$color</span><span class="token punctuation">,</span> <span class="token variable">$cursor</span> in <span class="token punctuation">(</span>puma<span class="token punctuation">,</span> black<span class="token punctuation">,</span> default<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                                 <span class="token punctuation">(</span>sea-slug<span class="token punctuation">,</span> blue<span class="token punctuation">,</span> pointer<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                                 <span class="token punctuation">(</span>egret<span class="token punctuation">,</span> white<span class="token punctuation">,</span> move<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n <span class="token selector">.<span class="token variable">#{$animal}</span>-icon </span><span class="token punctuation">{</span>\n   <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">&#39;/images/#{$animal}.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token property">border</span><span class="token punctuation">:</span> 2px solid <span class="token variable">$color</span><span class="token punctuation">;</span>\n   <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token variable">$cursor</span><span class="token punctuation">;</span>\n <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 编译</span>\n<span class="token selector">.puma-icon </span><span class="token punctuation">{</span>\n <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">&#39;/images/puma.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token property">border</span><span class="token punctuation">:</span> 2px solid black<span class="token punctuation">;</span>\n <span class="token property">cursor</span><span class="token punctuation">:</span> default<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token selector">.sea-slug-icon </span><span class="token punctuation">{</span>\n <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">&#39;/images/sea-slug.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token property">border</span><span class="token punctuation">:</span> 2px solid blue<span class="token punctuation">;</span>\n <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token selector">.egret-icon </span><span class="token punctuation">{</span>\n <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">&#39;/images/egret.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token property">border</span><span class="token punctuation">:</span> 2px solid white<span class="token punctuation">;</span>\n <span class="token property">cursor</span><span class="token punctuation">:</span> move<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token comment">// 多重赋值时</span>\n<span class="token keyword">@each</span> <span class="token variable">$header</span><span class="token punctuation">,</span> <span class="token variable">$size</span> in <span class="token punctuation">(</span><span class="token property">h1</span><span class="token punctuation">:</span> 2em<span class="token punctuation">,</span> <span class="token property">h2</span><span class="token punctuation">:</span> 1.5em<span class="token punctuation">,</span> <span class="token property">h3</span><span class="token punctuation">:</span> 1.2em<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n <span class="token selector"><span class="token variable">#{$header}</span> </span><span class="token punctuation">{</span>\n   <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">$size</span><span class="token punctuation">;</span>\n <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 编译</span>\n<span class="token selector">h1 </span><span class="token punctuation">{</span>\n <span class="token property">font-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token selector">h2 </span><span class="token punctuation">{</span>\n <span class="token property">font-size</span><span class="token punctuation">:</span> 1.5em<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token selector">h3 </span><span class="token punctuation">{</span>\n <span class="token property">font-size</span><span class="token punctuation">:</span> 1.2em<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n</code></pre></div><p>示例：间隔类名</p><div class="language-scss"><pre><code><span class="token keyword">@each</span> <span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$prop</span> in <span class="token punctuation">(</span><span class="token property">p</span><span class="token punctuation">:</span>padding<span class="token punctuation">,</span><span class="token property">pt</span><span class="token punctuation">:</span>padding-top<span class="token punctuation">,</span><span class="token property">pr</span><span class="token punctuation">:</span>padding-right<span class="token punctuation">,</span><span class="token property">pb</span><span class="token punctuation">:</span>padding-bottom<span class="token punctuation">,</span><span class="token property">pl</span><span class="token punctuation">:</span>padding-left<span class="token punctuation">)</span><span class="token punctuation">{</span>\n <span class="token keyword">@for</span> <span class="token variable">$i</span> <span class="token keyword">from</span> 0 <span class="token keyword">through</span> <span class="token selector">30 </span><span class="token punctuation">{</span>\n    <span class="token selector">.<span class="token variable">#{$name}</span><span class="token variable">#{$i}</span></span><span class="token punctuation">{</span>\n     <span class="token property"><span class="token variable">#{$prop}</span></span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px<span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 编译(可以去https://www.sassmeister.com/查看)</span>\n<span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span><span class="token punctuation">}</span>\n</code></pre></div><h3 id="while"><a class="header-anchor" href="#while" aria-hidden="true">#</a> @while</h3><div class="language-scss"><pre><code><span class="token property"><span class="token variable">$i</span></span><span class="token punctuation">:</span> 6<span class="token punctuation">;</span>\n<span class="token keyword">@while</span> <span class="token selector"><span class="token variable">$i</span> &gt; 0 </span><span class="token punctuation">{</span>\n    <span class="token selector">.item-<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 2em <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token property"><span class="token variable">$i</span></span><span class="token punctuation">:</span> <span class="token variable">$i</span> <span class="token operator">-</span> 2<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="常用工具函数"><a class="header-anchor" href="#常用工具函数" aria-hidden="true">#</a> 常用工具函数</h3><div class="language-scss"><pre><code><span class="token property"><span class="token variable">$base_width</span></span><span class="token punctuation">:</span> 750<span class="token punctuation">;</span> <span class="token comment">// 设计稿宽度</span>\n<span class="token property"><span class="token variable">$actual-max-width</span></span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span> <span class="token comment">// 实际最大宽度</span>\n\n<span class="token comment">/* 根据设计稿中提供的宽度，计算出需要的 vw */</span>\n<span class="token keyword">@function</span> <span class="token function">px2vw</span><span class="token punctuation">(</span><span class="token variable">$px</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">@return</span> #<span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token variable">$px</span>/<span class="token variable">$base_width</span><span class="token punctuation">)</span> <span class="token operator">*</span> 100<span class="token punctuation">}</span>vw<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/* 由于限制了最大宽度，所以在采用vw布局时，需要限制最大高度 */</span>\n<span class="token keyword">@function</span> <span class="token function">getMaxHeight</span><span class="token punctuation">(</span><span class="token variable">$px</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">@return</span> #<span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token variable">$actual-max-width</span>/<span class="token variable">$base_width</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token variable">$px</span><span class="token punctuation">}</span>px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="二、less"><a class="header-anchor" href="#二、less" aria-hidden="true">#</a> 二、less</h2><h3 id="注释"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h3><p>less有两中注释风格：</p><ul><li><p>标准的注释风格：<code>/**/</code>，会保留到编译后的文件。</p></li><li><p>单行注释：<code>//</code> 不会保留到编译后的文件。</p></li></ul><ol><li><p>koala有两种编译方式：</p><p><code>normal</code> 按照完整格式编译</p><p><code>compress</code> 压缩编译模式，多余的不显示。</p></li></ol><h3 id="import-导入样式"><a class="header-anchor" href="#import-导入样式" aria-hidden="true">#</a> import 导入样式</h3><p>引入样式有两种方式：</p><ul><li><p>引入css文件：<code>@import &quot;css文件路径&quot;</code>，空格和后缀名不能省略。</p></li><li><p>直接引入less文件：<code>@import &quot;style&quot;</code>，引入less文件可以省略扩展名。</p></li></ul><p>编译后倒入的文件会和当前文件内容合并。</p><h3 id="变量定义"><a class="header-anchor" href="#变量定义" aria-hidden="true">#</a> 变量定义</h3><p>变量以@开头，变量名与变量值之间用冒号隔开，</p><p>好处是更换风格方便。直接修改变量名的值就可以了。</p><p>使用变量直接@变量名，修改变量名可以直接修改被使用的属性值，编译之后直接是16进制的文件。</p><ul><li><p>变量可以使用字符串，使用时必须在@之后加{};</p><p>@side : left; border-@{side}: 5px solid black;</p></li><li><p>变量可以使用图片路径,使用路径时需要添加引号。</p><p>@images: &quot;../img&quot;; background: url(&quot;@{images}/white-sand.png&quot;);</p></li></ul><h3 id="嵌套使用"><a class="header-anchor" href="#嵌套使用" aria-hidden="true">#</a> 嵌套使用</h3><p>选择器的嵌套：</p><p>可以在父元素选择器里面直接写子元素选择器嵌套使用，编译后的css文件会按照标准格式显示出来。</p><p>在嵌套的代码块内，可以使用&amp;引用父元素，</p><p>选择器里面还可以嵌套自己本身，用&amp;引用自己。</p><h3 id="混入"><a class="header-anchor" href="#混入" aria-hidden="true">#</a> 混入</h3><p>混入在一个class中引入另一个定义好的class，直接增加另外一个class的属性。</p><p>定义一些通用的属性为一个class，使用的时候直接.class名;。</p><div class="language-css"><pre><code><span class="token selector">.bordered</span> <span class="token punctuation">{</span>    \n    <span class="token property">border-top</span><span class="token punctuation">:</span> dotted 1px black<span class="token punctuation">;</span>\n    <span class="token property">border-bottom</span><span class="token punctuation">:</span> solid 2px black<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>调用：</p><div class="language-less"><pre><code><span class="token selector">a</span><span class="token punctuation">{</span>\n   <span class="token property">color</span><span class="token punctuation">:</span> #111<span class="token punctuation">;</span>\n   <span class="token mixin-usage function">.bordered</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> \n</code></pre></div><p>编译后会自动给a标签加入上面定义的属性。</p><h3 id="混入参数"><a class="header-anchor" href="#混入参数" aria-hidden="true">#</a> 混入参数</h3><div class="language-css"><pre><code>.bordeRadius <span class="token punctuation">(</span><span class="token atrule"><span class="token rule">@radius</span><span class="token punctuation">:</span>20px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n     <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> <span class="token atrule"><span class="token rule">@radius</span><span class="token punctuation">;</span></span>\n     <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> <span class="token atrule"><span class="token rule">@radius</span><span class="token punctuation">;</span></span>\n     <span class="token property">-o-border-radius</span><span class="token punctuation">:</span><span class="token atrule"><span class="token rule">@radius</span><span class="token punctuation">;</span></span>\n     <span class="token property">-ms-border-radius</span><span class="token punctuation">:</span><span class="token atrule"><span class="token rule">@radius</span><span class="token punctuation">;</span></span>\n     <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token atrule"><span class="token rule">@radius</span><span class="token punctuation">;</span></span> \n<span class="token punctuation">}</span>\n</code></pre></div><p>//前面是类名，括号里面是变量值，用来传值的; //调用时直接使用调用类名的方式，如果有给类名设置默认值， //直接就是默认值的值，需要修改里面的值可以直接括号写值。 //编译后直接加入类名里面的代码</p><h3 id="arguments变量"><a class="header-anchor" href="#arguments变量" aria-hidden="true">#</a> @arguments变量</h3><blockquote><p>代表所有参数。</p></blockquote><div class="language-css"><pre><code>.box-shadow <span class="token punctuation">(</span><span class="token atrule"><span class="token rule">@x</span><span class="token punctuation">:</span> 0<span class="token punctuation">,</span> @<span class="token property">y</span><span class="token punctuation">:</span> 0<span class="token punctuation">,</span> @<span class="token property">blur</span><span class="token punctuation">:</span> 1px<span class="token punctuation">,</span> @<span class="token property">color</span><span class="token punctuation">:</span> #000<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n    <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> <span class="token atrule"><span class="token rule">@arguments</span><span class="token punctuation">;</span></span>\n    <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token atrule"><span class="token rule">@arguments</span><span class="token punctuation">;</span></span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token atrule"><span class="token rule">@arguments</span><span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>//前面写类名，括号里面写用到的值,前面加@属性名，多个用逗号隔开。 //如果需要写默认值，需要用冒号隔开。</p><div class="language-css"><pre><code><span class="token selector">.box</span><span class="token punctuation">{</span>\n .<span class="token function">box-shadow</span><span class="token punctuation">(</span>2px<span class="token punctuation">,</span> 5px<span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token punctuation">}</span> \n<span class="token selector">编译后： \n.box</span> <span class="token punctuation">{</span>\n <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> 2px 5px 1px #000000<span class="token punctuation">;</span>\n <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 2px 5px 1px #000000<span class="token punctuation">;</span>\n <span class="token property">box-shadow</span><span class="token punctuation">:</span> 2px 5px 1px #000000<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="extend"><a class="header-anchor" href="#extend" aria-hidden="true">#</a> extend</h3><p>extend伪类来实现样式的继承使用</p><p>直接写类名，会将类名里面所有的属性加入选择器里面的属性。</p><p>写了extend伪类之后，编译之后会将该组合选择类名的组加入到一起，其他单独元素另起一个类名写。</p><p>好处是少了很多行代码。</p><h3 id="运算"><a class="header-anchor" href="#运算" aria-hidden="true">#</a> 运算</h3><p>LESS支持一些算术运算，例如加号(+)，减号( - )，乘法(*)和除法(/)的操作 只需写好表达式，编译时会计算结果; less会为你自动推断数值的单位，所以不必每一个值都加上单位 注意：涉及优先级时以()进行优先级运算</p><h3 id="函数"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h3><p>转换颜色、处理字符串合进行算术运算的函数。</p><p>颜色：<code>lighten()</code> 减淡，<code>darken()</code>加深</p><div class="language-css"><pre><code><span class="token selector">.bg_light</span> <span class="token punctuation">{</span>\n   <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n   <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">lighten</span><span class="token punctuation">(</span><span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">,</span> 20%<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.bg_darken</span> <span class="token punctuation">{</span>   \n    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n   <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">darken</span><span class="token punctuation">(</span>blue<span class="token punctuation">,</span> 20%<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><code>percentage</code> 将浮点数转换为百分比字符串。 参数：number- 一个浮点数。 返回： string (字符串) 代码示例</p><div class="language-css"><pre><code><span class="token selector">.main</span><span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span><span class="token function">percentage</span><span class="token punctuation">(</span>100px/200px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token selector">;\n编译为css:\n.main</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="循环"><a class="header-anchor" href="#循环" aria-hidden="true">#</a> 循环</h3><div class="language-less"><pre><code><span class="token selector">.loop(<span class="token variable">@n</span>, <span class="token variable">@i</span>: 1) when (<span class="token variable">@i</span> &lt; <span class="token variable">@n</span>)</span><span class="token punctuation">{</span>\n  <span class="token selector">.demo-@{i}</span><span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  .<span class="token function">loop</span><span class="token punctuation">(</span><span class="token variable">@n</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token variable">@i</span><span class="token operator">+</span>1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n.<span class="token function">loop</span><span class="token punctuation">(</span>100<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre></div><h2 id="三、stylus"><a class="header-anchor" href="#三、stylus" aria-hidden="true">#</a> 三、Stylus</h2><p>Stylus是一个CSS预处理器。富于表现力、动态的、健壮的 CSS</p><h3 id="安装"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><p><code>npm install stylus –save</code></p><p><code>npm install stylus-loader --save</code></p><h3 id="特点"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h3><p>冒号可有可无 分号可有可无 逗号可有可无 括号可有可无</p><p>全靠空格和缩进来区分</p><h3 id="使用变量"><a class="header-anchor" href="#使用变量" aria-hidden="true">#</a> 使用变量</h3><p>$不是必须的，但加上可以很醒目的知道它是个变量</p><p>$font-size = 14px</p><div class="language-css"><pre><code>body\n   font font-size Arial<span class="token punctuation">,</span> sans-seri\n</code></pre></div><h3 id="使用函数"><a class="header-anchor" href="#使用函数" aria-hidden="true">#</a> 使用函数</h3><div class="language-less"><pre><code><span class="token selector">fontS()</span><span class="token punctuation">{</span>\n   font<span class="token operator">-</span>size 30px\n   font<span class="token operator">-</span>style normal\n   color #00ff00\n   font<span class="token operator">-</span>weight 400\n<span class="token punctuation">}</span>\n\nh1\n   <span class="token function">fontS</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n   background $bgColor<span class="token punctuation">;</span>\n</code></pre></div><h3 id="使用选择器"><a class="header-anchor" href="#使用选择器" aria-hidden="true">#</a> 使用选择器</h3><div class="language-less"><pre><code>textarea\ninput\n   color #A7A7A7\n   &amp;<span class="token punctuation">:</span>hover\n       color #000\n   等同于：textarea<span class="token punctuation">,</span>input\n</code></pre></div><h3 id="使用插值"><a class="header-anchor" href="#使用插值" aria-hidden="true">#</a> 使用插值</h3><div class="language-less"><pre><code><span class="token selector">vendor(prop, args)\n   -webkit-</span><span class="token punctuation">{</span>prop<span class="token punctuation">}</span> <span class="token selector">args\n   -moz-</span><span class="token punctuation">{</span>prop<span class="token punctuation">}</span> <span class="token selector">args</span>\n   <span class="token punctuation">{</span>prop<span class="token punctuation">}</span> args\n\n<span class="token function">border-radius</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n   <span class="token function">vendor</span><span class="token punctuation">(</span><span class="token string">&#39;border-radius&#39;</span><span class="token punctuation">,</span> 50%<span class="token punctuation">)</span>\n<span class="token function">box-shadow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n   <span class="token function">vendor</span><span class="token punctuation">(</span><span class="token string">&#39;box-shadow&#39;</span><span class="token punctuation">,</span> 5px 5px red<span class="token punctuation">)</span>\n</code></pre></div><h3 id="条件判断"><a class="header-anchor" href="#条件判断" aria-hidden="true">#</a> 条件判断</h3><div class="language-less"><pre><code><span class="token function">box</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>margin<span class="token operator">-</span>only=false<span class="token punctuation">)</span>\nif margin<span class="token operator">-</span>only\n    margin x y\nelse\n    padding x y\np\n<span class="token function">box</span><span class="token punctuation">(</span>5px<span class="token punctuation">,</span>10px<span class="token punctuation">,</span>true<span class="token punctuation">)</span>\n</code></pre></div><h3 id="导入文件"><a class="header-anchor" href="#导入文件" aria-hidden="true">#</a> 导入文件</h3><p>推荐方案</p><p>公共的样式文件如reset.css使用JS方式导入在App.vue中,所有组件共享！</p><p>公共的.styl文件通过@import “xx.styl” 添加到需要的Vue文件中单独使用!</p><h3 id="穿透"><a class="header-anchor" href="#穿透" aria-hidden="true">#</a> 穿透</h3><p>仅支持stylus使用；</p><p>当遇到无法修改的样式时，使用&gt;&gt;&gt;进行穿透；</p><p><code>.btn &gt;&gt;&gt; .swiper-tab-tem{}</code>；优先级是最高的，比important还高；</p><p>父元素下的子元素颜色无法修改时使用；</p>',116);t.render=function(a,p,t,e,c,l){return n(),s("div",null,[o])};export default t;export{p as __pageData};

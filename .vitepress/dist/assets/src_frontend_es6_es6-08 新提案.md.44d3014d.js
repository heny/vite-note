import{o as a,c as n,d as s}from"./app.5dd0cd0b.js";const e='{"title":"es6-08 新提案","description":"","frontmatter":{},"headers":[{"level":2,"title":"ES2020","slug":"es2020"},{"level":2,"title":"可选链","slug":"可选链"},{"level":3,"title":"语法","slug":"语法"}],"relativePath":"src/frontend/es6/es6-08 新提案.md","lastUpdated":1615699077438}',p={},t=s('<h1 id="es6-08-新提案"><a class="header-anchor" href="#es6-08-新提案" aria-hidden="true">#</a> es6-08 新提案</h1><h2 id="es2020"><a class="header-anchor" href="#es2020" aria-hidden="true">#</a> ES2020</h2><ol><li><p>可选链：?</p><p>之前：obj.a.b 当找不到a再找b，报错</p><p>现在：obj.a?.b 找不到a就不找b</p></li><li><p>双问号：??，false、0、&quot;&quot;都为真；</p><div class="language-js"><pre><code><span class="token number">0</span> <span class="token operator">??</span> <span class="token number">1</span> <span class="token comment">// 0</span>\n</code></pre></div></li><li><p>动态import</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">loadHeader</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./header&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">module</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li><li><p><code>promise.allSettled</code></p><p>解决promise.all其中reject时就返回了，allSettled则会请求完所有的接口，最终返回resolve，里面为所有结果，包括成功和失败；</p></li><li><p><code>globalThis</code>：解决node环境没有window，需要用global，现在会根据环境判断使用window或global；</p></li><li><p><code>BigInt</code>：整数类型</p></li><li><p><code>String.matchall</code>：正则匹配将所有的字符串都返回回来，为一个数组</p></li></ol><h2 id="可选链"><a class="header-anchor" href="#可选链" aria-hidden="true">#</a> 可选链</h2><p>配置babel解析：<a href="https://www.jianshu.com/p/bca4ce835caf" target="_blank" rel="noopener noreferrer">https://www.jianshu.com/p/bca4ce835caf</a></p><p>es6教程：<a href="https://es6.ruanyifeng.com/#docs/object#%E9%93%BE%E5%88%A4%E6%96%AD%E8%BF%90%E7%AE%97%E7%AC%A6" target="_blank" rel="noopener noreferrer">https://es6.ruanyifeng.com/#docs/object#%E9%93%BE%E5%88%A4%E6%96%AD%E8%BF%90%E7%AE%97%E7%AC%A6</a></p><h3 id="语法"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h3><div class="language-js"><pre><code>obj<span class="token operator">?.</span>prop\nobj<span class="token operator">?.</span><span class="token punctuation">[</span>expr<span class="token punctuation">]</span>\narr<span class="token operator">?.</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span>\nfunc<span class="token operator">?.</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>\n</code></pre></div>',8);p.render=function(s,e,p,o,c,l){return a(),n("div",null,[t])};export default p;export{e as __pageData};

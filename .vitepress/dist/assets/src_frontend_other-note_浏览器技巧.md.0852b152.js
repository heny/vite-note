import{o as e,c as n,d as t}from"./app.bd8718b4.js";const a='{"title":"浏览器技巧","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、快捷键","slug":"一、快捷键"},{"level":2,"title":"二、小技巧","slug":"二、小技巧"},{"level":2,"title":"三、console的用法","slug":"三、console的用法"},{"level":3,"title":"console对象的所有属性","slug":"console对象的所有属性"},{"level":3,"title":"$符的用法","slug":"符的用法"},{"level":3,"title":"copy","slug":"copy"},{"level":3,"title":"monitor 事件监听","slug":"monitor-事件监听"},{"level":3,"title":"monitorEvents 事件监控","slug":"monitorevents-事件监控"},{"level":3,"title":"JSON.stringify来输出格式","slug":"json-stringify来输出格式"},{"level":3,"title":"对象需要展开","slug":"对象需要展开"},{"level":3,"title":"页面跳转保留控制台输出","slug":"页面跳转保留控制台输出"},{"level":2,"title":"四、断点篇","slug":"四、断点篇"},{"level":3,"title":"快捷键","slug":"快捷键"},{"level":3,"title":"element元素断点","slug":"element元素断点"},{"level":3,"title":"黑匣子","slug":"黑匣子"},{"level":3,"title":"xhr/fetch断点","slug":"xhr-fetch断点"},{"level":2,"title":"五、浏览器插件分享","slug":"五、浏览器插件分享"},{"level":3,"title":"$i 浏览器使用npm插件","slug":"i-浏览器使用npm插件"},{"level":2,"title":"六、codebox","slug":"六、codebox"},{"level":2,"title":"七、修改devtools默认主题","slug":"七、修改devtools默认主题"},{"level":2,"title":"其他技巧","slug":"其他技巧"},{"level":2,"title":"摘抄地址","slug":"摘抄地址"}],"relativePath":"src\\\\frontend\\\\other-note\\\\浏览器技巧.md","lastUpdated":1615699077555}',o={},s=t('<h1 id="浏览器技巧"><a class="header-anchor" href="#浏览器技巧" aria-hidden="true">#</a> 浏览器技巧</h1><h2 id="一、快捷键"><a class="header-anchor" href="#一、快捷键" aria-hidden="true">#</a> 一、快捷键</h2><ul><li>ctrl + R ----- 刷新页面</li><li>ctrl + W ------关闭页面</li><li>ctrl + J ----- 打开下载页面</li><li>ctrl + H -----打开历史记录</li><li>ctrl + K ---- 快捷搜索</li><li>ctrl + 1-9 ---- 快速切换tab</li><li>ctrl + shift + T -------打开上一次关闭的页面</li><li>ctrl + shift + J -------打开f12控制台</li><li>ctrl + shift + C ------快速查看元素</li><li>ctrl + shift + delete --- 清除浏览器历史记录</li></ul><p>f12控制台常用快捷键</p><ul><li><p>ctrl + [ | ] ------切换tab栏</p></li><li><p>ctrl + L ------清除控制台</p></li><li><p>ctrl + shift + M ------打开手机浏览</p></li><li><p>ESC ---- 打开控制台底部的控制栏</p><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-01.png" alt="image"></p></li></ul><h2 id="二、小技巧"><a class="header-anchor" href="#二、小技巧" aria-hidden="true">#</a> 二、小技巧</h2><ol><li><p>通过按ctrl+shfit+c可以选中浮动的元素；</p></li><li><p>打开f12，在elments，按下ctrl+f，可以通过输入选择器来找到选择到的元素；</p></li><li><p>可以通过双击盒模型直接修改border、margin值；</p></li><li><p>在style编辑面板中</p></li></ol><ul><li><p>上方向键 / 下方向键可以使属性值以 1 递增 / 递减</p></li><li><p>ALT + 上方向键 / 下方向键可以使属性值以 0.1 递增 / 递减</p></li><li><p>SHIFT + 上方向键 / 下方向键可以使属性值以 10 递增 / 递减</p></li><li><p>CTRL + 上方向键 / 下方向键可以使属性值以 100 递增 / 递减</p></li></ul><ol start="5"><li>在f12中，通过按住shfit点击颜色，可以切换颜色的显示值；</li></ol><h2 id="三、console的用法"><a class="header-anchor" href="#三、console的用法" aria-hidden="true">#</a> 三、console的用法</h2><h3 id="console对象的所有属性"><a class="header-anchor" href="#console对象的所有属性" aria-hidden="true">#</a> console对象的所有属性</h3><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-02.png" alt="image"></p><div class="language-js"><pre><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;信息是：%s&#39;</span><span class="token punctuation">,</span>str<span class="token punctuation">)</span>；可以直接将str变量放进<span class="token operator">%</span>s位置；\nconsole<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：清空控制台\nconsole<span class="token punctuation">.</span><span class="token function">assert</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 当v为假时,输出后面的字符串,否则无输出</span>\nconsole<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：以table形式输出对象\nconsole<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：以分组形式输出\nconsole<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：以warn形式输出\nconsole<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：以error形式输出\nconsole<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：统计代码被执行的次数\nconsole<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：显示当前执行的堆栈调用路径<span class="token punctuation">,</span>放在最后一个调用的函数中；\nconsole<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：用来计时一个方法运行多长时间，使用timeEnd来结束；\n\nconsole<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&#39;func&#39;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">&#39;func&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 里面名字需要填写一样的;</span>\nconsole<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：直观的展示一个对象的所有属性和方法\n</code></pre></div><p><strong>console.dir</strong></p><p>当输出dom元素时，显示的是dom元素的对象属性，当console.log则是标签；</p><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-03.png" alt="image"></p><p><strong>console.table()</strong></p><p>第一个可以传入对象或数组，第二个参数可选，可以单独放入想要展示的内容；</p><p><img src="https://notecdn.heny.vip/images/console_table.gif" alt="img"></p><h3 id="符的用法"><a class="header-anchor" href="#符的用法" aria-hidden="true">#</a> $符的用法</h3><p>console里面可以直接使用$符获取元素，跟jquery操作方式一样，</p><ul><li>$：相当于querySelector，获取元素</li><li>$$：相当于querySelectorAll，获取一组元素</li><li>$0-4：获取最近5个选择过的dom节点</li><li>$_：返回最近一次表达式执行的结果</li></ul><p>其他简写：</p><ul><li>dir、keys、values</li></ul><p><img src="https://notecdn.heny.vip/images/about$01.gif" alt="image"></p><h3 id="copy"><a class="header-anchor" href="#copy" aria-hidden="true">#</a> copy</h3><p><code>copy(document.body)</code>，将获取到的内容复制到剪贴板，可以粘贴到任意地方</p><p>鼠标对对象使用右键 Store as global variable，可以直接将一个对象给复制到剪贴板</p><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-11.gif" alt="image"></p><h3 id="monitor-事件监听"><a class="header-anchor" href="#monitor-事件监听" aria-hidden="true">#</a> monitor 事件监听</h3><p><code>monitor</code> &amp; <code>unmonitor</code>，接收一个函数名作为参数，当该函数被执行，就会被监听到，unmonitor用来停止监听的；</p><p><img src="https://notecdn.heny.vip/images/image-20200629144106288.png" alt="image-20200629144106288"></p><h3 id="monitorevents-事件监控"><a class="header-anchor" href="#monitorevents-事件监控" aria-hidden="true">#</a> monitorEvents 事件监控</h3><p><code>monitorEvents</code>&amp;<code>unmonitorEvents</code>，一个为监控事件，一个为解除监听，第一个参数为选中的元素，第二个参数为事件，也可以是数组</p><div class="language-js"><pre><code><span class="token function">monitorEvents</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token string">&#39;resize&#39;</span><span class="token punctuation">)</span>\n<span class="token function">monitorEvents</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;scroll&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><p>第二个参数也可以放入类型；</p><table><thead><tr><th>类型</th><th>事件</th></tr></thead><tbody><tr><td>mouse</td><td>&quot;mousedown&quot;, &quot;mouseup&quot;, &quot;click&quot;, &quot;dblclick&quot;, &quot;mousemove&quot;, &quot;mouseover&quot;, &quot;mouseout&quot;, &quot;mousewheel&quot;</td></tr><tr><td>key</td><td>&quot;keydown&quot;, &quot;keyup&quot;, &quot;keypress&quot;, &quot;textInput&quot;</td></tr><tr><td>touch</td><td>&quot;touchstart&quot;, &quot;touchmove&quot;, &quot;touchend&quot;, &quot;touchcancel&quot;</td></tr><tr><td>control</td><td>&quot;resize&quot;, &quot;scroll&quot;, &quot;zoom&quot;, &quot;focus&quot;, &quot;blur&quot;, &quot;select&quot;, &quot;change&quot;, &quot;submit&quot;, &quot;reset&quot;</td></tr></tbody></table><h3 id="json-stringify来输出格式"><a class="header-anchor" href="#json-stringify来输出格式" aria-hidden="true">#</a> JSON.stringify来输出格式</h3><p>使用它的第三个参数，让显示更有格式化效果；</p><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-04.png" alt="image"></p><h3 id="对象需要展开"><a class="header-anchor" href="#对象需要展开" aria-hidden="true">#</a> 对象需要展开</h3><p>当查看对象的时候，需要展开才能查看，大大的影响开发效力</p><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-09.png" alt="image"></p><p>原因：(...)是get/set类的属性，点击后出现是当前的值，不一定输出log的时候的值，如果想直接看log时的值，需要<code>console.log(JSON.parse(JSON.stringify($var)))</code>；</p><h3 id="页面跳转保留控制台输出"><a class="header-anchor" href="#页面跳转保留控制台输出" aria-hidden="true">#</a> 页面跳转保留控制台输出</h3><p>一般用于调试跳转之后输出的内容；</p><p>点击右侧小齿轮，之后开启Preserve log即可；</p><p><img src="https://notecdn.heny.vip/images/image-20200805101534220.png" alt="image-20200805101534220"></p><h2 id="四、断点篇"><a class="header-anchor" href="#四、断点篇" aria-hidden="true">#</a> 四、断点篇</h2><h3 id="快捷键"><a class="header-anchor" href="#快捷键" aria-hidden="true">#</a> 快捷键</h3><ul><li><p><code>f8</code> 过程执行，跳过当前断点继续执行（对循环特别有用，可以跳到下一次循环断点处，直接点击页面上的绿色按钮）</p></li><li><p><code>f10</code> 逐步执行，它会忽略方法体内部，</p></li><li><p><code>f11</code> 细节语句执行，进入方法体内部</p></li><li><p><code>shift + f11</code> 细节语句返回主体函数</p></li></ul><h3 id="element元素断点"><a class="header-anchor" href="#element元素断点" aria-hidden="true">#</a> element元素断点</h3><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-05.png" alt="image"></p><ul><li>subtree moditications：当添加改变删除元素时触发</li><li>Attribute modifications：元素属性改变时触发</li><li>Node removal：移除这个dom元素时触发</li></ul><p>当通过js操作时，会被跳到当前断点；</p><h3 id="黑匣子"><a class="header-anchor" href="#黑匣子" aria-hidden="true">#</a> 黑匣子</h3><p>当我们打断点时，会跳到源码里面绕一大圈，最终找不到我们想要的东西，无法很快定位到错误的地方，chrome提供了一个黑匣子（黑名单），在源码文件点击之后，下次跳转就不会进来了；</p><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-06.png" alt="image"></p><p>还可以到设置中，可以自己加需要忽略的库或文件</p><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-07.png" alt="image"></p><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-08.png" alt="image"></p><p>将以下两个加入到黑匣子，可以解决大部分断点跳插件的问题</p><div class="language-js"><pre><code>node_modules\n\\<span class="token punctuation">.</span>min\n</code></pre></div><h3 id="xhr-fetch断点"><a class="header-anchor" href="#xhr-fetch断点" aria-hidden="true">#</a> xhr/fetch断点</h3><p><img src="https://notecdn.heny.vip/images/add_new_request_breakpoint.png" alt="img"></p><p>也可以直接对network进行断点</p><p><img src="https://notecdn.heny.vip/images/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_15959047639023.png" alt="img"></p><h2 id="五、浏览器插件分享"><a class="header-anchor" href="#五、浏览器插件分享" aria-hidden="true">#</a> 五、浏览器插件分享</h2><ol><li><a href="https://chrome.google.com/webstore/detail/github-hovercard/mmoahbbnojgkclgceahhakhnccimnplk" target="_blank" rel="noopener noreferrer">GitHub Hovercard</a> github增加悬浮窗</li><li><a href="https://chrome.google.com/webstore/detail/adblock-plus-free-ad-bloc/cfhdojbkjhnklbpkdaibdccddilifddb" target="_blank" rel="noopener noreferrer">Adblock Plus</a> 谷歌广告拦截</li><li><a href="https://chrome.google.com/webstore/detail/astar-vpn-free-and-fast-v/jajilbjjinjmgcibalaakngmkilboobh?utm_source=chrome-ntp-icon" target="_blank" rel="noopener noreferrer">Astar</a> 免费翻墙，可看youtube</li><li><a href="https://chrome.google.com/webstore/detail/download-plus/gokgophibdidjjpildcdbfpmcahilaaf?utm_source=chrome-ntp-icon" target="_blank" rel="noopener noreferrer">下载+</a> 下载管理工具</li><li><a href="https://www.octotree.io/" target="_blank" rel="noopener noreferrer">octotree</a> github左侧固定文档树</li><li><a href="https://chrome.google.com/webstore/detail/smartup-gestures/bgjfekefhjemchdeigphccilhncnjldn" target="_blank" rel="noopener noreferrer">smartUp手势</a> 增加鼠标右键支持快捷操作</li><li><a href="https://extension.yunpanjingling.com/" target="_blank" rel="noopener noreferrer">云盘万能钥匙</a> 自动输入百度网盘密钥</li><li><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener noreferrer">Tampermonkey 油猴</a> 支持安装更多的插件插入脚本，非常好用</li><li><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener noreferrer">Infinity 新标签页</a> 新增标签添加快速访问，支持书签关键字搜索</li><li><a href="https://chrome.google.com/webstore/detail/pesticide-for-chrome/bblbgcheenepgnnajgfpiicnbbdmmooh" target="_blank" rel="noopener noreferrer">Pesticide</a> 快速查看页面布局信息</li><li><a href="./[https://chrome.google.com/webstore/detail/一键管理扩展/lboblnfejcmcaplhnbkkfcienhlhpnni](https://chrome.google.com/webstore/detail/一键管理扩展/lboblnfejcmcaplhnbkkfcienhlhpnni).html">一键管理扩展</a> 当扩展过多时，使用该插件非常方便</li><li><a href="https://chrome.google.com/webstore/detail/talend-api-tester-free-ed/aejoelaoggembcahagimdiliamlcdmfm" target="_blank" rel="noopener noreferrer">Talend API</a> 浏览器版本的Postman</li></ol><h3 id="i-浏览器使用npm插件"><a class="header-anchor" href="#i-浏览器使用npm插件" aria-hidden="true">#</a> $i 浏览器使用npm插件</h3><p>安装地址：<a href="https://chrome.google.com/webstore/detail/console-importer/hgajpakhafplebkdljleajgbpdmplhie/related" target="_blank" rel="noopener noreferrer">Console Importer</a></p><p><img src="https://notecdn.heny.vip/images/dayjs-demo.gif" alt="image"></p><h2 id="六、codebox"><a class="header-anchor" href="#六、codebox" aria-hidden="true">#</a> 六、codebox</h2><p>在浏览器快速写代码，可以按ctrl+enter即可进行输出了；</p><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-12.png" alt="image-20200601141945879"></p><h2 id="七、修改devtools默认主题"><a class="header-anchor" href="#七、修改devtools默认主题" aria-hidden="true">#</a> 七、修改devtools默认主题</h2><ol><li>地址输入url：<code>chrome://flags/#enable-devtools-experiments</code>，搜索Developer Tools experiments并启用；</li><li>控制台中使用<code>F1</code>打开设置，切换到<code>Experiments</code>选项，启用<code>Allow custom UI themes</code></li><li>从chrome商店搜索安装：<code>Material DevTools Theme Collection</code> 扩展程序，之后选择喜欢的主题进行重启即可；（如果选中的是带Dark的主题，需要切换对应的默认主题，在<code>settings</code>--&gt;<code>preferences</code>--&gt;<code>theme</code>选项卡；</li></ol><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-13.png" alt="image-20200601142707823"></p><h2 id="其他技巧"><a class="header-anchor" href="#其他技巧" aria-hidden="true">#</a> 其他技巧</h2><ol><li>选中节点之后，点击Event Listeners，可以查看当前元素包括冒泡的所有事件，取消勾选Ancestors All之后，可以查看当前元素的所有事件</li></ol><p><img src="https://notecdn.heny.vip/images/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E5%B7%A7-10.png" alt="image"></p><h2 id="摘抄地址"><a class="header-anchor" href="#摘抄地址" aria-hidden="true">#</a> 摘抄地址</h2><ol><li><a href="https://blog.csdn.net/xiaofeng19930727/article/details/80402818" target="_blank" rel="noopener noreferrer">CSDN</a></li><li><a href="https://segmentfault.com/a/1190000002511877" target="_blank" rel="noopener noreferrer">segmentfault</a><a href="https://segmentfault.com/q/1010000018895611" target="_blank" rel="noopener noreferrer">查看对象</a></li><li><a href="https://developers.google.com/web/tools/chrome-devtools/console" target="_blank" rel="noopener noreferrer">官网</a></li><li><a href="https://juejin.im/post/5ec338436fb9a0432d76e0c4" target="_blank" rel="noopener noreferrer">Chrome DevTools中的这些骚操作，你都知道吗？</a></li><li><a href="https://www.frontendwingman.com/Chrome/" target="_blank" rel="noopener noreferrer">frontendwingman</a></li></ol>',83);o.render=function(t,a,o,l,i,p){return e(),n("div",null,[s])};export default o;export{a as __pageData};

import{o as e,c as t,d as a}from"./app.ca2be113.js";const r='{"title":"js类型整合（助记）","description":"","frontmatter":{},"headers":[{"level":2,"title":"数据类型","slug":"数据类型"},{"level":2,"title":"Array方法","slug":"array方法"},{"level":2,"title":"String方法","slug":"string方法"},{"level":2,"title":"Number方法","slug":"number方法"},{"level":2,"title":"Object方法","slug":"object方法"},{"level":2,"title":"Date对象","slug":"date对象"},{"level":2,"title":"Math对象","slug":"math对象"},{"level":2,"title":"RegExp字符串方法","slug":"regexp字符串方法"},{"level":2,"title":"ES6","slug":"es6"},{"level":2,"title":"节点","slug":"节点"},{"level":2,"title":"事件对象","slug":"事件对象"},{"level":2,"title":"宽高区域","slug":"宽高区域"},{"level":2,"title":"鼠标事件","slug":"鼠标事件"},{"level":2,"title":"其他事件","slug":"其他事件"},{"level":2,"title":"五种继承","slug":"五种继承"},{"level":2,"title":"canvas","slug":"canvas"},{"level":2,"title":"Vue","slug":"vue"},{"level":2,"title":"React","slug":"react"},{"level":2,"title":"Angular","slug":"angular"},{"level":2,"title":"小程序","slug":"小程序"},{"level":2,"title":"设计模式","slug":"设计模式"}],"relativePath":"src/frontend/Javascript/js类型整合（助记）.md","lastUpdated":1615699077391}',l={},i=a('<h1 id="js类型整合（助记）"><a class="header-anchor" href="#js类型整合（助记）" aria-hidden="true">#</a> js类型整合（助记）</h1><h2 id="数据类型"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><p>基本数据类型：Number、String、Boolean、null、undefined、Symbol、BigInt</p><p>基本包装类型：String、Number、Boolean</p><p>引用数据类型：Object、Array、Function、RegExp、Date、Error、Math</p><p>JS内置对象：Number、String、Boolean、Object、Array、Function、RegExp、Date、Error</p><p>Math是全局对象；</p><h2 id="array方法"><a class="header-anchor" href="#array方法" aria-hidden="true">#</a> Array方法</h2><p>修改原数组：push、pop、shift、unshift、splice、sort、reverse</p><p>方法：concat、join、slice、indexOf、lastIndexOf、includes、fill、flat、entries</p><p>遍历：every、some、map、filter、forEach、find、findIndex、reduce、reduceRight</p><p>Array方法：Array.from、Array.isArray、Array.of</p><h2 id="string方法"><a class="header-anchor" href="#string方法" aria-hidden="true">#</a> String方法</h2><p>chartAt、charCodeAt、indexOf、lastIndexOf、slice、substring、substr、split、replace、repeat、toLowerCase、toUpperCase、includes、startsWith、endsWith、padStart、padEnd</p><h2 id="number方法"><a class="header-anchor" href="#number方法" aria-hidden="true">#</a> Number方法</h2><p>Number、parseInt、parseFloat、isFinite、isNaN、isInterger</p><h2 id="object方法"><a class="header-anchor" href="#object方法" aria-hidden="true">#</a> Object方法</h2><p><a href="http://Object.is" target="_blank" rel="noopener noreferrer">Object.is</a>、Object.defineProperty、Object.defineProperties、Object.create、Object.setPrototypeOf、Object.isPrototypeOf、Object.assign、Object.keys、Object.values、Object.entries、、obj.hasOwnProperty、valueOf</p><p>Object.freeze、Object.isFrozen</p><h2 id="date对象"><a class="header-anchor" href="#date对象" aria-hidden="true">#</a> Date对象</h2><p>getFullYear、getMonth、getDay、getDate、getHours、getMinutes、getSeconds、getMilliseconds、getTime、Date.parse</p><h2 id="math对象"><a class="header-anchor" href="#math对象" aria-hidden="true">#</a> Math对象</h2><p>Math.abs、Math.ceil、Math.floor、Math.round、Math.sqrt、Math.random、Math.trunc、Math.min、Math.max、Math.pow、Math.sin、Math.cos、Math.PI</p><h2 id="regexp字符串方法"><a class="header-anchor" href="#regexp字符串方法" aria-hidden="true">#</a> RegExp字符串方法</h2><p>search、replace、match、split、matchAll</p><h2 id="es6"><a class="header-anchor" href="#es6" aria-hidden="true">#</a> ES6</h2><p>let、const、globalThis、解构赋值、扩展符...、Set、WeakSet、Map、WeakMap、Proxy、Reflect、Promise、generator、async/await、</p><h2 id="节点"><a class="header-anchor" href="#节点" aria-hidden="true">#</a> 节点</h2><p>children、childNodes、nodeType、nodeName、nodeValue、parentNode、offsetParent、createElement、createTextNode、textContent、appendChild、insertBefore、remove、removeChild、replaceChild、cloneNode</p><h2 id="事件对象"><a class="header-anchor" href="#事件对象" aria-hidden="true">#</a> 事件对象</h2><p>addEventListener、attachEvent、removeEventListener、detachEvent、e.stopPropagation、e.cancelBubble=true、e.target、e.srcElement、e.preventDefault、e.returnValue=false</p><h2 id="宽高区域"><a class="header-anchor" href="#宽高区域" aria-hidden="true">#</a> 宽高区域</h2><p>clientWidth/Height、offsetWidth/Height、offsetLeft/Top、scrollLeft/Width、clientTop、scrollTop</p><h2 id="鼠标事件"><a class="header-anchor" href="#鼠标事件" aria-hidden="true">#</a> 鼠标事件</h2><p>onclick、ondblclick、onmouseover、onmouseout、onmouseenter、onmouseleave、onmousemove、onmousedown、onmouseup、oncontextmenu、onmousewheel、DOMMouseScroll</p><h2 id="其他事件"><a class="header-anchor" href="#其他事件" aria-hidden="true">#</a> 其他事件</h2><p>onscroll、onresize、onsubmit、onreset、onfocus、onblur、onselect、oninput、onchange</p><h2 id="五种继承"><a class="header-anchor" href="#五种继承" aria-hidden="true">#</a> 五种继承</h2><ol><li>原型链继承</li><li>构造函数继承</li><li>组合继承</li><li>原型式继承</li><li>寄生组合式继承</li></ol><h2 id="canvas"><a class="header-anchor" href="#canvas" aria-hidden="true">#</a> canvas</h2><p>fillRect、strokeRect、beginPath、rect、closePath、fill、stoke、clearRect、fillStyle、stokeStyle、lineWidth、moveTo、lineTo、arc、fillText、strokeText、translate、rotate、save、restore、drawImage</p><h2 id="vue"><a class="header-anchor" href="#vue" aria-hidden="true">#</a> Vue</h2><p>vue init webpack mydemo</p><p>v-once、v-text、v-html、v-bind、v-on、v-if、v-else-if、v-else、v-show、v-for、v-model、computed、watch、Vue.set、Vue.component、keep-alive、slot、Vue.filter</p><ul><li><p>事件修饰符</p><p>.stop、prevent、.capture、.self、.once、 .enter、.tab、.space、.delete、.up、.down、enter.left、.right、 .ctrl、.alt、.shift、.meta、 click.left、.middle、.right .lazy、.number、.trim $refs、$event</p></li><li><p>八种组件通讯</p></li></ul><ol><li>props / $emit</li><li>$children / $parent</li><li>provide / inject</li><li>ref / refs</li><li>eventBus</li><li>localStorage</li><li>Vuex</li><li>$attrs、$listeners</li></ol><ul><li><p>自定义指令</p><p>directives、bind、unbind、inserted、update</p></li><li><p>过渡</p><p>v-enter-active、v-leave-active、v-enter、v-leave</p></li></ul><p>before-enter、enter、after-enter、enter-cancelled</p><ul><li><p>生命周期</p><p>beforeCreate、created</p></li></ul><p>beforeMount、mounted</p><p>beforeUpdate、updated</p><p>beforeDestory、destoryed</p><p>activeted、deactiveted</p><p>errorCaptured、serverPrefetch</p><ul><li><p>路由</p><p>router-link、router-view、active-class、this.$router.push/replace/go、</p></li></ul><p>beforeEach、afterEach</p><p>beforeEnter</p><p>beforeRouteEnter、beforeRouteUpdate、beforeRouteLeave</p><ul><li>Vuex：state、mutations、actions、getter、model</li></ul><h2 id="react"><a class="header-anchor" href="#react" aria-hidden="true">#</a> React</h2><p>create-react-app demo</p><p>ReactDOM.render()、htmlFor、className、defaultValue、this.change、this.change.bind(this,&#39;&#39;)、()=&gt;this.change(&#39;&#39;)、this.setState</p><ul><li><p>生命周期</p><p>constructor、componentWillMount、render()、componentDidMount、shouldcomponentUpdate、componentWillUpdate、componentDidUpdate</p></li><li><p>路由</p><p>Router、NavLink、activeClassName</p></li></ul><p>引入：Switch、Route、Redirect from react-router-dom</p><p>index.js引入：BrowserRouter</p><p>this.props.history.push()/replace()/go</p><h2 id="angular"><a class="header-anchor" href="#angular" aria-hidden="true">#</a> Angular</h2><p>ng new mydemo</p><p>[]=&#39;img&#39;、*ngFor、*ngIf、(click)=add()、[ngStyle]、[(ngModel)]、</p><ul><li><p>路由</p><p>router-outlet、routerLinkActive、</p></li></ul><h2 id="小程序"><a class="header-anchor" href="#小程序" aria-hidden="true">#</a> 小程序</h2><p>bind、catch、capture-bind、wx:if、wx:elif、wx:else、wx:for、scroll-view、swiper、icon、button、image、view、text、</p><ul><li><p>生命周期</p><p>onLoad、onShow、onReady、onHide、onUnload</p></li><li><p>普通事件</p><p>onPullDownRefresh、onReachBottom、onPageScroll、tap、touchstart、touchmove、touchcancel、touchend</p></li><li><p>常用的方法</p><p>wx.navigateTo、wx.showToast、wx.showsModal、wx.showLoadding、wx.request、wx.setStroage、wx.getStorage、wx.removeStroage、wx.celarStorage</p></li></ul><h2 id="设计模式"><a class="header-anchor" href="#设计模式" aria-hidden="true">#</a> 设计模式</h2><p>创建型：</p><p>工厂模式（简单工厂模式、工厂方法模式、抽象工厂模式）、建造者模式、原型模式、单例模式</p><p>结构型：</p><p>外观模式、适配器模式、代理模式、装饰者模式、桥接模式、组合模式、享元模式；</p><p>行为型：</p><p>第一批：模版方法模式、观察者模式、发布-订阅模式、状态模式、策略模式、职责链模式、命令模式、访问者模式</p><p>第二批：中介者模式、备忘录模式、迭代器模式、解释器模式</p><p>技巧型：链式模式、委托模式、数据访问对象模式、节流模式、简单模板模式；</p>',82);l.render=function(a,r,l,o,n,s){return e(),t("div",null,[i])};export default l;export{r as __pageData};

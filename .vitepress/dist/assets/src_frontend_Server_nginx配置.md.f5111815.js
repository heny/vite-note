import{o as n,c as s,d as a}from"./app.1237ae02.js";const p='{"title":"nginx配置","description":"","frontmatter":{},"headers":[{"level":2,"title":"搭建静态站点","slug":"搭建静态站点"},{"level":2,"title":"配置参数","slug":"配置参数"},{"level":2,"title":"常用指令","slug":"常用指令"},{"level":2,"title":"配置文件","slug":"配置文件"},{"level":2,"title":"配置gzip压缩","slug":"配置gzip压缩"},{"level":2,"title":"代理node项目","slug":"代理node项目"},{"level":2,"title":"配置https","slug":"配置https"},{"level":2,"title":"配置http2.0","slug":"配置http2-0"},{"level":3,"title":"nginx不生效问题排查","slug":"nginx不生效问题排查"},{"level":2,"title":"动态匹配（请求过滤）","slug":"动态匹配（请求过滤）"},{"level":2,"title":"配置nginx反向代理","slug":"配置nginx反向代理"},{"level":2,"title":"nginx常用配置","slug":"nginx常用配置"},{"level":2,"title":"常见问题","slug":"常见问题"},{"level":3,"title":"解决socket中nginx转发问题","slug":"解决socket中nginx转发问题"},{"level":2,"title":"nginx重定向","slug":"nginx重定向"},{"level":2,"title":"参考链接","slug":"参考链接"}],"relativePath":"src/frontend/Server/nginx配置.md","lastUpdated":1626708391052}',t={},e=a('<h1 id="nginx配置"><a class="header-anchor" href="#nginx配置" aria-hidden="true">#</a> nginx配置</h1><h2 id="搭建静态站点"><a class="header-anchor" href="#搭建静态站点" aria-hidden="true">#</a> 搭建静态站点</h2><div class="language-nginx"><pre><code><span class="token comment"># 虚拟主机server块</span>\n<span class="token keyword">server</span> <span class="token punctuation">{</span>\n    <span class="token comment"># 端口</span>\n    <span class="token keyword">listen</span>   <span class="token number">80</span><span class="token punctuation">;</span>\n    <span class="token comment"># 匹配请求中的host值</span>\n    <span class="token keyword">server_name</span>  www<span class="token punctuation">.</span>heny<span class="token punctuation">.</span>vip<span class="token punctuation">;</span>\n    \n    <span class="token comment"># 监听请求路径</span>\n    <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>\n        <span class="token comment"># 查找目录</span>\n        <span class="token keyword">root</span> <span class="token operator">/</span>source<span class="token punctuation">;</span>\n        <span class="token comment"># 默认查找</span>\n        <span class="token keyword">index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>html <span class="token keyword">index</span><span class="token punctuation">.</span>htm<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>配置完之后执行<code>nginx -t</code>查看是否有错误，如果看到下面的就是成功了</p><p>如果封装的docker执行：</p><ul><li>执行<code>docker ps</code> 查看<code>nginx</code>名字</li><li><code>docker exec -it data_nginx_1 nginx -t</code></li><li>进入nginx容器：<code>docker exec -it data_nginx_1 bash</code>；</li></ul><div class="language-bash"><pre><code>nginx: the configuration <span class="token function">file</span> /etc/nginx/nginx.conf syntax is ok\nnginx: configuration <span class="token function">file</span> /etc/nginx/nginx.conf <span class="token builtin class-name">test</span> is successful\n</code></pre></div><h2 id="配置参数"><a class="header-anchor" href="#配置参数" aria-hidden="true">#</a> 配置参数</h2><div class="language-nginx"><pre><code><span class="token keyword">server</span> \t\t<span class="token comment"># 配置虚拟主机的相关参数，可以有多个 </span>\n<span class="token keyword">server_name</span> <span class="token comment"># 通过请求中的host值 找到对应的虚拟主机的配置 </span>\n<span class="token keyword">location</span> \t<span class="token comment"># 配置请求路由，处理相关页面情况 </span>\n<span class="token keyword">root</span> \t\t<span class="token comment"># 查找资源的路径</span>\n</code></pre></div><h2 id="常用指令"><a class="header-anchor" href="#常用指令" aria-hidden="true">#</a> 常用指令</h2><div class="language-bash"><pre><code>nginx -t \t\t<span class="token comment"># 检查配置文件是否有语法错误 </span>\nnginx -s reload <span class="token comment"># 向主进程发送信号，重新加载配置文件 </span>\nnginx -s stop \t<span class="token comment"># 快速关闭 </span>\nnginx -s quit\t<span class="token comment"># 等待工作进程处理完成后关闭</span>\n</code></pre></div><h2 id="配置文件"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><div class="language-nginx"><pre><code><span class="token comment"># 定义 nginx 运行的用户和用户组</span>\n<span class="token comment"># user  nginx;</span>\n<span class="token comment"># CPU 总核心数</span>\n<span class="token keyword">worker_processes</span>  <span class="token number">1</span><span class="token punctuation">;</span>\n\n<span class="token keyword">error_log</span>  <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>error<span class="token punctuation">.</span>log warn<span class="token punctuation">;</span>\n<span class="token comment"># 进程文件</span>\n<span class="token keyword">pid</span>        <span class="token operator">/</span>var<span class="token operator">/</span>run<span class="token operator">/</span>nginx<span class="token punctuation">.</span><span class="token keyword">pid</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">events</span> <span class="token punctuation">{</span>\n    <span class="token comment"># 最大访问量</span>\n    <span class="token keyword">worker_connections</span>  <span class="token number">1024</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">http</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  <span class="token keyword">upstream</span> jsanntq <span class="token punctuation">{</span>\n    <span class="token comment"># upstream 的负载均衡，weight 是权重，可以根据机器配置定义权重。weigth 参数表示权值，权值越高被分配到的几率越大。</span>\n    <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.20</span><span class="token punctuation">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>\n    <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.21</span><span class="token punctuation">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>\n    <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.22</span><span class="token punctuation">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">upstream</span> jsanntqAdmin<span class="token punctuation">{</span>\n    <span class="token comment"># 标记为备份服务器。当主服务器不可用时，将传递与备份服务器的连接。</span>\n    backup<span class="token punctuation">;</span>\n    <span class="token comment"># 保持会话，保证同一客户端始终访问一台服务器。</span>\n    <span class="token keyword">ip_hash</span><span class="token punctuation">;</span>\n    <span class="token comment"># 优先分配最少连接数的服务器，避免服务器超载请求过多。</span>\n    least_conn<span class="token punctuation">;</span>\n    <span class="token comment"># 设置服务器的权重，默认为1，权重大的会被优先分配。</span>\n    <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.20</span><span class="token punctuation">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">server</span> <span class="token punctuation">{</span>\n    <span class="token comment"># 端口</span>\n    <span class="token comment"># 如果 Host 头部不匹配任何一个 server_name ,Nginx 将请求路由到默认虚拟服务器。</span>\n    <span class="token comment"># 默认虚拟服务器是指：nginx.conf 文件中第一个 server 或者 显式用 default_server 声明</span>\n    <span class="token keyword">listen</span>      <span class="token number">80</span> default_server<span class="token punctuation">;</span>\n    <span class="token comment">#域名</span>\n    <span class="token keyword">server_name</span> www<span class="token punctuation">.</span>jsanntq<span class="token punctuation">.</span>cn\n    <span class="token comment"># 开启gzip 压缩</span>\n    <span class="token keyword">gzip</span> on<span class="token punctuation">;</span>\n    <span class="token comment"># 设置gzip所需的http协议最低版本 （HTTP/1.1, HTTP/1.0）</span>\n    <span class="token keyword">gzip_http_version</span> <span class="token number">1.1</span><span class="token punctuation">;</span>\n    <span class="token comment"># 设置压缩级别，压缩级别越高压缩时间越长  （1-9）</span>\n    <span class="token keyword">gzip_comp_level</span> <span class="token number">4</span><span class="token punctuation">;</span>\n    <span class="token comment"># 设置压缩的最小字节数， 页面Content-Length获取</span>\n    <span class="token keyword">gzip_min_length</span> <span class="token number">1000</span><span class="token punctuation">;</span>\n    <span class="token comment"># 设置压缩文件的类型  （text/html)</span>\n    <span class="token keyword">gzip_types</span> text<span class="token operator">/</span>plain application<span class="token operator">/</span>javascript text<span class="token operator">/</span>css<span class="token punctuation">;</span>\n\n    <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>\n        <span class="token comment"># 查找目录</span>\n        <span class="token keyword">root</span> <span class="token operator">/</span>data<span class="token operator">/</span>www<span class="token operator">/</span>blog<span class="token punctuation">;</span>\n        <span class="token comment"># vue-router history模式配置</span>\n        <span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token variable">$uri</span><span class="token operator">/</span> <span class="token operator">/</span>admin<span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">location</span> <span class="token operator">/</span>blog <span class="token punctuation">{</span>\n        <span class="token comment"># 代理 proxy_pass指令的参数为：协议+主机名+端口号</span>\n        <span class="token comment"># jsanntq对应upstream后定义的名称</span>\n        <span class="token keyword">proxy_set_header</span> Host <span class="token variable">$http_host</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Real<span class="token operator">-</span>IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Scheme <span class="token variable">$scheme</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>jsanntq<span class="token punctuation">;</span>\n\n        <span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token variable">$uri</span><span class="token operator">/</span> <span class="token operator">/</span>blog<span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">location</span> <span class="token operator">/</span>admin<span class="token operator">/</span> <span class="token punctuation">{</span>\n      <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>jsanntqAdmin<span class="token punctuation">;</span>\n      <span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token variable">$uri</span><span class="token operator">/</span> <span class="token operator">/</span>admin<span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment"># 多服务配置 用于配置多个项目</span>\n  <span class="token keyword">server</span> <span class="token punctuation">{</span>\n    <span class="token keyword">listen</span>      <span class="token number">80</span><span class="token punctuation">;</span>\n    <span class="token comment">#多域名</span>\n    <span class="token keyword">server_name</span> ts<span class="token punctuation">.</span>jsanntq<span class="token punctuation">.</span>cn blog<span class="token punctuation">.</span>jsanntq<span class="token punctuation">.</span>cn\n    <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>\n        <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">8080</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="配置gzip压缩"><a class="header-anchor" href="#配置gzip压缩" aria-hidden="true">#</a> 配置gzip压缩</h2><div class="language-nginx"><pre><code><span class="token comment"># 开启gzip 压缩</span>\n<span class="token keyword">gzip</span> on<span class="token punctuation">;</span>\n<span class="token comment"># 设置gzip所需的http协议最低版本 （HTTP/1.1, HTTP/1.0）</span>\n<span class="token keyword">gzip_http_version</span> <span class="token number">1.1</span><span class="token punctuation">;</span>\n<span class="token comment"># 设置压缩级别，压缩级别越高压缩时间越长  （1-9）</span>\n<span class="token keyword">gzip_comp_level</span> <span class="token number">4</span><span class="token punctuation">;</span>\n<span class="token comment"># 设置压缩的最小字节数， 页面Content-Length获取</span>\n<span class="token keyword">gzip_min_length</span> <span class="token number">1000</span><span class="token punctuation">;</span>\n<span class="token comment"># 设置压缩文件的类型  （text/html)</span>\n<span class="token keyword">gzip_types</span> text<span class="token operator">/</span>plain application<span class="token operator">/</span>javascript text<span class="token operator">/</span>css<span class="token punctuation">;</span>\n</code></pre></div><p>添加到对应的<code>conf</code>文件<code>server</code>下面，或者添加到全局的<code>nginx</code>配置<code>http</code>下面；</p><h2 id="代理node项目"><a class="header-anchor" href="#代理node项目" aria-hidden="true">#</a> 代理node项目</h2><div class="language-nginx"><pre><code><span class="token keyword">server</span> <span class="token punctuation">{</span>\n    <span class="token keyword">listen</span>\t<span class="token number">80</span><span class="token punctuation">;</span>\n    <span class="token keyword">server_name</span>\tchat<span class="token operator">-</span><span class="token keyword">server</span><span class="token punctuation">.</span>heny<span class="token punctuation">.</span>vip<span class="token punctuation">;</span>\n    \n    <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span> <span class="token punctuation">{</span>\n        <span class="token comment"># 本地地址不行就填服务器ip地址</span>\n        <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">8888</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_http_version</span> <span class="token number">1.1</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_set_header</span> Upgrade <span class="token variable">$http_upgrade</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_set_header</span> Connection <span class="token string">&#39;upgrade&#39;</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_cache_bypass</span> <span class="token variable">$http_upgrade</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><strong>node 项目上传流程</strong></p><ol><li>打包除node_modules所有文件以及文件夹</li><li>上传打包文件</li><li>解压文件</li><li>安装依赖</li><li>启动项目</li></ol><h2 id="配置https"><a class="header-anchor" href="#配置https" aria-hidden="true">#</a> 配置https</h2><div class="language-nginx"><pre><code><span class="token keyword">server</span> <span class="token punctuation">{</span>\n    <span class="token keyword">listen</span>\t<span class="token number">443</span> <span class="token keyword">ssl</span><span class="token punctuation">;</span>\n    <span class="token keyword">ssl_certificate</span> <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>crt<span class="token operator">/</span><span class="token number">3710899</span>_web<span class="token punctuation">.</span>heny<span class="token punctuation">.</span>vip<span class="token punctuation">.</span>pem<span class="token punctuation">;</span>\n    <span class="token keyword">ssl_certificate_key</span> <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>crt<span class="token operator">/</span><span class="token number">3710899</span>_web<span class="token punctuation">.</span>heny<span class="token punctuation">.</span>vip<span class="token punctuation">.</span>key<span class="token punctuation">;</span>\n    \n    <span class="token comment"># 如果有</span>\n    <span class="token keyword">include</span> <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span><span class="token keyword">https</span><span class="token operator">-</span>base<span class="token punctuation">.</span>conf<span class="token punctuation">;</span>\n        \n    <span class="token comment"># 强制转发https</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$scheme</span> <span class="token operator">=</span> <span class="token keyword">http</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment"># 如果$host不行就更换$server_name</span>\n        <span class="token keyword">return</span> <span class="token number">301</span> <span class="token keyword">https</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token variable">$host</span><span class="token variable">$request_uri</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><code>/etc/nginx/crt</code>为代理过的地址，在<code>/data/docker-compose.yml</code>查看</p><h2 id="配置http2-0"><a class="header-anchor" href="#配置http2-0" aria-hidden="true">#</a> 配置http2.0</h2><ol><li>在ssl目录下面生成<code>dhparam.pem</code>文件</li></ol><div class="language-bash"><pre><code>openssl dhparam -out dhparam.pem <span class="token number">2048</span>\n</code></pre></div><ol start="2"><li>新建<code>conf.d/https-base.conf</code>文件;</li></ol><div class="language-nginx"><pre><code><span class="token keyword">listen</span>                  <span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n<span class="token keyword">listen</span>                  <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n<span class="token comment"># 配置共享会话缓存大小</span>\n<span class="token keyword">ssl_session_cache</span>       shared<span class="token punctuation">:</span><span class="token keyword">SSL</span><span class="token punctuation">:</span><span class="token number">10</span>m<span class="token punctuation">;</span>\n<span class="token comment"># 配置会话超时时间</span>\n<span class="token keyword">ssl_session_timeout</span>     <span class="token number">10</span>m<span class="token punctuation">;</span>\n\n<span class="token comment"># 优先采取服务器算法</span>\n<span class="token keyword">ssl_prefer_server_ciphers</span> on<span class="token punctuation">;</span>\n<span class="token comment"># 使用 DH 文件</span>\n<span class="token keyword">ssl_dhparam</span> \t\t\t<span class="token keyword">ssl</span><span class="token operator">/</span>dhparam<span class="token punctuation">.</span>pem<span class="token punctuation">;</span>\n<span class="token comment"># 协议版本</span>\n<span class="token keyword">ssl_protocols</span>           TLSv1 TLSv1<span class="token punctuation">.</span><span class="token number">1</span> TLSv1<span class="token punctuation">.</span><span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token comment"># 定义算法</span>\n<span class="token keyword">ssl_ciphers</span>\t\t\tEECDH<span class="token operator">+</span>CHACHA20<span class="token punctuation">:</span>EECDH<span class="token operator">+</span>AES128<span class="token punctuation">:</span>RSA<span class="token operator">+</span>AES128<span class="token punctuation">:</span>EECDH<span class="token operator">+</span>AES256<span class="token punctuation">:</span>RSA<span class="token operator">+</span>AES256<span class="token punctuation">:</span>EECDH<span class="token operator">+</span><span class="token number">3</span>DES<span class="token punctuation">:</span>RSA<span class="token operator">+</span><span class="token number">3</span>DES<span class="token punctuation">:</span><span class="token operator">!</span>MD5<span class="token punctuation">;</span>\n\n<span class="token comment"># 启用 HSTS 。允许 https 网站要求浏览器总是通过 https 来访问</span>\n<span class="token keyword">add_header</span> Strict<span class="token operator">-</span>Transport<span class="token operator">-</span>Security <span class="token string">&quot;max-age=31536000; includeSubDomains;preload&quot;</span> always<span class="token punctuation">;</span>\n<span class="token comment"># 减少点击劫持</span>\n<span class="token keyword">add_header</span> X<span class="token operator">-</span>Frame<span class="token operator">-</span>Options <span class="token keyword">DENY</span><span class="token punctuation">;</span>\n<span class="token comment"># 禁止服务器自动解析资源类型</span>\n<span class="token keyword">add_header</span> X<span class="token operator">-</span>Content<span class="token operator">-</span>Type<span class="token operator">-</span>Options nosniff<span class="token punctuation">;</span>\n<span class="token comment"># 防XSS攻擊</span>\n<span class="token keyword">add_header</span> X<span class="token operator">-</span>Xss<span class="token operator">-</span>Protection <span class="token number">1</span><span class="token punctuation">;</span>\n</code></pre></div><ol start="3"><li>之后在需要的文件里面加入即可</li></ol><div class="language-nginx"><pre><code><span class="token keyword">server</span> <span class="token punctuation">{</span>\n    <span class="token keyword">include</span> <span class="token keyword">https</span><span class="token operator">-</span>base<span class="token punctuation">.</span>conf\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="4"><li><code>[::]:</code>表示ipv6配置</li></ol><h3 id="nginx不生效问题排查"><a class="header-anchor" href="#nginx不生效问题排查" aria-hidden="true">#</a> nginx不生效问题排查</h3><ol><li><p>配置https之后需要放开443端口，首先排查安全组是否放开端口号</p></li><li><p>查看443端口状态：</p><ol><li><code> netstat -ano -p tcp | find &quot;443&quot; &gt;nul 2&gt;nul &amp;&amp; echo 443端口已开启 || echo 443端口未开启</code></li><li><code>lsof -i:443</code> 如果有的话则表示开启了</li><li><code>telnet 1.1.1.1 443</code> 如果能连接成功表示通了</li></ol></li><li><p>如果是docker启动的nginx，docker需要配置443；</p></li></ol><h2 id="动态匹配（请求过滤）"><a class="header-anchor" href="#动态匹配（请求过滤）" aria-hidden="true">#</a> 动态匹配（请求过滤）</h2><blockquote><p>通常在开发环境或者测试环境的时候呢我们修改了代码，因为浏览器缓存，可能不会生效，需要手动清除缓存，才能看到修改后的效果，这里我们做一个配置让浏览器不缓存相关的资源。</p></blockquote><h2 id="配置nginx反向代理"><a class="header-anchor" href="#配置nginx反向代理" aria-hidden="true">#</a> 配置nginx反向代理</h2><p>注意api必须加上，检查api的地方，修改之后记得重启nginx服务器；</p><div class="language-nginx"><pre><code><span class="token keyword">location</span> <span class="token operator">/</span>api <span class="token punctuation">{</span>\n    <span class="token keyword">rewrite</span> <span class="token operator">^</span><span class="token punctuation">.</span><span class="token operator">+</span>api<span class="token operator">/</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span>$ <span class="token operator">/</span>$<span class="token number">1</span> <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">39.107</span><span class="token number">.127</span><span class="token number">.240</span><span class="token punctuation">:</span><span class="token number">3000</span><span class="token punctuation">;</span>\n    <span class="token comment"># 作用和proxyTable差不多  上传时记得删除这句话</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="nginx常用配置"><a class="header-anchor" href="#nginx常用配置" aria-hidden="true">#</a> nginx常用配置</h2><div class="language-nginx"><pre><code><span class="token keyword">server</span> <span class="token punctuation">{</span>\n    <span class="token keyword">listen</span> <span class="token number">80</span><span class="token punctuation">;</span>\n    <span class="token keyword">server_name</span> wyy<span class="token punctuation">.</span>heny<span class="token punctuation">.</span>vip<span class="token punctuation">;</span>\n\n    <span class="token comment"># 避免非root路径404</span>\n    <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>\n        <span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token variable">$uri</span><span class="token operator">/</span> <span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment"># 解决跨域</span>\n    <span class="token keyword">location</span> <span class="token operator">/</span>api <span class="token punctuation">{</span>\n        <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>wyy<span class="token punctuation">.</span>heny<span class="token punctuation">.</span>vip<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token comment"># 不区分大小写, 访问json文件</span>\n    <span class="token keyword">location</span> <span class="token operator">~</span><span class="token punctuation">.</span><span class="token operator">*</span>\\<span class="token punctuation">.</span>json <span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span>\n\n    <span class="token comment"># 为带hash值的文件配置永久缓存</span>\n    <span class="token keyword">location</span> <span class="token operator">~</span><span class="token operator">*</span> \\<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">:</span>css<span class="token operator">|</span>js<span class="token punctuation">)</span>$ <span class="token punctuation">{</span>\n        <span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">;</span>\n        <span class="token keyword">expires</span> <span class="token number">1</span>y<span class="token punctuation">;</span>\n        <span class="token keyword">add_header</span> Cache<span class="token operator">-</span>Control <span class="token string">&quot;public&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">^</span><span class="token punctuation">.</span><span class="token operator">+</span>\\<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">+</span>$ <span class="token punctuation">{</span>\n        <span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="常见问题"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h2><h3 id="解决socket中nginx转发问题"><a class="header-anchor" href="#解决socket中nginx转发问题" aria-hidden="true">#</a> 解决socket中nginx转发问题</h3><div class="language-nginx"><pre><code><span class="token keyword">server</span> <span class="token punctuation">{</span>\n    <span class="token keyword">listen</span>       <span class="token number">80</span><span class="token punctuation">;</span>\n    <span class="token keyword">server_name</span>  school<span class="token punctuation">.</span>godotdotdot<span class="token punctuation">.</span>com<span class="token punctuation">;</span>\n    <span class="token keyword">charset</span> utf<span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span> <span class="token punctuation">{</span>\n        <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">3000</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_http_version</span> <span class="token number">1.1</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_set_header</span> Upgrade <span class="token variable">$http_upgrade</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_set_header</span> Connection <span class="token string">&quot;upgrade&quot;</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Real<span class="token operator">-</span>IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_connect_timeout</span> <span class="token number">60</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_read_timeout</span> <span class="token number">600</span><span class="token punctuation">;</span>\n        <span class="token keyword">proxy_send_timeout</span> <span class="token number">600</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\t<span class="token keyword">error_page</span>  <span class="token number">404</span>\t\t\t<span class="token operator">/</span><span class="token number">404.</span>html<span class="token punctuation">;</span>\n    <span class="token keyword">error_page</span>   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  <span class="token operator">/</span><span class="token number">50</span>x<span class="token punctuation">.</span>html<span class="token punctuation">;</span>\n    <span class="token keyword">location</span> <span class="token operator">=</span> <span class="token operator">/</span><span class="token number">50</span>x<span class="token punctuation">.</span>html <span class="token punctuation">{</span>\n        <span class="token keyword">root</span>   html<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="nginx重定向"><a class="header-anchor" href="#nginx重定向" aria-hidden="true">#</a> nginx重定向</h2><p><a href="https://www.cnblogs.com/weiyiming007/p/11417320.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/weiyiming007/p/11417320.html</a></p><h2 id="参考链接"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2><ul><li><p><a href="http://jsanntq.cn/2020/04/07/Nginx/" target="_blank" rel="noopener noreferrer">http://jsanntq.cn/2020/04/07/Nginx/</a></p></li><li><p><a href="https://juejin.im/post/5cae9de95188251ae2324ec3" target="_blank" rel="noopener noreferrer">快狗打车前端团队 前端想要了解的Nginx</a></p></li><li><p><a href="https://juejin.im/post/5e44a2aa6fb9a07c9f3fd170#heading-15" target="_blank" rel="noopener noreferrer">卖好车大前端团队 nginx 配置 https</a></p></li></ul>',47);t.render=function(a,p,t,o,c,l){return n(),s("div",null,[e])};export default t;export{p as __pageData};

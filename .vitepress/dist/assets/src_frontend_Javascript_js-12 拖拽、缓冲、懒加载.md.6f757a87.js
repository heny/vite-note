import{o as n,c as s,d as a}from"./app.5dd0cd0b.js";const p='{"title":"js-12 拖拽、缓冲、懒加载","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、拖拽","slug":"一、拖拽"},{"level":2,"title":"二、事件捕获（IE独有）","slug":"二、事件捕获（ie独有）"},{"level":2,"title":"三、限制盒子移动范围","slug":"三、限制盒子移动范围"},{"level":2,"title":"四、碰撞检测；","slug":"四、碰撞检测；"},{"level":2,"title":"五、缓冲运动","slug":"五、缓冲运动"},{"level":2,"title":"六、懒加载","slug":"六、懒加载"},{"level":2,"title":"七、自定义滚动条","slug":"七、自定义滚动条"},{"level":2,"title":"八、监听图片的error事件","slug":"八、监听图片的error事件"},{"level":2,"title":"高频面试题","slug":"高频面试题"}],"relativePath":"src/frontend/Javascript/js-12 拖拽、缓冲、懒加载.md","lastUpdated":1615699077386}',t={},o=a('<h1 id="js-12-拖拽、缓冲、懒加载"><a class="header-anchor" href="#js-12-拖拽、缓冲、懒加载" aria-hidden="true">#</a> js-12 拖拽、缓冲、懒加载</h1><h2 id="一、拖拽"><a class="header-anchor" href="#一、拖拽" aria-hidden="true">#</a> 一、拖拽</h2><ol><li>事件拖拽；</li></ol><p>利用offset值来计算</p><ol start="2"><li>拖拽的问题：如果拖拽的地方有文字并且在拖拽 div 的时候，文字是被选中的状态，浏览器会认为是拖拽文字，或者如果要拖拽的元素是图片，浏览器会认为是保存图片效果，这都是因为浏览器的默认行为；</li><li>解决拖拽问题：</li></ol><p>（1）普通浏览器可以利用return false，阻止浏览器默认行为；</p><p>（2）IE浏览器需要使用事件捕获来阻止浏览器默认行为，事件捕获在普通浏览器里面会出错，所以需要做兼容；</p><h2 id="二、事件捕获（ie独有）"><a class="header-anchor" href="#二、事件捕获（ie独有）" aria-hidden="true">#</a> 二、事件捕获（IE独有）</h2><p><code>obj.setCapture()</code>；页面中和元素一样的事件都捕获起来，将页面中其他相同的事件触发时都执行元素的事件处理函数；让其他元素都执行调用捕获元素的条件；</p><ol start="2"><li>释放捕获：<code>obj.releaseCapture()</code>；取消继续捕获；每次点击都会捕获一次，所以抬起需要取消捕获；</li></ol><h2 id="三、限制盒子移动范围"><a class="header-anchor" href="#三、限制盒子移动范围" aria-hidden="true">#</a> 三、限制盒子移动范围</h2><p>拖拽不能超出屏幕，通过下图我们能得到：oDiv.left+oDiv.offsetWidth 不能大于屏幕宽。</p><p>鼠标按下时：</p><div class="language-js"><pre><code><span class="token keyword">var</span> x <span class="token operator">=</span> ev<span class="token punctuation">.</span>clientX <span class="token operator">-</span> obj1<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">;</span>\n<span class="token keyword">var</span> y <span class="token operator">=</span> ev<span class="token punctuation">.</span>clientY <span class="token operator">-</span> obj1<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>\n</code></pre></div><p>鼠标移动时：</p><div class="language-js"><pre><code><span class="token keyword">var</span> l <span class="token operator">=</span> ev<span class="token punctuation">.</span>clientX <span class="token operator">-</span> x<span class="token punctuation">;</span>\n<span class="token keyword">var</span> t <span class="token operator">=</span> ev<span class="token punctuation">.</span>clientY <span class="token operator">-</span> y<span class="token punctuation">;</span>\n</code></pre></div><p>判断是否有碰撞：</p><div class="language-js"><pre><code><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">// 大于 0 并且小于屏幕宽再回来自己的宽度</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token operator">&gt;</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token operator">-</span> obj1<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    l <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth <span class="token operator">-</span> obj1<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">//  </span>\n<span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token operator">&gt;</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight <span class="token operator">-</span> obj1<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    t <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token operator">-</span>obj1<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>赋值给div；</p><div class="language-js"><pre><code>obj1<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> t <span class="token operator">+</span> “px”<span class="token punctuation">;</span>\nobj1<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> l <span class="token operator">+</span> “px”<span class="token punctuation">;</span>\n</code></pre></div><p>当鼠标抬起时：</p><div class="language-js"><pre><code>document<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> document<span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> “”<span class="token punctuation">;</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span>setCapture<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    obj2<span class="token punctuation">.</span><span class="token function">releaseCapture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><img src="https://notecdn.heny.vip/images/js-12_%E6%8B%96%E6%8B%BD%E3%80%81%E7%BC%93%E5%86%B2%E3%80%81%E6%87%92%E5%8A%A0%E8%BD%BD-01.png" alt="image"></p><h2 id="四、碰撞检测；"><a class="header-anchor" href="#四、碰撞检测；" aria-hidden="true">#</a> 四、碰撞检测；</h2><p>中间使用||连接；</p><p>左：move.offsetLeft+move.offsetWidth &lt; box.offsetLeft</p><p>上：move.offsetTop+move.offsetHeight &lt; box.offsetTop</p><p>右：move.offsetLeft &gt; box.offsetLeft+box.offsetWidth</p><p>下：move.offsetTop &gt; box.offsetTop + box.offsetHeight</p><p><img src="https://notecdn.heny.vip/images/js-12_%E6%8B%96%E6%8B%BD%E3%80%81%E7%BC%93%E5%86%B2%E3%80%81%E6%87%92%E5%8A%A0%E8%BD%BD-02.png" alt="image"></p><h2 id="五、缓冲运动"><a class="header-anchor" href="#五、缓冲运动" aria-hidden="true">#</a> 五、缓冲运动</h2><p>公式（目标点 - 当前位置）/ 缩放系数</p><p>如果改变的样式是opacity需要乘以100</p><p>取整 如果大于0，则向上取整，如果小于0则向下取整。</p><p>根据运动是否完成来设定flag开关。</p><ol><li>做小盒子缓冲移动 -----每次加的值也是一个变量；</li><li>封装</li><li>改变透明度 ----判断透明度的值 不能为小数，所以*100；</li><li>做对象 做多值缓冲运动</li><li>改变清除定时器的时间；</li><li>加一个回调函数，动画完成；</li></ol><h2 id="六、懒加载"><a class="header-anchor" href="#六、懒加载" aria-hidden="true">#</a> 六、懒加载</h2><p>先只加载可视窗口区域的图片，当用户向下拖动滚动条时再继续加载后面可视图片；</p><p>优点：</p><p>（1）这样减少了加载时的线程数量，使可视区域内的图片也能够快速加载，优化了用户体验。</p><p>（2）减少了同一时间发向服务器的请求数，服务器压力剧减。</p><ol><li>在写网页<code>&lt;img&gt;</code>标签时，将图片的路径放到自定义属性_src路径中，在加载页面时，这个图片一开始是无法加载，当浏览器的可视区域移动到此图片上时，将_src中的路径赋值给src属性，并开始加载，即浏览器的可视距离加上浏览器被卷起的高度大于等于图片到浏览器顶部的距离；</li></ol><div class="language-js"><pre><code><span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//如果浏览器可视高度加上浏览器被卷起的高度 大于等于 图片到浏览器顶部的距离，则显示</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top <span class="token operator">+</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;_src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="七、自定义滚动条"><a class="header-anchor" href="#七、自定义滚动条" aria-hidden="true">#</a> 七、自定义滚动条</h2><ol><li>设置滚动条条儿的高度</li></ol><p>猜想：滚动条的高度随着内容的高度而变化，因此它们需要成正比；</p><p>结果：列表可见的高度 / 列表实际的高度 = x / 列表可见的高度</p><p>x = 列表可见的高度 / 列表实际的高度 * 列表可见的高度</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">setBarHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> scrollHeight <span class="token operator">=</span> listDom<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">;</span>\n    <span class="token keyword">var</span> h <span class="token operator">=</span> listClientHeight <span class="token operator">/</span> scrollHeight <span class="token operator">*</span> listClientHeight<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;=</span> listClientHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        h <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//内容过少，滚动条高度超过了可见区域，不需要滚动条</span>\n    <span class="token punctuation">}</span>\n    barDom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> h <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="2"><li>设置滚动条的位置</li></ol><p>猜想：滚动条移动的位置要与列表被卷起的高度成正比；滚动条的可区域相当于列表可见的高度；</p><p>结果：列表被卷起的高度 / 列表实际内容的高度 = x / 列表可见的高度；</p><p>x = 列表被卷起的高度 / 列表实际内容的高度 * 列表可见的高度；</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">setBarTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> top <span class="token operator">=</span> listDom<span class="token punctuation">.</span>scrollTop <span class="token operator">/</span> listDom<span class="token punctuation">.</span>scrollHeight <span class="token operator">*</span> listClientHeight<span class="token punctuation">;</span>\n    barDom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> top <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="3"><li>判断鼠标滚动事件</li></ol><p>根据onmousewheel传入一个e，取值e.detailY，用列表被卷起的高度去相加</p><div class="language-js"><pre><code>listDom<span class="token punctuation">.</span><span class="token function-variable function">onmousewheel</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">setListScrollTop</span><span class="token punctuation">(</span>listDom<span class="token punctuation">.</span>scrollTop <span class="token operator">+</span> e<span class="token punctuation">.</span>detailY<span class="token punctuation">)</span>   <span class="token comment">//调用设置列表被卷起的高度的高度;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="4"><li>设置列表的scrolltop</li></ol><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">setListScrollTop</span><span class="token punctuation">(</span><span class="token parameter">newScrollTop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> \n   <span class="token comment">// 这里传入的值可能为负数,因为会向上或向下滚动;</span>\n \n    <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//避免重复调用函数，停止之前的移动</span>\n    <span class="token comment">//使用动画实现滚动</span>\n    <span class="token comment">//例如：scrollTop  300 -&gt; 100</span>\n    <span class="token keyword">var</span> spd <span class="token operator">=</span> <span class="token number">0.8</span><span class="token punctuation">;</span> <span class="token comment">//速度：1毫秒变化的距离(自定义的)</span>\n    <span class="token keyword">var</span> dis <span class="token operator">=</span> newScrollTop <span class="token operator">-</span> listDom<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span> <span class="token comment">//移动的总距离</span>\n    <span class="token keyword">var</span> tick <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//多少毫秒移动一次</span>\n    <span class="token keyword">var</span> duration <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>dis <span class="token operator">/</span> spd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//计算移动的总时间,因为可能是负数,所以需要取绝对值;</span>\n    <span class="token keyword">var</span> times <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>duration <span class="token operator">/</span> tick<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//一共可以移动多少次</span>\n    <span class="token keyword">var</span> curTimes <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//当前移动了多少次</span>\n    <span class="token keyword">var</span> everyDis <span class="token operator">=</span> dis <span class="token operator">/</span> times<span class="token punctuation">;</span> <span class="token comment">//每次移动的距离 = 总距离/总次数</span>\n    timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        curTimes<span class="token operator">++</span><span class="token punctuation">;</span>\n        listDom<span class="token punctuation">.</span>scrollTop <span class="token operator">+=</span> everyDis<span class="token punctuation">;</span>\n        <span class="token function">setBarTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>curTimes <span class="token operator">===</span> times<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> tick<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="3"><li>拖动滚动条条儿事件，根据滚动条 条儿位置，直接设置列表滚动的高度；</li></ol><p>猜想：列表滚动被卷起的高度要 与 滚动条条儿与列表可见的高度的顶部距离成正比；</p><p>结果：条儿的位置 / 列表可见的高度 = x / 列表总高度 （成正比）x 为被卷起的高度；</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">setListScrollTopFromBarTop</span><span class="token punctuation">(</span><span class="token parameter">top</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// 这个top需要被调用;</span>\n    <span class="token keyword">var</span> sh <span class="token operator">=</span> top <span class="token operator">/</span> listClientHeight <span class="token operator">*</span> listDom<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">;</span>\n    listDom<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> sh<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n\nbarDom<span class="token punctuation">.</span><span class="token function-variable function">onmousedown</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">;</span> <span class="token comment">//相对于网页的y坐标</span>\n    <span class="token keyword">var</span> top <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//按下时的top值</span>\n    <span class="token keyword">var</span> h <span class="token operator">=</span> barDom<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span> <span class="token comment">//滚动条条儿自身的高度</span>\n    window<span class="token punctuation">.</span><span class="token function-variable function">onmousemove</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> newY <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">;</span>\n        <span class="token keyword">var</span> newTop <span class="token operator">=</span> top <span class="token operator">+</span> <span class="token punctuation">(</span>newY <span class="token operator">-</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>newTop <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            newTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newTop <span class="token operator">&gt;</span> listClientHeight <span class="token operator">-</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            newTop <span class="token operator">=</span> listClientHeight <span class="token operator">-</span> h<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        barDom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> newTop <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>\n        <span class="token function">setListScrollTopFromBarTop</span><span class="token punctuation">(</span>newTop<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    window<span class="token punctuation">.</span><span class="token function-variable function">onmouseup</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        window<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="八、监听图片的error事件"><a class="header-anchor" href="#八、监听图片的error事件" aria-hidden="true">#</a> 八、监听图片的error事件</h2><ol><li>当一个图片资源加载出错时，可以替换成默认的图片</li></ol><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token punctuation">&#39;</span></span> <span class="token attr-name">onerror</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token punctuation">&#39;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre></div><ol start="2"><li>全局监听：当一个页面过多图片时，可以使用全局监听，需要使用冒泡</li></ol><div class="language-js"><pre><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n</code></pre></div><ol start="3"><li>解决无限触发网络出现异常</li></ol><div class="language-js"><pre><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">let</span> times <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>times<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span> 以失败的次数，默认为<span class="token number">0</span>\n        allTimes <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">//总失败次数</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;IMG&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>times <span class="token operator">&gt;=</span> allTimes<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> 提供一个base64的默认图片\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>times <span class="token operator">=</span> times<span class="token operator">++</span>\n            e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&#39;//default.jpg&#39;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="高频面试题"><a class="header-anchor" href="#高频面试题" aria-hidden="true">#</a> 高频面试题</h2><p>● 拖拽效果中有几种事件？</p><p>● 什么是回调函数？</p>',73);t.render=function(a,p,t,e,c,l){return n(),s("div",null,[o])};export default t;export{p as __pageData};

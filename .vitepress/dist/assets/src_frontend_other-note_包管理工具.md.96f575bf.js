import{o as e,c as o,d as r}from"./app.b352b1d4.js";const n='{"title":"包管理工具","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、npm","slug":"一、npm"},{"level":3,"title":"基础命令","slug":"基础命令"},{"level":3,"title":"支持的参数","slug":"支持的参数"},{"level":3,"title":"源管理","slug":"源管理"},{"level":3,"title":"其他命令","slug":"其他命令"},{"level":3,"title":"license协议","slug":"license协议"},{"level":3,"title":"npm link","slug":"npm-link"},{"level":3,"title":"发布管理","slug":"发布管理"},{"level":3,"title":"Q&A","slug":"q-a"},{"level":2,"title":"二、yarn","slug":"二、yarn"},{"level":2,"title":"三、nrm","slug":"三、nrm"},{"level":2,"title":"四、nvm","slug":"四、nvm"},{"level":2,"title":"五、常用CDN地址","slug":"五、常用cdn地址"}],"relativePath":"src/frontend/other-note/包管理工具.md","lastUpdated":1618137959877}',l={},i=r('<h1 id="包管理工具"><a class="header-anchor" href="#包管理工具" aria-hidden="true">#</a> 包管理工具</h1><h2 id="一、npm"><a class="header-anchor" href="#一、npm" aria-hidden="true">#</a> 一、npm</h2><h3 id="基础命令"><a class="header-anchor" href="#基础命令" aria-hidden="true">#</a> 基础命令</h3><ul><li><code>npm -v</code> 查看npm的版本</li><li><code>npm version</code> 查看所有模块的版本</li><li><code>npm init</code> 创建package.json，作用是记录当前node项目中依赖哪些第三方包，当我们把node项目发布时，就可以删除node项目中已安装的第三方包；</li><li><code>npm i/install</code> 安装包</li><li><code>npm s/search 包名</code> 搜索包</li><li><code>npm r/remove</code> 删除包</li><li><code>npm uninstall 包名</code> 卸载包</li><li><code>npm root -g</code> 查看全局包安装位置</li><li><code>npm config ls</code> 查看当前npm配置</li><li><code>npm outdated</code> 查看需要升级的包</li></ul><ol start="2"><li><p>一次安装多个包 （1）<code>npm i gulp-sass gulp-debug gulp-pug</code></p><p>（2）<code>npm i gulp{-sass,-debug,-pug}</code></p></li></ol><h3 id="支持的参数"><a class="header-anchor" href="#支持的参数" aria-hidden="true">#</a> 支持的参数</h3><p><code>--save</code> 功能：之前旧的npm命令如果不带这个参数，则在json文件中不会产生依赖项；</p><p><code>-D</code> == --save-dev 开发依赖</p><p><code>-S</code> == --save 添加到依赖</p><p><code>-P</code> == --save-prod 添加到生产环境</p><p><code>-g</code> 全局安装，一般都是一些工具才使用这个；</p><p>建议只在开发时使用的插件，单独安装到开发依赖，不要直接添加到依赖里，安装时需要-D，因为默认安装都是安装在dependencies里的，是用于生产需要的；</p><ol start="4"><li><p>以版本号安装 下载包时，可以在包名后面@加上版本号，如果不指定版本号，则默认下载最新的；</p><p>转淘宝镜像：<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p><p>淘宝镜像官网：<a href="http://npm.taobao.org" target="_blank" rel="noopener noreferrer">npm.taobao.org</a>；</p></li><li><p>获取包信息</p><ul><li><p><code>npm view vue</code> 或<code>npm v vue</code></p></li><li><p>单独获取包的最新版本号：<code>npm v vue version</code>；</p></li><li><p>升级最新包：<code>npm i -g yarn@latest</code></p></li></ul></li></ol><h3 id="源管理"><a class="header-anchor" href="#源管理" aria-hidden="true">#</a> 源管理</h3><ul><li><p>查看源：<code>npm config get registry</code></p></li><li><p>修改源：<code>npm config set registry</code> 源地址</p></li><li><p>临时改变源：<code>npm --registry=https://r.npm.taobao.org</code></p></li></ul><p>镜像源地址：</p><ul><li><code>npm</code> --- <a href="https://registry.npmjs.org/" target="_blank" rel="noopener noreferrer">https://registry.npmjs.org/</a></li><li><code>npm</code> --- <a href="https://registry.npm.taobao.org/" target="_blank" rel="noopener noreferrer">https://registry.npm.taobao.org/</a></li><li><code>yarn</code> --- <a href="https://registry.yarnpkg.com/" target="_blank" rel="noopener noreferrer">https://registry.yarnpkg.com/</a></li><li><code>yarn</code> --- <a href="https://registry.npm.taobao.org/" target="_blank" rel="noopener noreferrer">https://registry.npm.taobao.org/</a></li><li><code>cnpm</code> --- <a href="https://r.cnpmjs.org/" target="_blank" rel="noopener noreferrer">https://r.cnpmjs.org/</a></li><li><code>taobao</code> --- <a href="https://registry.npm.taobao.org/" target="_blank" rel="noopener noreferrer">https://registry.npm.taobao.org/</a></li><li><code>nj</code> --- <a href="https://registry.nodejitsu.com/" target="_blank" rel="noopener noreferrer">https://registry.nodejitsu.com/</a></li><li><code>rednpm</code> --- <a href="https://registry.mirror.cqupt.edu.cn/" target="_blank" rel="noopener noreferrer">https://registry.mirror.cqupt.edu.cn/</a></li><li><code>npmMirror</code> --- <a href="https://skimdb.npmjs.com/registry/" target="_blank" rel="noopener noreferrer">https://skimdb.npmjs.com/registry/</a></li><li><code>deunpm</code> --- <a href="http://registry.enpmjs.org/" target="_blank" rel="noopener noreferrer">http://registry.enpmjs.org/</a></li></ul><h3 id="其他命令"><a class="header-anchor" href="#其他命令" aria-hidden="true">#</a> 其他命令</h3><ol><li>显示可用的script 运行命令<code>npm run</code>；</li></ol><p><img src="https://notecdn.heny.vip/images/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-01.png" alt="image"></p><h3 id="license协议"><a class="header-anchor" href="#license协议" aria-hidden="true">#</a> license协议</h3><p><img src="https://notecdn.heny.vip/images/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-03.png" alt="image"></p><ul><li><code>MIT</code>：只要用户在项目副本中包含了版权声明和许可声明，他们就可以拿你的代码做任何想做的事情，你也无需承担任何责任</li><li><code>Apache</code>：类似于MIT，同时还包含了贡献者向用户提供专利授权相关的条款</li><li><code>GPL</code>：修改项目代码的用户两次分发源码或二进制代码时，必须公布他的相关修改</li></ul><h3 id="npm-link"><a class="header-anchor" href="#npm-link" aria-hidden="true">#</a> npm link</h3><p>对包创建软链接，通常用做本地开发组件时的调试</p><ol><li>到需要创建link的包，执行<code>npm link</code></li><li>到需要使用link的包的项目下，执行 <code>npm link 项目名</code>；</li><li>在项目下的package.json文件下写一个假的包名依赖以及版本号，之后就可以直接在项目中使用了</li><li><code>npm unlink</code> 可以撤消link的包</li></ol><h3 id="发布管理"><a class="header-anchor" href="#发布管理" aria-hidden="true">#</a> 发布管理</h3><p>发布管理时需要注意使用npm官方源，一定要切换回来</p><ul><li><code>npm adduser</code> 用户登录</li><li><code>npm whoami</code> 查询当前登录用户，报错表示未登录</li><li><code>npm publish</code> 发布项目</li></ul><h4 id="package管理"><a class="header-anchor" href="#package管理" aria-hidden="true">#</a> package管理</h4><ul><li><code>name</code> 名字</li><li><code>version</code> 版本管理</li><li><code>private</code> 是否私有</li><li><code>description</code> 包描述</li><li><code>author</code> 作者</li><li><code>license</code> 协议</li><li><code>keywords</code> 关键词</li><li><code>homepage</code> 项目主页</li><li><code>files</code> 发布文件列表（数组），如果不写默认取.gitignore里面不需要上传的文件，也有的文件会始终发布上去，比如package.json，<a href="http://readme.md" target="_blank" rel="noopener noreferrer">readme.md</a></li><li><code>repository</code> 仓库 <ul><li>type 类型，如git</li><li>url 仓库地址</li></ul></li><li><code>main</code> 入口文件</li><li><code>module</code> 模板文件</li><li><code>types</code> ts类型定义文件</li><li><code>scripts</code> 执行脚本（下面列出一些勾子函数） <ul><li><code>prepublish</code> 发布前做的事情</li></ul></li><li><code>dependencies</code> 项目运行时依赖的包</li><li><code>devDependencies</code> 开发依赖时的包</li><li><code>peerDependencies</code> 当别人安装你发布的包时，不会去自动安装peer的包，而是使用warning告诉用户你需要安装这些依赖，在peer填写的依赖之后，可以直接将自己的依赖扔到开发依赖</li></ul><p>官方文档：<a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json/" target="_blank" rel="noopener noreferrer">https://docs.npmjs.com/cli/v7/configuring-npm/package-json/</a></p><h4 id="版本管理"><a class="header-anchor" href="#版本管理" aria-hidden="true">#</a> 版本管理</h4><p>自动修改版本号</p><p><code>npm version &lt;update_type&gt;</code></p><p>type值为：</p><ul><li>patch 0.0.</li><li>minor 1.*.0</li><li>major *.0.0</li></ul><p>其他npm管理包命令</p><div class="language-js"><pre><code><span class="token comment">// 撤销整个包</span>\nnpm unpublish <span class="token operator">--</span>force 包名\n\n<span class="token comment">// 撤销某个版本</span>\nnpm unpublish 包名@版本号\n</code></pre></div><p>版本规范：<a href="./semver.org.html">semver.org</a></p><h3 id="q-a"><a class="header-anchor" href="#q-a" aria-hidden="true">#</a> Q&amp;A</h3><p><strong>安装node-sass卡住的解决办法</strong></p><div class="language-bash"><pre><code><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g\n</code></pre></div><h2 id="二、yarn"><a class="header-anchor" href="#二、yarn" aria-hidden="true">#</a> 二、yarn</h2><blockquote><p>npm的替代产品</p></blockquote><ol><li><p>特点</p><ul><li>有缓存机制、速度更快</li><li>更可靠、安全</li><li>异步安装</li></ul></li><li><p>安装 <code>npm install -g yarn</code></p></li><li><p>使用 <code>yarn add</code> 下载</p><p><code>yarn remove</code> 删除</p><p><code>yarn upgrade</code> 更新</p><p><code>yarn init</code></p><p><code>yarn install</code> 生成package.json</p><p><code>yarn global add xxx</code> 安装全局（需要配置环境变量，通过查看全局路径获取）</p><p><code>yarn global bin</code> 查看全局路径；</p></li></ol><h2 id="三、nrm"><a class="header-anchor" href="#三、nrm" aria-hidden="true">#</a> 三、nrm</h2><blockquote><p>npm源管理器，可以快速地在npm源间切换</p></blockquote><p>安装：<code>npm i -g nrm</code>;</p><p>使用：</p><p><code>nrm ls</code> 查看所有可选的源</p><p><code>nrm use taobao</code> 切换对应的源</p><p><code>nrm test npm</code> 测试相应源的响应时间</p><p><code>nrm add registr http://....</code> 增加新的源</p><p><code>nrm del registr</code> 删除对应的源</p><p>注意：nrm是用来切换源的 装包工具还是使用npm或yarn</p><h2 id="四、nvm"><a class="header-anchor" href="#四、nvm" aria-hidden="true">#</a> 四、nvm</h2><blockquote><p>是一款node切换版本的工具，用法和nrm类似</p></blockquote><p><strong>注意</strong>：安装之前请将之前的nodejs文件夹修改一下名字，之后再进行安装，避免出现使用错误情况；默认路径：<code>C:\\Program Files\\nodejs</code></p><ol><li><p>下载 下载地址： <a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener noreferrer">https://github.com/coreybutler/nvm-windows/releases</a></p><p>github进不去，可以进这个地址：<a href="https://lanzous.com/ic14vtc" target="_blank" rel="noopener noreferrer">https://lanzous.com/ic14vtc</a></p><p><img src="https://notecdn.heny.vip/images/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-04.png" alt="image"></p><p><code>nvm-noinstall.zip</code>： 这个是绿色免安装版本，但是使用之前需要配置</p><p><code>nvm-setup.zip</code>：这是一个安装包，下载之后点击安装，无需配置就可以使用，方便。</p><p><code>Source code(zip)</code>：zip压缩的源码</p><p><code>Sourc code(tar.gz)</code>：tar.gz的源码，一般用于*nix系统</p></li><li><p>安装</p><p><img src="https://notecdn.heny.vip/images/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-05.png" alt="image"></p></li></ol><p>按照提示完成安装即可，安装完成后可以检测一下是否安装成功</p><p>在cmd命令行输入nvm,如果出现nvm版本号和一系列帮s助指令，则说明nvm安装成功。</p><p><img src="https://notecdn.heny.vip/images/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-06.png" alt="image"></p><ol start="3"><li><p>修改settings.txt</p><p>在你安装的目录下找到settings.txt文件，打开后加上</p><div class="language-text"><pre><code>node_mirror: https://npm.taobao.org/mirrors/node/ \nnpm_mirror: https://npm.taobao.org/mirrors/npm/\n</code></pre></div><p>这一步主要是将npm镜像改为淘宝的镜像，可以提高下载速度。</p><p><img src="https://notecdn.heny.vip/images/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-07.png" alt="image"></p></li><li><p>node.js安装 可以先使用 nvm list 查看本地已安装的版本</p><p><img src="https://notecdn.heny.vip/images/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-08.png" alt="image"></p><p>然后使用 nvm list available 查看所有版本</p><p><img src="https://notecdn.heny.vip/images/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-09.png" alt="image"></p><p>使用 nvm insttall 版本号 安装制定的版本，如nvm install 12.2.0</p><p><img src="https://notecdn.heny.vip/images/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-10.png" alt="image"></p></li><li><p>NVM常用命令</p></li></ol><ul><li><code>nvm list</code> 查看已经安装的版本</li><li><code>nvm list installed</code> 查看已经安装的版本</li><li><code>nvm list available</code> 查看网络可以安装的版本</li><li><code>nvm version</code> 查看当前的版本</li><li><code>nvm install</code> 安装最新版本nvm</li><li><code>nvm use &lt;version&gt;</code> ## 切换使用指定的版本node</li><li><code>nvm ls</code> 列出所有版本</li><li><code>nvm current</code> 显示当前版本</li><li><code>nvm alias &lt;name&gt; &lt;version&gt;</code> ## 给不同的版本号添加别名</li><li><code>nvm unalias &lt;name&gt;</code> ## 删除已定义的别名</li><li><code>nvm reinstall-packages &lt;version&gt;</code> ## 在当前版本node环境下，重新全局安装指定版本号的npm包</li><li><code>nvm on</code> 打开nodejs控制</li><li><code>nvm off</code> 关闭nodejs控制</li><li><code>nvm proxy</code> 查看设置与代理</li><li><code>nvm node_mirror [url]</code> 设置或者查看setting.txt中的node_mirror，如果不设置的默认是 <a href="https://nodejs.org/dist/" target="_blank" rel="noopener noreferrer">https://nodejs.org/dist/</a></li><li><code>nvm npm_mirror [url]</code> 设置或者查看setting.txt中的npm_mirror,如果不设置的话默认的是： <a href="https://github.com/npm/npm/archive/" target="_blank" rel="noopener noreferrer">https://github.com/npm/npm/archive/</a>.</li><li><code>nvm uninstall &lt;version&gt;</code> 卸载制定的版本</li><li><code>nvm use [version] [arch]</code> 切换制定的node版本和位数</li><li><code>nvm root [path]</code> 设置和查看root路径</li></ul><h2 id="五、常用cdn地址"><a class="header-anchor" href="#五、常用cdn地址" aria-hidden="true">#</a> 五、常用CDN地址</h2><ul><li><p><a href="https://www.jsdelivr.com/" target="_blank" rel="noopener noreferrer">jsdelivr</a></p><p>常用cdn地址：<a href="https://cdn.jsdelivr.net/npm/jquery" target="_blank" rel="noopener noreferrer">https://cdn.jsdelivr.net/npm/jquery</a> 后面填写包名</p></li><li><p><a href="https://www.bootcdn.cn/" target="_blank" rel="noopener noreferrer">BootCDN</a></p></li><li><p><a href="https://unpkg.com/" target="_blank" rel="noopener noreferrer">unpkg</a></p></li></ul><p><strong>参考地址</strong></p><ol><li>教程：<a href="https://blog.csdn.net/guochanof/article/details/90118710" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/guochanof/article/details/90118710</a></li></ol>',69);l.render=function(r,n,l,p,a,t){return e(),o("div",null,[i])};export default l;export{n as __pageData};

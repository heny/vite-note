import{o as n,c as s,d as a}from"./app.246f1876.js";const t='{"title":"React-08 React搭建项目","description":"","frontmatter":{},"headers":[{"level":2,"title":"目录","slug":"目录"},{"level":2,"title":"在react中使用stylus","slug":"在react中使用stylus"},{"level":2,"title":"搭建redux + persist数据持久化 + redux-devtools扩展查看;","slug":"搭建redux-persist数据持久化-redux-devtools扩展查看"},{"level":2,"title":"引入图片的两种方式","slug":"引入图片的两种方式"},{"level":2,"title":"在脚手架中修改端口号","slug":"在脚手架中修改端口号"},{"level":2,"title":"给React挂载内容，方便组件不引入直接调用","slug":"给react挂载内容，方便组件不引入直接调用"},{"level":2,"title":"配置webpack","slug":"配置webpack"},{"level":2,"title":"配置别名","slug":"配置别名"},{"level":2,"title":"antd使用技巧","slug":"antd使用技巧"},{"level":2,"title":"react百度埋点技巧","slug":"react百度埋点技巧"},{"level":2,"title":"使用hooks搭建一个小型的redux","slug":"使用hooks搭建一个小型的redux"}],"relativePath":"src/frontend/React/React搭建项目.md","lastUpdated":1615699077393}',p={},o=a('<h1 id="react-08-react搭建项目"><a class="header-anchor" href="#react-08-react搭建项目" aria-hidden="true">#</a> React-08 React搭建项目</h1><p>安装</p><div class="language-bash"><pre><code><span class="token function">yarn</span> global <span class="token function">add</span> create-react-app\n</code></pre></div><p>生成项目</p><div class="language-bash"><pre><code><span class="token function">yarn</span> create react-app demo<span class="token punctuation">(</span>项目名称<span class="token punctuation">)</span>  <span class="token comment"># 创建一个脚手架（带hook依赖检测）</span>\n<span class="token function">yarn</span> create react-app demo --template typescript <span class="token comment"># 创建一个typescript的react脚手架</span>\n</code></pre></div><h2 id="目录"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><p>在src，创建目录</p><p>assets、common、components、router</p><p>如果需要引入api，可以在common文件下面创建一个api的文件；</p><p>表单验证框架：rc-form，用法可以直接参照antd的form表单，使用方法一致；</p><h2 id="在react中使用stylus"><a class="header-anchor" href="#在react中使用stylus" aria-hidden="true">#</a> 在react中使用stylus</h2><ol><li>打开git bash，依次运行以下代码</li></ol><div class="language-bash"><pre><code><span class="token function">git</span> init\n<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>\n<span class="token function">git</span> common -m <span class="token string">&#39;description&#39;</span>\n</code></pre></div><ol start="2"><li>打开cmd运行：</li></ol><div class="language-cmd"><pre><code>npm run eject\nyarn add stylus stylus-loader\n</code></pre></div><p>注意：此时重启，可能会报错，删除node_nodules，执行yarn install重新安装所有的包重启即可；</p><ol start="3"><li>到项目文件夹下，找到config --&gt; webpack.config.js</li></ol><p>（1）在320行左右，添加以下代码</p><div class="language-jsx"><pre><code>oneOf<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.styl$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        loaders<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;stylus-loader&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token operator">...</span><span class="token punctuation">.</span>\n<span class="token punctuation">]</span>\n</code></pre></div><p>（2）如果需要配置别名@符</p><div class="language-jsx"><pre><code><span class="token comment">// 在274行左右修改</span>\n<span class="token string">&#39;react-native&#39;</span><span class="token operator">:</span> <span class="token string">&#39;react-native-web&#39;</span>\n<span class="token string">&#39;@&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="搭建redux-persist数据持久化-redux-devtools扩展查看"><a class="header-anchor" href="#搭建redux-persist数据持久化-redux-devtools扩展查看" aria-hidden="true">#</a> 搭建redux + persist数据持久化 + redux-devtools扩展查看;</h2><ol><li><p>下载安装： <code>npm i redux react-redux redux-persist redux-devtools-extension redux-thunk</code></p></li><li><p>创建store/reducers/index.js</p></li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> combineReducers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">combineReducers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token comment">/*...*/</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><ol start="3"><li>创建store/index.js</li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> applyMiddleware<span class="token punctuation">,</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux&#39;</span>\n<span class="token keyword">import</span> rootReducer <span class="token keyword">from</span> <span class="token string">&#39;./reducers&#39;</span> <span class="token comment">//自动获取index.js</span>\n\n<span class="token keyword">import</span> thunk <span class="token keyword">from</span> <span class="token string">&#39;redux-thunk&#39;</span> <span class="token comment">// 异步处理中间件</span>\n<span class="token comment">// 谷歌工具函数</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> composeWithDevTools <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux-devtools-extension&#39;</span>\n<span class="token comment">// 引入数据持久化</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> persistReducer<span class="token punctuation">,</span> persistStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux-persist&#39;</span>\n<span class="token keyword">import</span> storage <span class="token keyword">from</span> <span class="token string">&#39;redux-persist/lib/storage&#39;</span>\n\n<span class="token keyword">const</span> rootPersistConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>\n    storage<span class="token punctuation">,</span>\n    <span class="token comment">/* blacklist: [/*填入reduers/index.js里面有持久化的数据的字段key值*/</span><span class="token punctuation">]</span> 如果reduers文件夹里面没有使用persist则可以不写blacklist   <span class="token operator">*</span><span class="token operator">/</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> persistedReducer <span class="token operator">=</span> <span class="token function">persistReducer</span><span class="token punctuation">(</span>rootPersistConfig<span class="token punctuation">,</span> rootReducer<span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>\n    persistedReducer<span class="token punctuation">,</span>\n    <span class="token function">composeWithDevTools</span><span class="token punctuation">(</span>\n        <span class="token function">applyMiddleware</span><span class="token punctuation">(</span>thunk<span class="token punctuation">)</span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> persistor <span class="token operator">=</span> <span class="token function">persistStore</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span>\n</code></pre></div><ol start="4"><li>创建store/actions，store/action-types.js</li></ol><p>在actions文件夹里面，导出触发的方法，在action-types.js里面管理变量名；</p><ol start="5"><li>在src/index.js文件配置</li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>\n<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> PersistGate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux-persist/integration/react&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> store<span class="token punctuation">,</span> persistor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App&#39;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Provider</span></span> <span class="token attr-name">store</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PersistGate</span></span> <span class="token attr-name">persistor</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>persistor<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">PersistGate</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Provider</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>\n    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n</code></pre></div><h2 id="引入图片的两种方式"><a class="header-anchor" href="#引入图片的两种方式" aria-hidden="true">#</a> 引入图片的两种方式</h2><ol><li>使用import引入</li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> <span class="token constant">IMG</span> <span class="token keyword">from</span> <span class="token string">&#39;../...&#39;</span>\n</code></pre></div><ol start="2"><li>在状态机引入</li></ol><div class="language-jsx"><pre><code>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    img<span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;....&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>img<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>\n\n<span class="token comment">// 也可以直接在src里面引入</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@/assets&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre></div><h2 id="在脚手架中修改端口号"><a class="header-anchor" href="#在脚手架中修改端口号" aria-hidden="true">#</a> 在脚手架中修改端口号</h2><ol><li>node_model ==&gt; react-script ==&gt; script ==&gt; start.js</li></ol><p>找到DEFAULT_PORT，并修改即可，修改了服务器需要进行重启；</p><ol start="2"><li>在启动时直接修改端口启动</li></ol><p>在package.json里面修改script--&gt;start</p><div class="language-json"><pre><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>\n    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;set PORT=9000 &amp;&amp; react-scripts start&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>&amp; 为并行执行，同时执行，</p><p>&amp;&amp; 为继发执行，前一个成功才执行后一个</p><ol start="3"><li>直接在config.overrides.js修改</li></ol><div class="language-jsx"><pre><code>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span> <span class="token operator">=</span> <span class="token number">3006</span>\n</code></pre></div><h2 id="给react挂载内容，方便组件不引入直接调用"><a class="header-anchor" href="#给react挂载内容，方便组件不引入直接调用" aria-hidden="true">#</a> 给React挂载内容，方便组件不引入直接调用</h2><ol><li>index.js，修改入口文件</li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>\n<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App&#39;</span>\nReact<span class="token punctuation">.</span>Component<span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">&#39;hhhh&#39;</span> <span class="token comment">// 直接类组件使用this.message添加</span>\n<span class="token comment">// or：</span>\nReact<span class="token punctuation">.</span>$message <span class="token operator">=</span> <span class="token string">&#39;hhh&#39;</span> <span class="token comment">// 组件引入即可;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span><span class="token punctuation">/&gt;</span></span><span class="token punctuation">,</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div><ol start="2"><li>在组件中使用</li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>message<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>message<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="配置webpack"><a class="header-anchor" href="#配置webpack" aria-hidden="true">#</a> 配置webpack</h2><ol><li>安装</li></ol><p><code>yarn add react-app-rewired customize-cra -D</code></p><p>由于customize-cra依赖react-app-rewired，所以需要安装两个插件</p><p>官网： <a href="https://github.com/arackaf/customize-cra" target="_blank" rel="noopener noreferrer">https://github.com/arackaf/customize-cra</a></p><p>也可以使用：<code>craco</code>；</p><ol start="2"><li>修改package.json</li></ol><div class="language-json"><pre><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> \n    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;react-app-rewired start&quot;</span><span class="token punctuation">,</span> \n    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;react-app-rewired build&quot;</span><span class="token punctuation">,</span> \n    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;react-app-rewired test --env=jsdom&quot;</span><span class="token punctuation">,</span> \n    <span class="token property">&quot;eject&quot;</span><span class="token operator">:</span> <span class="token string">&quot;react-scripts eject&quot;</span> \n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div><ol start="3"><li>在项目根目录新建：config-overrides.js</li></ol><div class="language-jsx"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> override <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;customize-cra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><ol start="4"><li>添加配置，跨域设置、增加less支持、px转rem、ant-design-mobile按需加载、打包压缩js和css、关闭console</li></ol><div class="language-jsx"><pre><code><span class="token comment">// 安装less less-loader</span>\nyarn add less less<span class="token operator">-</span>loader <span class="token operator">-</span><span class="token constant">D</span>\n<span class="token comment">// 安装compression-webpack-plugin 压缩js为gzip</span>\nyarn add compression<span class="token operator">-</span>webpack<span class="token operator">-</span>plugin <span class="token operator">-</span><span class="token constant">D</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> \n    override<span class="token punctuation">,</span> \n    overrideDevServer<span class="token punctuation">,</span> \n    addLessLoader<span class="token punctuation">,</span> \n    addPostcssPlugins<span class="token punctuation">,</span>\n    addWebpack \n    fixBabelImports <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;customize-cra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> CompressionWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;compression-webpack-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 打包配置</span>\n<span class="token keyword">const</span> <span class="token function-variable function">addCustomize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 关闭sourceMap</span>\n    config<span class="token punctuation">.</span>devtool <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token comment">// 配置打包后的文件位置</span>\n    config<span class="token punctuation">.</span>output<span class="token punctuation">.</span>path <span class="token operator">=</span> __dirname <span class="token operator">+</span> <span class="token string">&#39;../dist/demo/&#39;</span><span class="token punctuation">;</span>\n    config<span class="token punctuation">.</span>output<span class="token punctuation">.</span>publicPath <span class="token operator">=</span> <span class="token string">&#39;./demo&#39;</span><span class="token punctuation">;</span>\n    <span class="token comment">// 添加js打包gzip配置</span>\n    config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n      <span class="token keyword">new</span> <span class="token class-name">CompressionWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$|\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        threshold<span class="token operator">:</span> <span class="token number">1024</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> config<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 跨域配置</span>\n<span class="token keyword">const</span> <span class="token function-variable function">devServerConfig</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>config<span class="token punctuation">,</span>\n    <span class="token comment">// 服务开启gzip</span>\n    compress<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    proxy<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        target<span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span>\n        changeOrigin<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        pathRewrite<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token string">&#39;^/api&#39;</span><span class="token operator">:</span> <span class="token string">&#39;/api&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 生产环境去除console</span>\n<span class="token keyword">const</span> <span class="token function-variable function">dropConsole</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>optimization<span class="token punctuation">.</span>minimizer<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      config<span class="token punctuation">.</span>optimization<span class="token punctuation">.</span>minimizer<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">minimizer</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>minimizer<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;TerserPlugin&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          minimizer<span class="token punctuation">.</span>options<span class="token punctuation">.</span>terserOptions<span class="token punctuation">.</span>compress<span class="token punctuation">.</span>drop_console <span class="token operator">=</span> <span class="token boolean">true</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> config\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  webpack<span class="token operator">:</span> <span class="token function">override</span><span class="token punctuation">(</span>\n    <span class="token function">fixBabelImports</span><span class="token punctuation">(</span><span class="token string">&#39;import&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      libraryName<span class="token operator">:</span> <span class="token string">&#39;antd-mobile&#39;</span><span class="token punctuation">,</span>\n      style<span class="token operator">:</span> <span class="token string">&#39;css&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">dropConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">addLessLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">addPostcssPlugins</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;postcss-pxtorem&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        rootValue<span class="token operator">:</span> <span class="token number">75</span><span class="token punctuation">,</span> \n        propList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \n        minPixelValue<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> \n        selectorBlackList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;am-&#39;</span><span class="token punctuation">]</span> \n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">addCustomize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">//devServer需要分开配置</span>\n  devServer<span class="token operator">:</span> <span class="token function">overrideDevServer</span><span class="token punctuation">(</span>\n    <span class="token function">devServerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="5"><li>添加webpack其他插件</li></ol><div class="language-jsx"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> override<span class="token punctuation">,</span> addWebpackPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;customize-cra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token keyword">const</span> AntdDayjsWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;antd-dayjs-webpack-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">override</span><span class="token punctuation">(</span>\n    <span class="token function">addWebpackPlugin</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AntdDayjsWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><ol start="6"><li>自定义override的函数</li></ol><div class="language-jsx"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">curtomFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n    <span class="token comment">// 填写需要做的事情</span>\n    <span class="token keyword">return</span> config\n<span class="token punctuation">}</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">override</span><span class="token punctuation">(</span>\n    <span class="token function">curtomFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 在里面调用一下即可</span>\n    <span class="token comment">// 还可以在函数后面调用</span>\n    <span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span>env</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> config\n    <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre></div><ol start="7"><li>配置flex布局在低版本手机不兼容</li></ol><p>直接修改package.json文件</p><div class="language-json"><pre><code><span class="token property">&quot;browserslist&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&quot;defaults&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;not ie &lt; 11&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;last 2 versions&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;&gt; 1%&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;iOS 7&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;last 3 iOS versions&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="8"><li>如果要使用类的装饰器decorators</li></ol><p>由于是实验性功能，官方不建议使用，因此需要手动开启</p><p>npm i @babel/plugin-proposal-decorators</p><div class="language-jsx"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> override<span class="token punctuation">,</span> fixBabelImports<span class="token punctuation">,</span> addLessLoader<span class="token punctuation">,</span> addDecoratorsLegacy <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;customize-cra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">override</span><span class="token punctuation">(</span> \n    <span class="token function">addDecoratorsLegacy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="配置别名"><a class="header-anchor" href="#配置别名" aria-hidden="true">#</a> 配置别名</h2><ol><li>安装插件 <code>yarn add react-app-rewired customize-cra</code></li><li>在项目根目录创建一个config-overrides.js，用于修改默认配置；</li><li>代理文件路径</li></ol><div class="language-jsx"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> override<span class="token punctuation">,</span> addWebpackAlias <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;customize-cra&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">override</span><span class="token punctuation">(</span>\n    <span class="token function">addWebpackAlias</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token string">&#39;@&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;components&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&#39;src/components&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;assets&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&#39;src/assets&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// 将常用的几个文件夹挂载;</span>\n<span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://notecdn.heny.vip/images/react-08_React%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE-01.png" alt="image"></p><p>打包</p><ol><li>在package.json配置文件中添加一句 &quot;homepage&quot;: &quot;.&quot;,</li></ol><p><img src="https://notecdn.heny.vip/images/react-08_React%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE-02.png" alt="image"></p><ol start="2"><li>之后运行npm run build；</li></ol><h2 id="antd使用技巧"><a class="header-anchor" href="#antd使用技巧" aria-hidden="true">#</a> antd使用技巧</h2><p>防止message弹窗点击一直增加</p><div class="language-jsx"><pre><code>state <span class="token operator">=</span> <span class="token punctuation">{</span>timer<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span>\n<span class="token function-variable function">message2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span>delay</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>timer<span class="token punctuation">)</span> <span class="token keyword">return</span>\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token keyword">null</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>delay<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>写入内容为ReactNode的节点，可以自定义样式；</p><div class="language-jsx"><pre><code>footer<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token punctuation">]</span><span class="token punctuation">}</span>\n</code></pre></div><h2 id="react百度埋点技巧"><a class="header-anchor" href="#react百度埋点技巧" aria-hidden="true">#</a> react百度埋点技巧</h2><ol><li>创建utils/tracking.js</li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getPreHost <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/basic/utils&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// 判断环境, 生产环境才统计</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getPreHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;prod&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> _hmt <span class="token operator">=</span> _hmt <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> hm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    hm<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> s <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    s<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>hm<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 禁止自动发送pv、uv统计, 手动去统计</span>\n  _hmt<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;_setAutoPageview&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="2"><li>创建完成在index.js手动引入</li></ol><div class="language-jsx"><pre><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;src/utils/tracking&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><ol start="3"><li>创建utils/index ，添加节流函数和百度统计方法</li></ol><div class="language-jsx"><pre><code><span class="token comment">/**\n* 节流函数\n* @param {func} fn 待执行的函数体\n* @param {number} timeout 控制节流时间\n*/</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> timeout <span class="token operator">=</span> <span class="token number">300</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> canRun <span class="token operator">=</span> <span class="token boolean">true</span>\n  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>canRun<span class="token punctuation">)</span> <span class="token keyword">return</span>\n    canRun <span class="token operator">=</span> <span class="token boolean">false</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>\n      canRun <span class="token operator">=</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/**\n* 触发数据统计,在需要埋点的地方写入统计\n* 百度统计文档：https://tongji.baidu.com/web/help/index?from=2\n*/</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">trackData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> _hmt <span class="token punctuation">}</span> <span class="token operator">=</span> window\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>_hmt<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _hmt<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="4"><li>创建Tracking.js组件</li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>withRouter<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-router-dom&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>trackData<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/utils&#39;</span>\n<span class="token keyword">const</span> trackRunning <span class="token operator">=</span> <span class="token function">throttle</span><span class="token punctuation">(</span>trackData<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span> <span class="token comment">// 使用节流函数, 防止页面触发多次</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Tracking</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">componentWillReceiveProps</span><span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">trackRunning</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;_trackPageview&#39;</span><span class="token punctuation">,</span> next<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withRouter</span><span class="token punctuation">(</span>Tracking<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><ol start="5"><li>在index创建App.js时，使用Tracking.js组件进行包裹，所有代码写在该组件下面</li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> Tracking <span class="token keyword">from</span> <span class="token string">&#39;./Tracking&#39;</span>\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">render</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tracking</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tracking</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="6"><li>埋点示例</li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>trackData<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;utils&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">function</span> <span class="token function">tracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">trackData</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;_trackEvent&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;测试百度统计&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n            &lt;button onClick=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain-text">&gt;触发</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="使用hooks搭建一个小型的redux"><a class="header-anchor" href="#使用hooks搭建一个小型的redux" aria-hidden="true">#</a> 使用hooks搭建一个小型的redux</h2><ol><li>创建context/reducer.js</li></ol><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">reducer</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> <span class="token punctuation">{</span>type<span class="token punctuation">,</span> <span class="token operator">...</span>payloads<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">switch</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token string">&quot;SET_VALUE&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token operator">...</span>state<span class="token punctuation">,</span>\n      <span class="token punctuation">[</span>payloads<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token operator">:</span> payloads<span class="token punctuation">.</span>value\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token string">&quot;DELETE_VALUE&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> curState <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">delete</span> curState<span class="token punctuation">[</span>payloads<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> curState<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">return</span> state<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="2"><li>创建context/index.js</li></ol><div class="language-js"><pre><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useReducer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">&quot;./reducer&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> initState <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">createBaseContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> ctx <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">function</span> <span class="token function">useBaseContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> ctxConst <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ctxConst<span class="token punctuation">)</span> \n      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;useBaseContext must be inside a Provider with a value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> ctxConst<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>ctx<span class="token punctuation">,</span> useBaseContext<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>Context<span class="token punctuation">,</span> useBaseContext<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">createBaseContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">usePageContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> pageContext <span class="token operator">=</span> <span class="token function">useBaseContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// TODO custom some</span>\n  <span class="token keyword">return</span> pageContext<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">PageContext</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>children <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initState<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">getValue</span> <span class="token operator">=</span> <span class="token parameter">key</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">setValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&quot;SET_VALUE&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">delValue</span> <span class="token operator">=</span> <span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&quot;DELETE_VALUE&quot;</span><span class="token punctuation">,</span> key <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">let</span> ctx <span class="token operator">=</span> <span class="token punctuation">{</span>\n    state<span class="token punctuation">,</span>\n    dispatch<span class="token punctuation">,</span>\n    getValue<span class="token punctuation">,</span>\n    setValue<span class="token punctuation">,</span>\n    delValue\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> fatherPageCtx <span class="token operator">=</span> <span class="token function">usePageContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>fatherPageCtx<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      ctx <span class="token operator">=</span> fatherPageCtx<span class="token punctuation">;</span>\n      console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Use father page context&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token operator">&lt;</span>Context<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>ctx<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Context<span class="token punctuation">.</span>Provider<span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="3"><li>在入口文件引入</li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-dom&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> PageContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./context&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    \t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PageContext</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">PageContext</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">,</span> root<span class="token punctuation">)</span>\n</code></pre></div><ol start="4"><li>使用时：</li></ol><div class="language-js"><pre><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> usePageContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./context&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> state <span class="token punctuation">}</span>  <span class="token operator">=</span> <span class="token function">usePageContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',108);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};

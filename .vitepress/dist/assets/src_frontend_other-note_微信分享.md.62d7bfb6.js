import{o as n,c as s,d as a}from"./app.bd8718b4.js";const p='{"title":"微信分享","description":"","frontmatter":{},"headers":[{"level":2,"title":"后端接口配置","slug":"后端接口配置"},{"level":2,"title":"前台配置","slug":"前台配置"}],"relativePath":"src\\\\frontend\\\\other-note\\\\微信分享.md","lastUpdated":1615699077554}',t={},o=a('<h1 id="微信分享"><a class="header-anchor" href="#微信分享" aria-hidden="true">#</a> 微信分享</h1><p>JS-SDK 文档：<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html" target="_blank" rel="noopener noreferrer">https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html</a></p><p>具体操作方式进入上面文档查看，这里讲如何写后端接口</p><h2 id="后端接口配置"><a class="header-anchor" href="#后端接口配置" aria-hidden="true">#</a> 后端接口配置</h2><ol><li><p>使用<code>express-generator</code>脚手架搭建一个<code>express+node</code>的项目；</p><p>全局安装：<code>npm -g i express-gennerator</code></p><p>生成项目：<code>express demo</code></p><p>运行<code>npm run start</code>启动，默认启动端口为：3000；</p></li><li><p>将微信js接口安全域名的文件放在<code>public</code>文件夹下面</p><p><img src="https://notecdn.heny.vip/images/%E5%BE%AE%E4%BF%A1%E5%88%86%E4%BA%AB01.png" alt="image-20200502134401364"></p></li><li><p>安装项目依赖</p><p><code>npm install axios cookie-session crypto</code>；</p><p><code>axios</code>用于请求接口，<code>cookie-session</code>用于储存session，<code>crypto</code>用于加密生成密钥</p><p>在<code>app.js</code>文件注册session</p><div class="language-js"><pre><code><span class="token keyword">const</span> cookieSession <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;cookie-session&#39;</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cookieSession</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;session&#39;</span><span class="token punctuation">,</span>\n  keys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;hny@#!&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;heny*_!&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  maxAge<span class="token operator">:</span> <span class="token number">7200</span> <span class="token operator">*</span> <span class="token number">1000</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div></li><li><p>创建<code>utils/index.js</code>文件，用于写公共方法；</p><ul><li>获取<code>access_token</code>方法：</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span>get<span class="token operator">:</span> fetchGet<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;axios&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default\nexports<span class="token punctuation">.</span><span class="token function-variable function">getAccess_token</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> timestamp <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 判断缓存里是否有access_token且没有过期,并且获取该access_token时的appId与现在的一致，判断appId是为了避免切换不同公众号配置时没有清缓存出现错误</span>\n  <span class="token comment">// 如果以上条件不能同时满足，则重新请求access_token</span>\n  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>tokenObj <span class="token operator">||</span> req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>tokenObj<span class="token punctuation">.</span>expires_in <span class="token operator">&lt;</span> timestamp <span class="token operator">||</span> req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>tokenObj<span class="token punctuation">.</span>app_id <span class="token operator">!==</span> config<span class="token punctuation">.</span>appId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> tokenResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchGet</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>config<span class="token punctuation">.</span>appId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;secret=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>config<span class="token punctuation">.</span>secret<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>tokenResult<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> tokenResult<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> tokenResult<span class="token punctuation">.</span>data<span class="token punctuation">.</span>access_token<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>tokenObj <span class="token operator">=</span> <span class="token punctuation">{</span>\n        access_token<span class="token operator">:</span> tokenResult<span class="token punctuation">.</span>data<span class="token punctuation">.</span>access_token<span class="token punctuation">,</span>\n        expires_in<span class="token operator">:</span> timestamp <span class="token operator">+</span> tokenResult<span class="token punctuation">.</span>data<span class="token punctuation">.</span>expires_in <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">// 过期时间</span>\n        app_id<span class="token operator">:</span> config<span class="token punctuation">.</span>appId\n      <span class="token punctuation">}</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>code<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">...</span>tokenResult<span class="token punctuation">.</span>data<span class="token punctuation">,</span> app_id<span class="token operator">:</span> config<span class="token punctuation">.</span>appId<span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token string">&#39;请求成功&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 记录错误日志</span>\n      req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>tokenObj <span class="token operator">=</span> <span class="token keyword">null</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>code<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> error<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>tokenResult<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token string">&#39;请求出错了&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>code<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">...</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>tokenObj<span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token string">&#39;缓存中存在&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><ul><li>获取<code>jsapi_ticket</code></li></ul><div class="language-js"><pre><code><span class="token comment">// 获取jsapi_ticket</span>\nexports<span class="token punctuation">.</span><span class="token function-variable function">getJsapi_ticket</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span> <span class="token keyword">async</span> <span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  timestamp <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>jsapiObj <span class="token operator">||</span> req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>jsapiObj<span class="token punctuation">.</span>expires_in <span class="token operator">&lt;</span> timestamp <span class="token operator">||</span> req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>jsapiObj<span class="token punctuation">.</span>app_id <span class="token operator">!==</span> config<span class="token punctuation">.</span>appId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// console.log(req.session.tokenObj, &#39;获取ticket的tokenObj&#39;)</span>\n    <span class="token keyword">const</span> jsapiResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchGet</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>tokenObj<span class="token punctuation">.</span>access_token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;type=jsapi</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>jsapiResult<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> jsapiResult<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> jsapiResult<span class="token punctuation">.</span>data<span class="token punctuation">.</span>errcode <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>jsapiObj <span class="token operator">=</span> <span class="token punctuation">{</span>\n        ticket<span class="token operator">:</span> jsapiResult<span class="token punctuation">.</span>data<span class="token punctuation">.</span>ticket<span class="token punctuation">,</span>\n        expires_in<span class="token operator">:</span> timestamp <span class="token operator">+</span> jsapiResult<span class="token punctuation">.</span>data<span class="token punctuation">.</span>expires_in <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span>\n        app_id<span class="token operator">:</span> config<span class="token punctuation">.</span>appId\n      <span class="token punctuation">}</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>code<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">...</span>jsapiResult<span class="token punctuation">.</span>data<span class="token punctuation">,</span> app_id<span class="token operator">:</span> config<span class="token punctuation">.</span>appId<span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token string">&#39;请求成功&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>jsapiObj <span class="token operator">=</span> <span class="token keyword">null</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>code<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> error<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>jsapiResult<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token string">&#39;请求出错了&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>code<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">...</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>jsapiObj<span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token string">&#39;缓存中存在&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><ul><li>生成uui方法</li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0x10000</span><span class="token operator">|</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 获取uuid</span>\nexports<span class="token punctuation">.</span><span class="token function-variable function">uuid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span>\n</code></pre></div></li><li><p>在<code>routes/index.js</code>写入脚本</p><div class="language-js"><pre><code><span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> uuid<span class="token punctuation">,</span> getAccess_token<span class="token punctuation">,</span> getJsapi_ticket <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../utils/index&#39;</span><span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/getSignature&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n    appId<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n    secret<span class="token operator">:</span> <span class="token string">&#39;&#39;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAccess_token</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> config<span class="token punctuation">)</span>\n  <span class="token comment">// 处理错误</span>\n  <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getJsapi_ticket</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> config<span class="token punctuation">)</span>\n  <span class="token comment">// 处理错误</span>\n  <span class="token keyword">if</span><span class="token punctuation">(</span>result2<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  \n  <span class="token comment">// 处理前端返回数据</span>\n  <span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> nonceStr <span class="token operator">=</span> <span class="token function">uuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">jsapi_ticket=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>result2<span class="token punctuation">.</span>ticket<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;noncestr=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>nonceStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;timestamp=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;url=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token keyword">const</span> signature <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>\n  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    code<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    message<span class="token operator">:</span> <span class="token string">&#39;请求成功&#39;</span><span class="token punctuation">,</span>\n    result<span class="token operator">:</span> <span class="token punctuation">{</span>\n      timestamp<span class="token punctuation">,</span>\n      nonceStr<span class="token punctuation">,</span>\n      signature\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div></li><li><p><code>appid</code>和<code>secret</code>可以在公众号创建测试号，用于测试写的接口是否成功</p><p>路径：公众号首页--》开发者工具--》公众号平台测试账号</p><p>上线后注意更改为正式环境的<code>appid</code>和<code>secret</code>；</p></li><li><p>在<code>app.js</code>处理跨域请求</p><div class="language-js"><pre><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Origin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Headers&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Content-Type,Content-Length, Authorization, Accept, X-Requested-With , yourHeaderFeild&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Methods&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;PUT, POST, GET, DELETE,OPTIONS&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div></li></ol><h2 id="前台配置"><a class="header-anchor" href="#前台配置" aria-hidden="true">#</a> 前台配置</h2><p>创建sharewx.js文件，写入以下方法，并在首页注入；</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">shareWeixin</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">)</span>\n  <span class="token function">getWXSignature</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 调用上面写好的后台接口</span>\n<span class="token keyword">function</span> <span class="token function">getWXSignature</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> 您的host地址 <span class="token operator">+</span> <span class="token string">&#39;/getSignature?url=https://web.heny.vip&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n  xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">{</span>\n      <span class="token function">initJSSDk</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> res<span class="token punctuation">.</span>result<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  xhr<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;请求出错了&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">initJSSDk</span> <span class="token punctuation">(</span><span class="token parameter">params<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    debug<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span>\n    appId<span class="token operator">:</span> <span class="token string">&#39;wxe3550d862292b3ad&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 必填，公众号的唯一标识（uat和生产环境不同）</span>\n    timestamp<span class="token operator">:</span> data<span class="token punctuation">.</span>timestamp<span class="token punctuation">,</span> <span class="token comment">// 必填，生成签名的时间戳</span>\n    nonceStr<span class="token operator">:</span> data<span class="token punctuation">.</span>nonceStr<span class="token punctuation">,</span> <span class="token comment">// 必填，生成签名的随机串</span>\n    signature<span class="token operator">:</span> data<span class="token punctuation">.</span>signature<span class="token punctuation">,</span> <span class="token comment">// 必填，签名</span>\n    jsApiList<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token string">&#39;updateAppMessageShareData&#39;</span><span class="token punctuation">,</span>\n      <span class="token string">&#39;updateTimelineShareData&#39;</span><span class="token punctuation">,</span>\n      <span class="token string">&#39;onMenuShareTimeline&#39;</span><span class="token punctuation">,</span>\n      <span class="token string">&#39;onMenuShareAppMessage&#39;</span>\n    <span class="token punctuation">]</span> <span class="token comment">// 必填，需要使用的JS接口列表</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token function">shareContent</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">function</span> <span class="token function">shareContent</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> title <span class="token operator">=</span> document<span class="token punctuation">.</span>title <span class="token operator">||</span> <span class="token string">&#39;前端学习圈&#39;</span>\n  <span class="token keyword">var</span> desc <span class="token operator">=</span> <span class="token string">&#39;前端学习圈&#39;</span>\n  <span class="token keyword">var</span> imgUrl <span class="token operator">=</span> <span class="token string">&#39;https://notecdn.heny.vip/weblearns.png&#39;</span>\n  <span class="token keyword">var</span> linkUrl <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    title <span class="token operator">=</span> params<span class="token punctuation">.</span>title <span class="token operator">||</span> title\n    desc <span class="token operator">=</span> params<span class="token punctuation">.</span>desc <span class="token operator">||</span> desc\n    imgUrl <span class="token operator">=</span> params<span class="token punctuation">.</span>imgUrl <span class="token operator">||</span> imgUrl\n    linkUrl <span class="token operator">=</span> params<span class="token punctuation">.</span>linkUrl <span class="token operator">||</span> linkUrl\n  <span class="token punctuation">}</span>\n\n  window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;分享的内容#&#39;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span>\n    <span class="token comment">//需在用户可能点击分享按钮前就先调用</span>\n    <span class="token comment">//获取“分享给朋友”按钮点击状态及自定义分享内容接口（即将废弃）</span>\n    window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">onMenuShareAppMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      title<span class="token operator">:</span> title<span class="token punctuation">,</span> <span class="token comment">// 分享标题</span>\n      desc<span class="token operator">:</span> desc<span class="token punctuation">,</span> <span class="token comment">// 分享描述</span>\n      link<span class="token operator">:</span> linkUrl<span class="token punctuation">,</span> <span class="token comment">// 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span>\n      imgUrl<span class="token operator">:</span> imgUrl<span class="token punctuation">,</span> <span class="token comment">// 分享图标</span>\n      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 用户点击了分享后执行的回调函数</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;成功分享给朋友&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token comment">//  获取“分享到朋友圈”按钮点击状态及自定义分享内容接口（即将废弃）</span>\n    window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">onMenuShareTimeline</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      title<span class="token operator">:</span> title<span class="token punctuation">,</span> <span class="token comment">// 分享标题</span>\n      link<span class="token operator">:</span> linkUrl<span class="token punctuation">,</span> <span class="token comment">// 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span>\n      imgUrl<span class="token operator">:</span> imgUrl<span class="token punctuation">,</span> <span class="token comment">// 分享图标</span>\n      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 用户点击了分享后执行的回调函数</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;成功分享到朋友圈&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// window.wx.error(function(){</span>\n  <span class="token comment">//   // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。</span>\n  <span class="token comment">//   initJSSDk();</span>\n  <span class="token comment">// });</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>之后再首页调用即可；</p><div class="language-js"><pre><code><span class="token function">shareWeixin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      title<span class="token operator">:</span> title<span class="token punctuation">,</span> <span class="token comment">// 分享标题</span>\n      desc<span class="token operator">:</span> desc<span class="token punctuation">,</span> <span class="token comment">// 分享描述</span>\n      link<span class="token operator">:</span> linkUrl<span class="token punctuation">,</span> <span class="token comment">// 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span>\n      imgUrl<span class="token operator">:</span> imgUrl<span class="token punctuation">,</span> <span class="token comment">// 分享图标</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div>',10);t.render=function(a,p,t,e,c,u){return n(),s("div",null,[o])};export default t;export{p as __pageData};

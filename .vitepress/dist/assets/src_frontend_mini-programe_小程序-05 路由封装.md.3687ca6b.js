import{o as n,c as s,d as a}from"./app.b11e2761.js";const t='{"title":"小程序-05 路由封装","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、路由封装","slug":"一、路由封装"}],"relativePath":"src\\\\frontend\\\\mini-programe\\\\小程序-05 路由封装.md","lastUpdated":1612089670065}',p={},o=a('<h1 id="小程序-05-路由封装"><a class="header-anchor" href="#小程序-05-路由封装" aria-hidden="true">#</a> 小程序-05 路由封装</h1><h2 id="一、路由封装"><a class="header-anchor" href="#一、路由封装" aria-hidden="true">#</a> 一、路由封装</h2><ol><li>在app.js入口文件写请求地址；</li></ol><div class="language-js"><pre><code><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    globalData<span class="token operator">:</span> <span class="token punctuation">{</span>\n        currentEnv<span class="token operator">:</span> <span class="token string">&#39;prod&#39;</span><span class="token punctuation">,</span> <span class="token comment">//当前环境</span>\n        host<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n        hostServe<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        authorization<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// token</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">onLaunch</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>host <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>hostServe<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>currentEnv<span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><ol start="2"><li>创建util/common.js文件，里面写封装路由的方法</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token constant">APP</span> <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 获取全局方法</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">GET_DATA</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> opt</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> origin<span class="token punctuation">;</span> <span class="token comment">// 接口域名</span>\n    <span class="token keyword">let</span> <span class="token constant">URL</span><span class="token punctuation">;</span> <span class="token comment">// http请求地址</span>\n    <span class="token keyword">let</span> contentType <span class="token operator">=</span> opt<span class="token punctuation">.</span>contentType <span class="token operator">||</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 接口请求类型</span>\n    <span class="token keyword">let</span> authorization <span class="token operator">=</span> <span class="token constant">APP</span><span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>authorization<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> data <span class="token operator">=</span> opt<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token string">&#39;&#39;</span> <span class="token comment">// 请求数据</span>\n    <span class="token keyword">let</span> method <span class="token operator">=</span> opt<span class="token punctuation">.</span>method <span class="token operator">||</span> <span class="token string">&#39;GET&#39;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">let</span> fnSuccess <span class="token operator">=</span> opt<span class="token punctuation">.</span>success <span class="token operator">||</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n    <span class="token comment">// token的命名根据自己项目来定</span>\n    <span class="token keyword">let</span> accessToken <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span><span class="token string">&#39;access_token&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>\n    wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        url<span class="token operator">:</span> <span class="token constant">URL</span><span class="token punctuation">,</span>\n        method<span class="token punctuation">,</span>\n        header<span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token string">&#39;Content-Type&#39;</span><span class="token operator">:</span> contentType<span class="token punctuation">,</span>\n            <span class="token string">&#39;Authorization&#39;</span><span class="token operator">:</span> authorization<span class="token punctuation">,</span>\n            <span class="token string">&#39;time&#39;</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//Long型时间戳</span>\n            <span class="token string">&#39;token&#39;</span><span class="token operator">:</span> accessToken<span class="token punctuation">,</span> <span class="token comment">// 统一用户token</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        data<span class="token punctuation">,</span>\n        dataType<span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token keyword">return</span>\n            <span class="token comment">// 以下做拦截的请求, 当需要成功时则调用 fnSuccess &amp;&amp; fnSuccess(res.data) 将data返回</span>\n            <span class="token operator">...</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            wx<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">&#39;网络错误, 请稍后再试&#39;</span><span class="token punctuation">,</span>\n                duration<span class="token operator">:</span> <span class="token number">1500</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',6);p.render=function(a,t,p,e,c,l){return n(),s("div",null,[o])};export default p;export{t as __pageData};

import{o as n,c as s,d as a}from"./app.e9024871.js";const p='{"title":"node项目实例","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、创建文件夹：","slug":"一、创建文件夹："},{"level":2,"title":"二、下载模板","slug":"二、下载模板"},{"level":2,"title":"三、下载第三方包","slug":"三、下载第三方包"},{"level":2,"title":"四、设计路由","slug":"四、设计路由"},{"level":2,"title":"六、添加数据库","slug":"六、添加数据库"},{"level":2,"title":"七、渲染页面","slug":"七、渲染页面"},{"level":2,"title":"八、设计列表页","slug":"八、设计列表页"},{"level":2,"title":"九、登录页面","slug":"九、登录页面"},{"level":2,"title":"十、用户首页","slug":"十、用户首页"},{"level":2,"title":"十一、修改文章","slug":"十一、修改文章"},{"level":2,"title":"十二、删除文章","slug":"十二、删除文章"},{"level":2,"title":"十三、文章详情页面","slug":"十三、文章详情页面"}],"relativePath":"src/private/node-item.md","lastUpdated":1615699077475}',t={},o=a('<h1 id="node项目实例"><a class="header-anchor" href="#node项目实例" aria-hidden="true">#</a> node项目实例</h1><p>博客项目简介：基于Node.js+Express+Mongodb+Mongoose开发</p><h2 id="一、创建文件夹："><a class="header-anchor" href="#一、创建文件夹：" aria-hidden="true">#</a> 一、创建文件夹：</h2><p>项目目录：my_blog</p><p>app.js入口文件</p><p>views：视图模板</p><p>static：存放静态资源</p><p>controller：控制路由</p><p>models：使用db的模板</p><p>libs：后端使用</p><p>uploads：接收上传的图片文件夹</p><h2 id="二、下载模板"><a class="header-anchor" href="#二、下载模板" aria-hidden="true">#</a> 二、下载模板</h2><p><a href="http://www.cssmoban.com/cssthemes/8138.shtml" target="_blank" rel="noopener noreferrer">http://www.cssmoban.com/cssthemes/8138.shtml</a></p><h2 id="三、下载第三方包"><a class="header-anchor" href="#三、下载第三方包" aria-hidden="true">#</a> 三、下载第三方包</h2><ol><li>根据项目需求，下载所需的第三方包；</li></ol><p>express、mongoose、ejs、formidable(表单)、uuid(图名)</p><h2 id="四、设计路由"><a class="header-anchor" href="#四、设计路由" aria-hidden="true">#</a> 四、设计路由</h2><ol><li>根据需求设计路由，并将html模板中相同的部分使用ejs模板引入；</li></ol><p>（可以先设计登录页面，之后判断是否登录，才能发表文章）</p><h2 id="六、添加数据库"><a class="header-anchor" href="#六、添加数据库" aria-hidden="true">#</a> 六、添加数据库</h2><ol><li>连接：</li></ol><p>（1）在libs文件夹创建一个专门连接的js文件</p><p>（2）里面只引入mongoose和连接，</p><p>（3）之后在app.js头部引入；</p><div class="language-js"><pre><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./libs/connectdb.js&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><ol start="2"><li>创建db</li></ol><p>（1）在models创建一个文章db；</p><p>（2）定义Schema约束</p><p>（3）定义一个添加文章的函数，两个形参（传入的值，回调函数）；</p><p>（4）如果添加出错return callback(err)，如果成功return callback(null);</p><div class="language-js"><pre><code><span class="token comment">// 添加时间：</span>\naddtime<span class="token operator">:</span><span class="token punctuation">{</span>\n    type<span class="token operator">:</span>Date<span class="token punctuation">,</span>\n    <span class="token keyword">default</span><span class="token operator">:</span>Date<span class="token punctuation">.</span>now\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">addArticle</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span>callback</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    models<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//添加成功</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>  <span class="token comment">//添加失败   返回null方便判断</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="3"><li>处理数据</li></ol><p>（1）处理拿到的数据，引入数据文件；</p><p>（2）在添加文章路由文件引入设计的db模块；</p><p>（3）将图片的路径添加到fields对象中，再添加一个用户id，获取哪个用户上传的；</p><p>（4）将fields对象作为实参调用添加文章的函数</p><p>（5）处理添加成功或者失败；</p><p>（5）使用ejs模板往前台传入数据；</p><div class="language-js"><pre><code>fields<span class="token punctuation">.</span>uname <span class="token operator">=</span> uname<span class="token punctuation">;</span>  <span class="token comment">//设计一个用户名，方便后期渲染</span>\nfields<span class="token punctuation">.</span>pic <span class="token operator">=</span> picName<span class="token punctuation">;</span>  <span class="token comment">//往fields里面添加属性;</span>\narticleDB<span class="token punctuation">.</span><span class="token function">addArticle</span><span class="token punctuation">(</span>fields<span class="token punctuation">,</span><span class="token parameter">result</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//处理添加失败</span>\n        res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;msg.html&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>curtitle<span class="token operator">:</span><span class="token string">&#39;上传失败&#39;</span><span class="token punctuation">,</span>curUrl<span class="token operator">:</span><span class="token string">&#39;/user/publish&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>  <span class="token comment">//处理添加成功</span>\n        res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;msg.html&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>curtitle<span class="token operator">:</span><span class="token string">&#39;上传成功&#39;</span><span class="token punctuation">,</span>curUrl<span class="token operator">:</span><span class="token string">&#39;/user/publish&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>数据库结构：创建models文件</p><div class="language-js"><pre><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//约束规则</span>\n<span class="token keyword">let</span> Schemas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    uname<span class="token operator">:</span>String<span class="token punctuation">,</span>\n    title<span class="token operator">:</span>String<span class="token punctuation">,</span>\n    desc<span class="token operator">:</span>String<span class="token punctuation">,</span>\n    contents<span class="token operator">:</span>String<span class="token punctuation">,</span>\n    pic<span class="token operator">:</span>String<span class="token punctuation">,</span>\n    del<span class="token operator">:</span><span class="token punctuation">{</span>\n        type<span class="token operator">:</span>Number<span class="token punctuation">,</span>\n        <span class="token keyword">default</span><span class="token operator">:</span><span class="token number">1</span>   <span class="token comment">//1为显示  0为删除;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    addtime<span class="token operator">:</span><span class="token punctuation">{</span>\n        type<span class="token operator">:</span>Date<span class="token punctuation">,</span>\n        <span class="token keyword">default</span><span class="token operator">:</span>Date<span class="token punctuation">.</span>now\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//定义模型</span>\n<span class="token keyword">let</span> models <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;article&#39;</span><span class="token punctuation">,</span>Schemas<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token comment">//定义添加文章</span>\n<span class="token keyword">function</span> <span class="token function">addArticle</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span>callback</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    models<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//添加成功</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>  <span class="token comment">//添加失败</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//定义查询文章并渲染</span>\n<span class="token keyword">function</span> <span class="token function">findArticle</span><span class="token punctuation">(</span><span class="token parameter">conditions<span class="token punctuation">,</span>projection<span class="token punctuation">,</span>options<span class="token punctuation">,</span>callback</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    models<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>conditions<span class="token punctuation">,</span>projection<span class="token punctuation">,</span>options<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//查询失败;</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>   <span class="token comment">//查询成功</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>docs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//查询条数</span>\n<span class="token keyword">function</span> <span class="token function">findCount</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span>callback</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    models<span class="token punctuation">.</span><span class="token function">countDocuments</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>cond</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">//查询失败</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>cond<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">updateArticle</span><span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span>update<span class="token punctuation">,</span>ccc<span class="token punctuation">,</span>callback</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    models<span class="token punctuation">.</span><span class="token function">findByIdAndUpdate</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>update<span class="token punctuation">,</span>ccc<span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//将文章暴露出去;</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>addArticle<span class="token punctuation">,</span>findArticle<span class="token punctuation">,</span>findCount<span class="token punctuation">,</span>updateArticle<span class="token punctuation">}</span>\n</code></pre></div><p>路由结构：创建ArticleRouter.js,之后在app.js引入</p><div class="language-js"><pre><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> Articledb <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../models/Articledb.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//博客首页</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    Articledb<span class="token punctuation">.</span><span class="token function">findArticle</span><span class="token punctuation">(</span><span class="token punctuation">{</span>del<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>limit<span class="token operator">:</span><span class="token number">9</span><span class="token punctuation">,</span>sort<span class="token operator">:</span><span class="token punctuation">{</span>addtime<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//查询失败</span>\n           <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Not Found：&#39;</span><span class="token operator">+</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>   <span class="token comment">//查询成功..</span>\n        res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;index-index.html&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>docs<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//博客列表页</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/lists/:pid&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token comment">//定义每页显示的条数</span>\n    <span class="token keyword">let</span> limits <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//定义每页跳过多少条</span>\n    <span class="token keyword">let</span> skips <span class="token operator">=</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>pid<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>limits<span class="token punctuation">;</span>\n\n    <span class="token comment">//查询条数</span>\n    <span class="token keyword">let</span> pagenum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    Articledb<span class="token punctuation">.</span><span class="token function">findCount</span><span class="token punctuation">(</span><span class="token punctuation">{</span>del<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>total</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        <span class="token comment">//定义总共的页数</span>\n        pagenum <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>total<span class="token operator">/</span>limits<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token comment">//渲染列表</span>\n    Articledb<span class="token punctuation">.</span><span class="token function">findArticle</span><span class="token punctuation">(</span><span class="token punctuation">{</span>del<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>limit<span class="token operator">:</span>limits<span class="token punctuation">,</span>skip<span class="token operator">:</span>skips<span class="token punctuation">,</span>sort<span class="token operator">:</span><span class="token punctuation">{</span>addtime<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//查询失败</span>\n           <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Not Found：&#39;</span><span class="token operator">+</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>   <span class="token comment">//查询成功..</span>\n        res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;index-blog.html&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>docs<span class="token punctuation">,</span>pagenum<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//博客详情</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/detail&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;index-blog-detail.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//联系我们</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/contact&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;index-contact.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//关于我们</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;index-about.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span>\napp引入ArticleRouter<span class="token punctuation">.</span>js\n\n<span class="token keyword">let</span> articleRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./ArticleRouter.js&#39;</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/blog&#39;</span><span class="token punctuation">,</span> articleRouter<span class="token punctuation">)</span>   <span class="token comment">// articleRouter的每个路由都得添加一个blog</span>\n</code></pre></div><h2 id="七、渲染页面"><a class="header-anchor" href="#七、渲染页面" aria-hidden="true">#</a> 七、渲染页面</h2><p>（1）定义查询数据库</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">findArticle</span><span class="token punctuation">(</span><span class="token parameter">conditions<span class="token punctuation">,</span>projection<span class="token punctuation">,</span>options<span class="token punctuation">,</span>callback</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    models<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>conditions<span class="token punctuation">,</span>projection<span class="token punctuation">,</span>options<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//查询失败;</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>   <span class="token comment">//查询成功</span>\n            <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>docs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>（2）渲染到页面</p><div class="language-js"><pre><code>Articledb<span class="token punctuation">.</span><span class="token function">findArticle</span><span class="token punctuation">(</span><span class="token punctuation">{</span>del<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>limit<span class="token operator">:</span><span class="token number">9</span><span class="token punctuation">,</span>sort<span class="token operator">:</span><span class="token punctuation">{</span>addtime<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//查询失败</span>\n       <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Not Found：&#39;</span><span class="token operator">+</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>   <span class="token comment">//查询成功..</span>\n    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;index-index.html&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>docs<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>通过ejs模板引擎来循环，将数据发送过去；</p><h2 id="八、设计列表页"><a class="header-anchor" href="#八、设计列表页" aria-hidden="true">#</a> 八、设计列表页</h2><ol><li>计算出数据库总的页数，之后设计path路径或查询字符串；</li></ol><p>使用model.countDcuments(data,callback);</p><ol start="2"><li>通过limit和skip定义每页显示的条数，并计算出总的页数；</li></ol><p>方法：(页数-1)*条数；</p><ol start="3"><li>在前端页面通过for循环渲染页数；</li></ol><h2 id="九、登录页面"><a class="header-anchor" href="#九、登录页面" aria-hidden="true">#</a> 九、登录页面</h2><ol><li>将输入的用户名调用到后台数据库查询，判断传入的数据的长度是否为0；</li><li>当账号正确之后验证密码是否正确，正确之后开始设置session；</li><li>渲染页面msg提示信息页面；</li></ol><h2 id="十、用户首页"><a class="header-anchor" href="#十、用户首页" aria-hidden="true">#</a> 十、用户首页</h2><ol><li>判断sessionid是否存在，如果不存在，则跳转到提示页面，让用户登录；</li><li>利用session获取当前的用户，并使用查询数据库；</li><li>将当前用户发表的文章渲染到当前用户的首页；</li></ol><p>技巧：渲染页面时可以做一个表格，给每一行添加一个修改和删除的按钮；</p><h2 id="十一、修改文章"><a class="header-anchor" href="#十一、修改文章" aria-hidden="true">#</a> 十一、修改文章</h2><ol><li>点击修改用path路径给后台传入一个_id，后台利用_id查询数据；</li><li>设计两个路由和添加修改文章的页面；</li><li>将获取到的_id的数据渲染到页面（先显示，后修改），并添加一个隐藏域_id，添加一个图片显示的标签；</li><li>将发表文章的js内容复制到修改文章，将创建文章改成findByIdAndUpdate()；</li><li>修改失败回到修改页面，需要将id传到path路径；</li></ol><h2 id="十二、删除文章"><a class="header-anchor" href="#十二、删除文章" aria-hidden="true">#</a> 十二、删除文章</h2><ol><li>设计一个调用ajax的函数，将点击的_id传到后台；</li><li>在后台将收到的_id的值改为逻辑删除；</li></ol><h2 id="十三、文章详情页面"><a class="header-anchor" href="#十三、文章详情页面" aria-hidden="true">#</a> 十三、文章详情页面</h2><ol><li>点击之后将_id通过ajax传到后台，将内容显示出来；</li></ol>',66);t.render=function(a,p,t,c,e,u){return n(),s("div",null,[o])};export default t;export{p as __pageData};

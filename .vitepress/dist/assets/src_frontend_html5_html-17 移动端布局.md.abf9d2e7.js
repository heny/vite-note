import{o as n,c as a,d as s}from"./app.bd8718b4.js";const t='{"title":"html-17 移动端布局","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、响应式布局","slug":"一、响应式布局"},{"level":3,"title":"响应式网站的优点","slug":"响应式网站的优点"},{"level":3,"title":"响应式网站的缺点","slug":"响应式网站的缺点"},{"level":2,"title":"二、媒体查询","slug":"二、媒体查询"},{"level":2,"title":"三、移动端布局","slug":"三、移动端布局"},{"level":3,"title":"使用rem布局","slug":"使用rem布局"},{"level":3,"title":"自适应布局","slug":"自适应布局"},{"level":3,"title":"禁止手机端缩放","slug":"禁止手机端缩放"},{"level":3,"title":"iphoneX兼容处理方案","slug":"iphonex兼容处理方案"},{"level":2,"title":"四、移动端布局解决方案","slug":"四、移动端布局解决方案"},{"level":2,"title":"五、使用插件自动转换px","slug":"五、使用插件自动转换px"},{"level":2,"title":"六、移动端调试","slug":"六、移动端调试"},{"level":3,"title":"vconsole","slug":"vconsole"},{"level":3,"title":"eruda调试工具","slug":"eruda调试工具"},{"level":3,"title":"spy-debugger","slug":"spy-debugger"},{"level":3,"title":"chrome直接调试","slug":"chrome直接调试"},{"level":2,"title":"七、与原生端联调","slug":"七、与原生端联调"},{"level":3,"title":"安卓端","slug":"安卓端"},{"level":3,"title":"ios端","slug":"ios端"},{"level":2,"title":"参考文章","slug":"参考文章"}],"relativePath":"src\\\\frontend\\\\html5\\\\html-17 移动端布局.md","lastUpdated":1615699077448}',p={},e=s('<h1 id="html-17-移动端布局"><a class="header-anchor" href="#html-17-移动端布局" aria-hidden="true">#</a> html-17 移动端布局</h1><h2 id="一、响应式布局"><a class="header-anchor" href="#一、响应式布局" aria-hidden="true">#</a> 一、响应式布局</h2><ol><li><p>响应式的图片</p><p>需要给图片设置<code>max-width:100%;height:auto;</code></p></li><li><p>响应式的字体</p><p><code>html{font-size:100%;}</code></p><p>之后可以设置响应式的字体：</p></li></ol><div class="language-css"><pre><code><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>640px<span class="token punctuation">)</span></span><span class="token punctuation">{</span><span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span>1rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>960px<span class="token punctuation">)</span></span><span class="token punctuation">{</span><span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span>1.2rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>1200px<span class="token punctuation">)</span></span><span class="token punctuation">{</span><span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span>1.5rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n</code></pre></div><h3 id="响应式网站的优点"><a class="header-anchor" href="#响应式网站的优点" aria-hidden="true">#</a> 响应式网站的优点</h3><ol><li><p>减少工作量</p><p>网站、设计、代码、内容都 只需要一份</p><p>多出来的工作量只是JS脚本、CSS样式做一些改变</p></li><li><p>节省时间</p></li><li><p>每个设备都能得到正确的设计</p></li></ol><h3 id="响应式网站的缺点"><a class="header-anchor" href="#响应式网站的缺点" aria-hidden="true">#</a> 响应式网站的缺点</h3><ol><li>会加载更多的样式和脚本资源</li><li>设计比较难精确定位和控制</li><li>老版本浏览器兼容不好</li></ol><h2 id="二、媒体查询"><a class="header-anchor" href="#二、媒体查询" aria-hidden="true">#</a> 二、媒体查询</h2><p>通过媒体查询我们可以对不同的设备指定特定的样式</p><ol><li>在link标签后面输入(css2)</li></ol><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>screen and (min-width:1000px)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  //在link后面还引入\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>screen and (orientation:landscape)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  //横屏显示\n</code></pre></div><p><code>orientation:portrait</code> //竖屏</p><p>在css文件后面直接写(css3)</p><div class="language-css"><pre><code><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>600px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>1000px<span class="token punctuation">)</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span>   //需要修改的样式写在括号里面，可以针对单独的修改样式。\n</code></pre></div><h2 id="三、移动端布局"><a class="header-anchor" href="#三、移动端布局" aria-hidden="true">#</a> 三、移动端布局</h2><ol><li>页面html头部代码说明：</li></ol><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>keywords<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> <span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 关键字\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>description<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 描述\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>images/icon.ico<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>插入logo标题\n</code></pre></div><ol start="2"><li>设置viewport（至少记住三个）</li></ol><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre></div><ul><li><p>width=device-width</p></li><li><p>height：设置的viewport高度（一般不设置）</p></li><li><p>initial-scale=1.0：页面初始缩放比例，可以为小数</p></li><li><p>minimum-scale：最小缩放比例，可以为小数</p></li><li><p>maximum-scale:最大缩放比例，可以为小数</p></li><li><p>user-scalable：是否允许用户缩放页面，“no”不允许，“yes”允许</p></li></ul><h3 id="使用rem布局"><a class="header-anchor" href="#使用rem布局" aria-hidden="true">#</a> 使用rem布局</h3><p>100px=1rem；自适应；</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> \n    <span class="token keyword">var</span> deviceWidth <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span> <span class="token comment">// 获取浏览器的宽度 </span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>deviceWidth<span class="token operator">&gt;</span><span class="token number">720</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// 判断浏览器的宽度是否大于720 </span>\n        deviceWidth <span class="token operator">=</span> <span class="token number">720</span><span class="token punctuation">;</span> \n    <span class="token punctuation">}</span> \n    <span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token punctuation">(</span>deviceWidth<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">720</span><span class="token punctuation">;</span> <span class="token comment">// 当浏览器大于等于720的时候，font-size 为100，720是页面设计图的宽度。</span>\n    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> fs <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 给html设置font-size </span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="自适应布局"><a class="header-anchor" href="#自适应布局" aria-hidden="true">#</a> 自适应布局</h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">// 后面的40是font-size大小, 即1rem=40px</span>\n    <span class="token keyword">let</span> w <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth <span class="token operator">/</span> <span class="token number">375</span> <span class="token operator">*</span> <span class="token number">40</span>\n    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> w <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="禁止手机端缩放"><a class="header-anchor" href="#禁止手机端缩放" aria-hidden="true">#</a> 禁止手机端缩放</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="iphonex兼容处理方案"><a class="header-anchor" href="#iphonex兼容处理方案" aria-hidden="true">#</a> iphoneX兼容处理方案</h3><ol><li><p>首页必须给<code>meta</code>标签添加<code>name</code>字段为<code>viewport</code>的, <code>content</code>值增加<code>viewport-fit=cover</code>;</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>viewport<span class="token punctuation">&#39;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>viewport-fit=cover<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre></div></li><li><p>单独给body增加iphonex的安全距离不起作用, 是由于<code>position: fixed</code>属性, <code>bottom: 0</code>造成吸底了, 需要给所有的<code>bottom: 0</code>增加对应的安全距离, 不再写<code>bottom: 0</code>, 而是写<code>bottom: env(safe-area-inset-bottom)</code>；</p></li><li><p>两个函数介绍</p><ul><li><p><code>constant</code> ：针对iOS &lt; 11.2以下系统</p></li><li><p><code>env</code> ：针对于iOS &gt;= 11.2的系统</p></li></ul><p><em>因此两个函数都得增加上</em></p></li><li><p>支持的变量：</p><ul><li><p><code>safe-area-inset-left</code>：左边的安全距离</p></li><li><p><code>safe-area-inset-right</code>：右边的安全距离</p></li><li><p><code>safe-area-inset-top</code>：上边的安全距离</p></li><li><p><code>safe-area-inset-bottom</code>：下边的安全距离</p></li></ul></li><li><p>两种情况处理方式</p><ul><li><p>bottom不是0</p></li><li><p>使用calc函数进行计算, 原有的bottom距离加上, 比如：<code>bottom: calc(50px + env(safe-area-inset-bottom))</code></p></li><li><p>bottom是0</p></li><li><p>增加一个空的块, 写入如下样式</p></li></ul><div class="language-css"><pre><code><span class="token selector">body::after</span> <span class="token punctuation">{</span>\n   <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>\n   <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n   <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n   <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n   <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">constant</span><span class="token punctuation">(</span>safe-area-inset-bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span> <span class="token comment">/* 需要与bottom颜色一致 */</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li><li><p>使用<code>@supports</code>隔离兼容模式，判断浏览器是否支持该属性</p><div class="language-css"><pre><code><span class="token atrule"><span class="token rule">@supports</span> <span class="token punctuation">(</span><span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token function">constant</span><span class="token punctuation">(</span>safe-area-inset-bottom<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-bottom<span class="token punctuation">)</span><span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n    <span class="token selector">body::after</span> <span class="token punctuation">{</span>\n        ....\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li></ol><h2 id="四、移动端布局解决方案"><a class="header-anchor" href="#四、移动端布局解决方案" aria-hidden="true">#</a> 四、移动端布局解决方案</h2><ol><li><p>布局方式：</p><ol><li><p>固定布局</p><ol><li>页面设置单位都是px，一般设置整个页面宽度320px，</li><li>缺点：大于320px的页面，两边都会留白，不好看。</li></ol></li><li><p>流式布局：</p><ol><li>宽度使用百分比，高度设置px，页面会出现拉伸，不兼容。</li></ol></li><li><p>响应式布局：</p><ol><li>利用媒体查询，判断不同的设备，使用不同的css文件，比较麻烦。</li><li>优点是：根据不同的手机页面适配不同，用户体验极好。</li><li>在引入css文件后面添加media=&quot;screen and (min-width)&quot;;限制使用css文件。</li><li>min-width最小宽度，max-width最大宽度，min-height最小高度，max-height最大高度。</li></ol></li><li><p>rem布局：</p><ol><li>设置页面html的font-size大小做比较，使用js代码获取设备的宽度给页面font-size赋值，实现元素自适应。</li><li>需要注意浏览器会有最小字体大小，会出现小尺寸手机文字下掉，设置单行/多行文本超出显示点状</li><li>图片是根据基线对齐，设置了默认页面font-size大小之后，字体变大，图片会下掉，转块可以解决。</li><li>图片需要设置宽高才能等比例缩放，放置背景图需要设置背景尺寸100%，否则图片大小无法根据rem等比例缩放，无法显示完整的图片。</li></ol></li></ol></li><li><p>rem单位：</p><ol><li>当html{font-size:100px;}时，页面使用则1rem=100px;</li></ol></li><li><p>em单位：</p><ol><li>针对局部使用：当em的div{font-size:100px; }，div里面width:1em=100px;</li></ol></li></ol><h2 id="五、使用插件自动转换px"><a class="header-anchor" href="#五、使用插件自动转换px" aria-hidden="true">#</a> 五、使用插件自动转换px</h2><ol><li>搜索安装：<code>postcss-px2rem</code></li></ol><h2 id="六、移动端调试"><a class="header-anchor" href="#六、移动端调试" aria-hidden="true">#</a> 六、移动端调试</h2><h3 id="vconsole"><a class="header-anchor" href="#vconsole" aria-hidden="true">#</a> vconsole</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/vconsole<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">new</span> <span class="token class-name">VConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p><img src="https://notecdn.heny.vip/images/html-17_%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%B8%83%E5%B1%80-01.png" alt="image"></p><h3 id="eruda调试工具"><a class="header-anchor" href="#eruda调试工具" aria-hidden="true">#</a> eruda调试工具</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>//cdn.jsdelivr.net/npm/eruda<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">eruda<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- 使用js --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>load_eruda<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n      <span class="token keyword">if</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>pre_host <span class="token operator">===</span> <span class="token string">&#39;uat&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        script<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//cdn.jsdelivr.net/npm/eruda&#39;</span><span class="token punctuation">)</span>\n        script<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text/javascript&#39;</span><span class="token punctuation">)</span>\n        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span>\n        script<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          eruda<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;load_eruda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;load_eruda&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p><img src="https://notecdn.heny.vip/images/html-17_%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%B8%83%E5%B1%80-02.png" alt="image"></p><h3 id="spy-debugger"><a class="header-anchor" href="#spy-debugger" aria-hidden="true">#</a> spy-debugger</h3><p>前面两个都是在项目里面html标签直接引入，手机上面显示调试工具，这个需要代码操作，比较麻烦，好处是不需要针对项目调试，所有的h5网页均可调试</p><ol><li><p>安装：<code>npm i spy-debugger -g</code></p></li><li><p>启动：<code>spy-debugger</code></p></li><li><p>手机和PC保持在同一网络下（比如同时连到一个Wi-Fi下）</p></li><li><p>设置手机的http代理，ip地址为pc的ip地址，端口为spy-debugger启动之后的端口，默认为9888；</p></li><li><p>手机安装证书：进入spy-debugger启动之后的官网 --&gt; 点击请求抓包 --&gt; 点击RootCA --&gt; 手机扫描该二维码进行安装证书</p><p><img src="https://notecdn.heny.vip/images/image-20200619160334023.png" alt="image-20200619160334023"></p></li><li><p>之后进入在手机里面就可以直接访问地址了，可以通过spy-debugger启动的网站，进行查看console或html元素等信息；</p></li></ol><h3 id="chrome直接调试"><a class="header-anchor" href="#chrome直接调试" aria-hidden="true">#</a> chrome直接调试</h3><ol><li>手机使用数据线连接至电脑</li><li>浏览器输入地址：<a href="./chrome://inspect/#devices">chrome://inspect</a></li><li>手机安装chrome移动版浏览器，并输入地址，即可以调试；</li><li>出现的地址中，点击<code>devices</code>直接就可以调试了；</li></ol><p><img src="https://notecdn.heny.vip/images/image-20200720113115699.png" alt="image-20200720113115699"></p><p>效果图如下：</p><p><img src="https://notecdn.heny.vip/images/image-20200720113127408.png" alt="image-20200720113127408"></p><h2 id="七、与原生端联调"><a class="header-anchor" href="#七、与原生端联调" aria-hidden="true">#</a> 七、与原生端联调</h2><p>在原生端的最顶端对象同样是window，我们可以将值放在window对象上；</p><h3 id="安卓端"><a class="header-anchor" href="#安卓端" aria-hidden="true">#</a> 安卓端</h3><p>举例：安卓端绑定方法到window对象上</p><div class="language-js"><pre><code>window<span class="token punctuation">.</span>ikang<span class="token punctuation">.</span><span class="token function">getStatusBarHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="ios端"><a class="header-anchor" href="#ios端" aria-hidden="true">#</a> ios端</h3><p>h5通过在window上面绑定方法，直接调用ios的方法，ios内部调用该方法，将值传入；</p><p>ios定义一个方法，让h5调用，在这个方法内部调用h5绑定在window上的方法，并将值传送这个方法；</p><p>h5通过在postMessage里面可以直接向ios端发送消息；</p><div class="language-js"><pre><code>window<span class="token punctuation">.</span><span class="token function-variable function">getInfo</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\nwindow<span class="token punctuation">.</span>webkit<span class="token punctuation">.</span>messageHandlers<span class="token punctuation">.</span>toH5Version<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="参考文章"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2><ol><li><a href="https://m.jb51.net/html5/691860.html" target="_blank" rel="noopener noreferrer">Html5 页面适配iPhoneX(就是那么简单)</a></li></ol>',61);p.render=function(s,t,p,o,c,l){return n(),a("div",null,[e])};export default p;export{t as __pageData};

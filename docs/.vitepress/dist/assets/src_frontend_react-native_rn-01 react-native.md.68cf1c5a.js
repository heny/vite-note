import{o as a,c as n,d as s}from"./app.0b9a38dc.js";const t='{"title":"RN-01 react-native","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、react-native开始工作","slug":"一、react-native开始工作"},{"level":2,"title":"二、在react-native中使用标签需要引入","slug":"二、在react-native中使用标签需要引入"},{"level":2,"title":"三、react-native中的行间样式","slug":"三、react-native中的行间样式"},{"level":2,"title":"四、注意事项","slug":"四、注意事项"},{"level":2,"title":"五、事件","slug":"五、事件"},{"level":2,"title":"六、react-native中的css样式","slug":"六、react-native中的css样式"},{"level":2,"title":"七、在运行react native下载慢时，添加以下代码","slug":"七、在运行react-native下载慢时，添加以下代码"}],"relativePath":"src/frontend/react-native/rn-01 react-native.md","lastUpdated":1612089669960}',e={},p=s('<h1 id="rn-01-react-native"><a class="header-anchor" href="#rn-01-react-native" aria-hidden="true">#</a> RN-01 react-native</h1><h2 id="一、react-native开始工作"><a class="header-anchor" href="#一、react-native开始工作" aria-hidden="true">#</a> 一、react-native开始工作</h2><ol><li>在vscode里面进入设置，开启exspanion，使用时，输入单词，之后再按一下tab键，该方法支持所有html支持的方法；比如：view*3；</li><li>在vscode里安装Babel ES6/ES7</li></ol><h2 id="二、在react-native中使用标签需要引入"><a class="header-anchor" href="#二、在react-native中使用标签需要引入" aria-hidden="true">#</a> 二、在react-native中使用标签需要引入</h2><div class="language-jsx"><pre><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>View<span class="token punctuation">,</span>Text<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-native&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">{</span>\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">View</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">View</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>在模板中导出有三种模式</p><p>（1）<code>export default class</code> 直接导出一个类</p><p>（2）<code>export default App</code>；</p><p>（3）<code>modules.exports = App</code>；</p><h2 id="三、react-native中的行间样式"><a class="header-anchor" href="#三、react-native中的行间样式" aria-hidden="true">#</a> 三、react-native中的行间样式</h2><ol><li>引入：</li></ol><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>StyleSheet<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-native&#39;</span>\n</code></pre></div><ol start="2"><li>创建一个变量</li></ol><div class="language-jsx"><pre><code><span class="token keyword">const</span> styles <span class="token operator">=</span> StyleSheet<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    colors<span class="token operator">:</span><span class="token punctuation">{</span>color<span class="token operator">:</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>width<span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 使用时: </span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>colors<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><ol start="3"><li>多个第行间样式，使用数组的形式；</li></ol><div class="language-jsx"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">View</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>styles<span class="token punctuation">.</span>box<span class="token punctuation">,</span>styles<span class="token punctuation">.</span>box1<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">View</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><ol start="4"><li>在react-native中，默认是flex布局，默认方向是纵向的，可以直接使用flex布局；</li></ol><p>给元素设置flex:1，则默认占满剩余空间，如果是根节点，则是整个屏幕，可以给根节点设置flex:1，之后设置背景，则是整个屏幕的背景；</p><ol start="5"><li><p>在命名时组件使用大驼峰命名（首字母大写），变量命名小驼峰命名，在使用css样式时，不能使用中划线，需要使用驼峰命名</p></li><li><p>text有一个属性：numberOfLines={1}，指定显示多少行，超出则变点状；</p></li></ol><h2 id="四、注意事项"><a class="header-anchor" href="#四、注意事项" aria-hidden="true">#</a> 四、注意事项</h2><ol><li>字符串内容必须放在text组件里，不能写在view里，flex不建议放在text组件上面；</li><li>如果给子元素设置flex属性时，那么它的父元素必须设置固定高度或者flex属性；</li></ol><div class="language-jsx"><pre><code><span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">&#39;./header&#39;</span>\n<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Header</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span>   <span class="token comment">//内容不要包裹view标签,否则header标签里面即使设置flex:1也没有高度;</span>\n</code></pre></div><h2 id="五、事件"><a class="header-anchor" href="#五、事件" aria-hidden="true">#</a> 五、事件</h2><ol><li>传值；</li></ol><div class="language-jsx"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Header</span></span> <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>arr<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre></div><ol start="2"><li>点击事件</li></ol><div class="language-jsx"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Header</span></span> <span class="token attr-name">onPress</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;哈哈&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre></div><ol start="3"><li>在react-native中，想查看数据有没有传送过来可以使用console.warn，没有log；</li></ol><h2 id="六、react-native中的css样式"><a class="header-anchor" href="#六、react-native中的css样式" aria-hidden="true">#</a> 六、react-native中的css样式</h2><p>在react-native中使用行间样式；</p><ol><li>padding</li></ol><p>paddingHorizontal：同时设置paddingleft/right</p><p>paddingVertical：同时设置paddingtop/bottom;</p><ol start="2"><li><p>设置样式不需要添加px；</p></li><li><p>在给文字设置样式时，必须设置在text元素上；</p></li><li><p>使用图片：引入Image组件，src变成了soure，需要填写require； （1）加载本地：</p></li></ol><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image</span> <span class="token attr-name">soure</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{require(./img/1.png)}</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>（2）加载网络：，必须设置宽高；</p><div class="language-js"><pre><code>soure<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>uri<span class="token operator">:</span>图片地址<span class="token punctuation">}</span><span class="token punctuation">}</span>\n</code></pre></div><ol start="5"><li><p>背景图组件：ImageBackground，设置图片地址和image组件一样，可以在组件里面填写Text组件；</p></li><li><p>ScrollView组件，滚动区域组件；内容是多高，则滚动区域有多高；</p></li></ol><p>注意：react-native中，内容超过屏幕宽度是不能滚动的，需要加入该组件；</p><h2 id="七、在运行react-native下载慢时，添加以下代码"><a class="header-anchor" href="#七、在运行react-native下载慢时，添加以下代码" aria-hidden="true">#</a> 七、在运行react native下载慢时，添加以下代码</h2><div class="language-json"><pre><code>maven<span class="token punctuation">{</span> url <span class="token string">&quot;http://maven.aliyun.com/nexus/content/groups/public/&quot;</span> <span class="token punctuation">}</span>\n</code></pre></div><p><img src="https://notecdn.heny.vip/images/rn-01_react-native-01.png" alt="image"></p><p><img src="https://notecdn.heny.vip/images/rn-01_react-native-02.png" alt="image"></p><p><img src="https://notecdn.heny.vip/images/rn-01_react-native-03.png" alt="image"></p>',44);e.render=function(s,t,e,c,o,l){return a(),n("div",null,[p])};export default e;export{t as __pageData};

import{r as n,o as s,c as a,a as p,w as t,d as o,b as e}from"./app.dc9dbd0c.js";const c='{"title":"TS-03 泛型、类","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、泛型","slug":"一、泛型"},{"level":3,"title":"泛型的简单使用","slug":"泛型的简单使用"},{"level":3,"title":"多个泛型定义","slug":"多个泛型定义"},{"level":3,"title":"接口使用泛型变量","slug":"接口使用泛型变量"},{"level":3,"title":"泛型约束","slug":"泛型约束"},{"level":3,"title":"泛型中的默认值","slug":"泛型中的默认值"},{"level":2,"title":"二、TS中的类","slug":"二、ts中的类"},{"level":3,"title":"定义类","slug":"定义类"},{"level":3,"title":"类的修饰符","slug":"类的修饰符"},{"level":3,"title":"其他修饰符","slug":"其他修饰符"},{"level":3,"title":"参数属性","slug":"参数属性"},{"level":3,"title":"可选类属性","slug":"可选类属性"},{"level":3,"title":"类的存取器","slug":"类的存取器"},{"level":3,"title":"抽象类","slug":"抽象类"},{"level":3,"title":"实例类型","slug":"实例类型"},{"level":3,"title":"类实现接口","slug":"类实现接口"},{"level":3,"title":"接口继承类","slug":"接口继承类"},{"level":3,"title":"泛型中使用类 类型","slug":"泛型中使用类-类型"}],"relativePath":"src\\\\frontend\\\\Typescript\\\\ts-03 泛型、类.md","lastUpdated":1612089669874}',l={},k=o('',23),u=e("public"),r=e(" 公共的"),i=e("private"),d=e(" 私有的"),g=p("ul",null,[p("li",null,[e("外部访问定义private的属性将报错，"),p("strong",null,"只能在类中的访问")]),p("li",null,"继承也无法访问私有的属性的")],-1),m=e("protected"),y=e(" 受保护的"),h=o('',1),w=o('',18),b=e("使用"),f=e("abstract"),v=e("来定义抽象类"),_=p("li",null,[p("p",null,"定义抽象类只能继承使用，不能直接实例化")],-1),T=p("li",null,[p("p",null,"在抽象类里面定义的抽象属性或方法，在继承时需要添加到继承的类中；")],-1),A=o('',8),P=e("使用"),S=e("implements"),I=e("实现一个接口"),x=o('',9);l.render=function(o,e,c,l,j,C){const N=n("font");return s(),a("div",null,[k,p("ul",null,[p("li",null,[p("p",null,[p(N,{color:"red"},{default:t((()=>[u])),_:1}),r])]),p("li",null,[p("p",null,[p(N,{color:"red"},{default:t((()=>[i])),_:1}),d]),g]),p("li",null,[p("p",null,[p(N,{color:"red"},{default:t((()=>[m])),_:1}),y]),h])]),w,p("ul",null,[p("li",null,[p("p",null,[b,p(N,{color:"red"},{default:t((()=>[f])),_:1}),v])]),_,T]),A,p("ul",null,[p("li",null,[P,p(N,{color:"red"},{default:t((()=>[S])),_:1}),I])]),x])};export default l;export{c as __pageData};

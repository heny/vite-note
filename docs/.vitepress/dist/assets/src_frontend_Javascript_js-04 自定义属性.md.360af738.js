import{o as n,c as s,d as a}from"./app.f43337b9.js";const p='{"title":"js-04 自定义属性","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、获取元素的样式","slug":"一、获取元素的样式"},{"level":2,"title":"二、自定义属性","slug":"二、自定义属性"},{"level":2,"title":"三、处理异常","slug":"三、处理异常"}],"relativePath":"src\\\\frontend\\\\Javascript\\\\js-04 自定义属性.md","lastUpdated":1612089669823}',t={},o=a('<h1 id="js-04-自定义属性"><a class="header-anchor" href="#js-04-自定义属性" aria-hidden="true">#</a> js-04 自定义属性</h1><h2 id="一、获取元素的样式"><a class="header-anchor" href="#一、获取元素的样式" aria-hidden="true">#</a> 一、获取元素的样式</h2><ol><li>标准浏览器中：ie浏览器不支持</li></ol><div class="language-js"><pre><code><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>元素<span class="token punctuation">)</span><span class="token punctuation">.</span>样式<span class="token punctuation">;</span>\n</code></pre></div><p>所有的点后面也可以用中括号代替，中括号需要加引号；</p><p>比如：<code>getcomputedStyle(box)[&#39;width&#39;]</code>;</p><ol start="2"><li>ie8以下浏览器获取样式的方法：</li></ol><p><code>元素.currentStyle.样式</code>； 也是可以用中括号写；</p><h2 id="二、自定义属性"><a class="header-anchor" href="#二、自定义属性" aria-hidden="true">#</a> 二、自定义属性</h2><ol><li>为什么要自定义属性：</li></ol><p>如果声明一个flag为true，则所有的标签都是使用flag这个标识的，前一个改变，后一个因为使用的是前一个的标识，所以也改变了，则需要为每一个元素都添加一个标识，叫做自定义属性，每一个元素都有一个flag标识，就互不影响了；</p><ol start="2"><li>自定义索引值：</li></ol><p>索引一般用于下标一一对应的，比如抽奖翻牌，假设每个按钮对应的奖项都是定好了的，都存放在数组中，第一个按钮对应数组中第一个元素，依次类推。点击某个按钮就需要显示相对应下标的奖项，则我们需要把下标存下来，叫自定义索引（其实也是自定义属性）。</p><p>定义：<code>div.name= value</code>；</p><p>获取：<code>div.name</code>；</p><p>更改：<code>div.name = new</code>；</p><p>自定义属性值可以是任何数据类型的；</p><div class="language-js"><pre><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>odiv<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    odiv<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//给每个div加一个新的属性；</span>\n    odiv<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//如果这个div的这个flag属性为true，则改变；</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">//让这个div的flag属性为false</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>自定义属性解决的问题：</p><div class="language-js"><pre><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>li<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    li<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onmouseover</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//数组放在事件中是无法循环的</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>解决办法：</p><div class="language-js"><pre><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>li<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    li<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//给每个li起一个属性，并让属性值为数组中的某个颜色；</span>\n    li<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onmouseover</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>flag<span class="token punctuation">;</span>   <span class="token comment">//让这个颜色为这个属性值；</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>小方块需要点击两下：</p><div class="language-js"><pre><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>odiv<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    odiv<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//给每个div加一个新的属性；</span>\n    odiv<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//如果这个div的这个flag属性为true，则改变；</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">//让这个div的flag属性为false</span>\n    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="三、处理异常"><a class="header-anchor" href="#三、处理异常" aria-hidden="true">#</a> 三、处理异常</h2>',25);t.render=function(a,p,t,e,c,l){return n(),s("div",null,[o])};export default t;export{p as __pageData};

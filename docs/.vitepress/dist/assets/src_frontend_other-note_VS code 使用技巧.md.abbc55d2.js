import{o as s,c as n,d as a}from"./app.b11e2761.js";const t='{"title":"VS code 使用技巧","description":"","frontmatter":{},"headers":[{"level":2,"title":"vscode常用插件","slug":"vscode常用插件"},{"level":2,"title":"自动补齐node代码：","slug":"自动补齐node代码："},{"level":2,"title":"自定义代码补齐snippets","slug":"自定义代码补齐snippets"},{"level":2,"title":"添加右键vscode打开","slug":"添加右键vscode打开"},{"level":2,"title":"vscode 使用bash终端","slug":"vscode-使用bash终端"},{"level":2,"title":"Vs code格式化处理方案","slug":"vs-code格式化处理方案"},{"level":2,"title":"解决\'-\'分隔符不能双击选中","slug":"解决-分隔符不能双击选中"},{"level":2,"title":"配置path autocomplete插件","slug":"配置path-autocomplete插件"},{"level":2,"title":"VsCode直接使用debugger","slug":"vscode直接使用debugger"},{"level":2,"title":"命令行操作","slug":"命令行操作"}],"relativePath":"src\\\\frontend\\\\other-note\\\\VS code 使用技巧.md","lastUpdated":1612189279552}',p={},o=a('<h1 id="vs-code-使用技巧"><a class="header-anchor" href="#vs-code-使用技巧" aria-hidden="true">#</a> VS code 使用技巧</h1><p>vscode快捷键</p><ol><li>alt+shift+↓/↑ 快速向下/向上复制一行。</li><li>alt+鼠标左键 点击需要修改的地方，可以同时修改</li><li>ctrl+shift+L 选中所有被搜索的内容。</li><li>ctrl+shift+K 删除当前行。</li><li>ctrl+[ / ] 缩进/增进。</li><li>ctrl+enter 快速下一行</li><li>ctrl+shift+enter 快速上一行</li><li>shift+alt+a 多行注释</li><li>ctrl+d 快速选中下一个</li><li>alt+shift+f 快速格式化上下文</li><li>alt+z 格式化文字</li><li>按住鼠标滚轮可以选中</li><li>ctrl+k+0 快速折叠</li><li>ctrl+k+j 全部展开</li><li>ctrl+shift+{/} 当前折叠/展开</li><li>ctrl+, 打开setting</li><li>ctrl+j 打开控制台</li><li>ctrl+p 搜索文件</li><li>ctrl+shift+p 使用功能</li><li>tr*5&gt;td*3 出来五个tr，每个tr里面包含3个td</li><li>.box直接class名box。</li><li>#box直接id名box。</li><li>div*9{$} 出来9个div包含数字1-9;</li></ol><p>网页截图：ctrl+shift+p capture full size screenshot</p><p>切换屏幕：alt+ctrl+方向键</p><h2 id="vscode常用插件"><a class="header-anchor" href="#vscode常用插件" aria-hidden="true">#</a> vscode常用插件</h2><ul><li><p>浏览器打开：view in browser</p></li><li><p>打开浏览器：open in browser</p></li><li><p>修改前缀自动补齐：auto rename tag</p></li><li><p>更明显的颜色对齐：bracket rair colorizer</p></li><li><p>简体中文：chinese(Simplified)</p></li><li><p>所见即所得：live html previewer</p></li><li><p>创建svg画布：SVG</p></li><li><p>浏览器画布：svg viewer</p></li><li><p>颜色高亮：vs color picker</p></li><li><p>跳转到css类名样式：css peek</p></li><li><p>模拟服务器：Live Server</p></li><li><p>vue文件自动补齐：vetur</p></li><li><p>bootstrap自动完成类名：bootstrap 3 Snippets</p></li><li><p>vue自动完成：vue 2 snippets</p></li><li><p>javascript自动完成：Atom javascript snippet</p></li><li><p>第三方cdn：cdnjs</p></li><li><p>cdn自动完成：cdnSnippets</p></li><li><p>es6自动完成：javascript(es6) code snippets</p></li><li><p>路径自动完成：path intellisense</p></li><li><p>图标美化：material icon theme</p></li><li><p>快捷console：javascript console utils</p></li><li><p>autoprefixer： 在使用css文件编写样式时，按shift+ctrl+p，找到autoprefixer回车自动加兼容ie前缀；</p></li><li><p>自动完成：<a href="http://aiXcoder.com" target="_blank" rel="noopener noreferrer">aiXcoder.com</a> 会自动提示补全功能（带星），需要在官网下载</p></li><li><p>TabNine： 代码自动补全，</p></li><li><p>gitlens：管理git插件，可以随时查看到git版本修改信息（超好用）</p></li><li><p>选中函数添加注释：Add jsdoc comments</p></li><li><p>正则预览插件（写正则很方便）： Regex Previewer</p></li><li><p>注释醒目插件（多种注释带颜色，区分不同程度注释）：Better Comments</p></li><li><p>自动引入import：npm Intellisense</p></li><li><p>sass转换：live sass compiler（需要使用shift+ctrl+p 打开搜索sass找到编译）</p></li><li><p>less转换：easy less （保存自动编译）</p></li><li><p>图标主题：atom one dark theme（atom系列的都好看）</p></li><li><p>同步vscode配置：settings sync（出问题就重置一下设置，重新登录授权就可以了）</p></li><li><p>REST Client：请求接口常用</p><p>创建test.http</p><div class="language-js"><pre><code>@host <span class="token operator">=</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com\n<span class="token constant">GET</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>host<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">/</span>banner <span class="token constant">HTTP</span><span class="token operator">/</span><span class="token number">1.1</span>\ncontent<span class="token operator">-</span>type<span class="token operator">:</span> application<span class="token operator">/</span>json\n\n<span class="token punctuation">{</span>\n    <span class="token string">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sample&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li><li><p>Browser Preview：vscode嵌套浏览器，方便debugger使用</p></li></ul><h2 id="自动补齐node代码："><a class="header-anchor" href="#自动补齐node代码：" aria-hidden="true">#</a> 自动补齐node代码：</h2><p>npm install -g typings</p><p>typings install dt~node --global --save</p><p>typings install dt~express --global</p><p>typings install dt~lodash --global</p><p>创建jsconfig.json空文件</p><h2 id="自定义代码补齐snippets"><a class="header-anchor" href="#自定义代码补齐snippets" aria-hidden="true">#</a> 自定义代码补齐snippets</h2><ol><li>打开方法</li></ol><p>（1）首选项==&gt;用户代码片段</p><p>（2）ctrl+shift+p 打开命令面板，输入snippets后回车</p><ol start="2"><li>使用方法</li></ol><div class="language-json"><pre><code><span class="token property">&quot;html template&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;prefix&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vh&quot;</span><span class="token punctuation">,</span>  <span class="token comment">//vh是使用时输入的代码</span>\n    <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>  <span class="token comment">//body里面填写需要自动完成的代码</span>\n    <span class="token string">&quot;console.log(&#39;${1:content}&#39;);&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;${2:label}&quot;</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;htmls template&quot;</span>  <span class="token comment">//为提示内容;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ol start="3"><li><p>符号介绍</p><ul><li>${1:content}，代表第一个占位符，也可以直接$1；</li><li>${2:label}，代表第二个占位符，使用tab进行切换，以此类推</li><li>$0，tab切换最后的位置；</li><li>使用$1content光标会到第一个去</li></ul></li><li><p>填写body内容规范</p></li></ol><p>（1）字符串间如果值里包含特殊字符需要 \\ 进行转义</p><p>（2）换行：\\r或者\\n</p><p>（3）tab键制表符：\\t</p><p>（4）如果换行，需要加逗号；</p><h2 id="添加右键vscode打开"><a class="header-anchor" href="#添加右键vscode打开" aria-hidden="true">#</a> 添加右键vscode打开</h2><p><img src="https://notecdn.heny.vip/images/VScode%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7-01.png" alt="image"></p><ol><li>新建1.reg（一样要是reg后缀）</li><li>找到VsCode安装目录，替换即可</li></ol><div class="language-bash"><pre><code>Windows Registry Editor Version <span class="token number">5.00</span>\n\n<span class="token punctuation">[</span>HKEY_CLASSES_ROOT<span class="token punctuation">\\</span>*<span class="token punctuation">\\</span>shell<span class="token punctuation">\\</span>VSCode<span class="token punctuation">]</span>\n@<span class="token operator">=</span><span class="token string">&quot;Open with Code&quot;</span>\n<span class="token string">&quot;Icon&quot;</span><span class="token operator">=</span><span class="token string">&quot;D:<span class="token entity" title="\\\\">\\\\</span>Program Files (x86)<span class="token entity" title="\\\\">\\\\</span>Microsoft VS Code<span class="token entity" title="\\\\">\\\\</span>Code.exe&quot;</span>\n\n<span class="token punctuation">[</span>HKEY_CLASSES_ROOT<span class="token punctuation">\\</span>*<span class="token punctuation">\\</span>shell<span class="token punctuation">\\</span>VSCode<span class="token punctuation">\\</span>command<span class="token punctuation">]</span>\n@<span class="token operator">=</span><span class="token string">&quot;<span class="token entity" title="\\&quot;">\\&quot;</span>D:<span class="token entity" title="\\\\">\\\\</span>Program Files (x86)<span class="token entity" title="\\\\">\\\\</span>Microsoft VS Code<span class="token entity" title="\\\\">\\\\</span>Code.exe<span class="token entity" title="\\&quot;">\\&quot;</span> <span class="token entity" title="\\&quot;">\\&quot;</span>%1<span class="token entity" title="\\&quot;">\\&quot;</span>&quot;</span>\n\nWindows Registry Editor Version <span class="token number">5.00</span>\n\n<span class="token punctuation">[</span>HKEY_CLASSES_ROOT<span class="token punctuation">\\</span>Directory<span class="token punctuation">\\</span>shell<span class="token punctuation">\\</span>VSCode<span class="token punctuation">]</span>\n@<span class="token operator">=</span><span class="token string">&quot;Open with Code&quot;</span>\n<span class="token string">&quot;Icon&quot;</span><span class="token operator">=</span><span class="token string">&quot;D:<span class="token entity" title="\\\\">\\\\</span>Program Files (x86)<span class="token entity" title="\\\\">\\\\</span>Microsoft VS Code<span class="token entity" title="\\\\">\\\\</span>Code.exe&quot;</span>\n\n<span class="token punctuation">[</span>HKEY_CLASSES_ROOT<span class="token punctuation">\\</span>Directory<span class="token punctuation">\\</span>shell<span class="token punctuation">\\</span>VSCode<span class="token punctuation">\\</span>command<span class="token punctuation">]</span>\n@<span class="token operator">=</span><span class="token string">&quot;<span class="token entity" title="\\&quot;">\\&quot;</span>D:<span class="token entity" title="\\\\">\\\\</span>Program Files (x86)<span class="token entity" title="\\\\">\\\\</span>Microsoft VS Code<span class="token entity" title="\\\\">\\\\</span>Code.exe<span class="token entity" title="\\&quot;">\\&quot;</span> <span class="token entity" title="\\&quot;">\\&quot;</span>%V<span class="token entity" title="\\&quot;">\\&quot;</span>&quot;</span>\n\nWindows Registry Editor Version <span class="token number">5.00</span>\n\n<span class="token punctuation">[</span>HKEY_CLASSES_ROOT<span class="token punctuation">\\</span>Directory<span class="token punctuation">\\</span>Background<span class="token punctuation">\\</span>shell<span class="token punctuation">\\</span>VSCode<span class="token punctuation">]</span>\n@<span class="token operator">=</span><span class="token string">&quot;Open with Code&quot;</span>\n<span class="token string">&quot;Icon&quot;</span><span class="token operator">=</span><span class="token string">&quot;D:<span class="token entity" title="\\\\">\\\\</span>Program Files (x86)<span class="token entity" title="\\\\">\\\\</span>Microsoft VS Code<span class="token entity" title="\\\\">\\\\</span>Code.exe&quot;</span>\n\n<span class="token punctuation">[</span>HKEY_CLASSES_ROOT<span class="token punctuation">\\</span>Directory<span class="token punctuation">\\</span>Background<span class="token punctuation">\\</span>shell<span class="token punctuation">\\</span>VSCode<span class="token punctuation">\\</span>command<span class="token punctuation">]</span>\n@<span class="token operator">=</span><span class="token string">&quot;<span class="token entity" title="\\&quot;">\\&quot;</span>D:<span class="token entity" title="\\\\">\\\\</span>Program Files (x86)<span class="token entity" title="\\\\">\\\\</span>Microsoft VS Code<span class="token entity" title="\\\\">\\\\</span>Code.exe<span class="token entity" title="\\&quot;">\\&quot;</span> <span class="token entity" title="\\&quot;">\\&quot;</span>%V<span class="token entity" title="\\&quot;">\\&quot;</span>&quot;</span>\n</code></pre></div><p>Cmder添加右键：</p><p>打开Cmder，使用管理员执行此代码：<code>Cmder.exe /REGISTER ALL</code></p><h2 id="vscode-使用bash终端"><a class="header-anchor" href="#vscode-使用bash终端" aria-hidden="true">#</a> vscode 使用bash终端</h2><p>将下面代码加入到vscode设置json里面，找到自己的git地址；</p><div class="language-json"><pre><code><span class="token property">&quot;terminal.integrated.shell.windows&quot;</span><span class="token operator">:</span> <span class="token string">&quot;C:\\\\Program Files\\\\Git\\\\bin\\\\bash.exe&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 添加默认终端工具</span>\n</code></pre></div><h2 id="vs-code格式化处理方案"><a class="header-anchor" href="#vs-code格式化处理方案" aria-hidden="true">#</a> Vs code格式化处理方案</h2><ol><li>安装插件</li></ol><p>（1）<code>ESlint</code>：javascript代码检测工具，可以配置每次保存时格式化</p><p>（2）<code>vetur</code>：可以格式化html、标准css，标准js（有分号、双引号那种）、vue文件</p><p>（3）<code>Prettier-code formatter</code>：只关注格式化，没有eslint检查语法能力</p><p>（4）<code>Manta&#39;s Stylus Supremacy</code>：格式化stylus插件（不用就不装），因为vetur会把css格式化有分号、大括号那种，此插件可以格式化成stylus风格</p><ol start="2"><li>配置vscode，在文件 -&gt; 首选项 -&gt; 设置，点击右上角的打开json</li></ol><div class="language-json"><pre><code><span class="token punctuation">{</span>\n     <span class="token comment">// vscode默认启用了根据文件类型自动设置tabsize的选项</span>\n    <span class="token property">&quot;editor.detectIndentation&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token comment">// 重新设定tabsize</span>\n    <span class="token property">&quot;editor.tabSize&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token comment">// 每次保存的时候自动格式化</span>\n    <span class="token property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// #每次保存的时候将代码按eslint格式进行修复</span>\n    <span class="token property">&quot;eslint.autoFixOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// tslint保存修复</span>\n    <span class="token property">&quot;tslint.autoFixOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 让prettier使用eslint的代码格式进行校验</span>\n    <span class="token property">&quot;prettier.eslintIntegration&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 去掉代码结尾的分号</span>\n    <span class="token property">&quot;prettier.semi&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token comment">// 使用带引号替代双引号</span>\n    <span class="token property">&quot;prettier.singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 让函数(名)和后面的括号之间加个空格</span>\n    <span class="token property">&quot;javascript.format.insertSpaceBeforeFunctionParenthesis&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 这个按用户自身习惯选择</span>\n    <span class="token property">&quot;vetur.format.defaultFormatter.html&quot;</span><span class="token operator">:</span> <span class="token string">&quot;js-beautify-html&quot;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 让vue中的js按编辑器自带的ts格式进行格式化</span>\n    <span class="token property">&quot;vetur.format.defaultFormatter.js&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vscode-typescript&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;vetur.format.defaultFormatterOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;js-beautify-html&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">&quot;wrap_attributes&quot;</span><span class="token operator">:</span> <span class="token string">&quot;force-aligned&quot;</span>\n            <span class="token comment">// vue组件中html代码格式化样式</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 格式化stylus, 需安装Manta&#39;s Stylus Supremacy插件</span>\n    <span class="token property">&quot;stylusSupremacy.insertColons&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否插入冒号</span>\n    <span class="token property">&quot;stylusSupremacy.insertSemicolons&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否插入分号</span>\n    <span class="token property">&quot;stylusSupremacy.insertBraces&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否插入大括号</span>\n    <span class="token property">&quot;stylusSupremacy.insertNewLineAroundImports&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// import之后是否换行</span>\n    <span class="token property">&quot;stylusSupremacy.insertNewLineAroundBlocks&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 两个选择器中是否换行</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="解决-分隔符不能双击选中"><a class="header-anchor" href="#解决-分隔符不能双击选中" aria-hidden="true">#</a> 解决&#39;-&#39;分隔符不能双击选中</h2><p>添加到setting中；</p><div class="language-json"><pre><code><span class="token property">&quot;editor.wordSeparators&quot;</span><span class="token operator">:</span> <span class="token string">&quot;`~!@#$%^&amp;*()=+[{]}\\\\|;:&#39;\\&quot;,.&lt;&gt;/?&quot;</span>\n</code></pre></div><h2 id="配置path-autocomplete插件"><a class="header-anchor" href="#配置path-autocomplete插件" aria-hidden="true">#</a> 配置path autocomplete插件</h2><p>配置该插件必须安装插件：path autocomplete</p><p>可以自动补齐引入目录，当使用项目别名引入文件时，也可以自动补齐了，也可以专门针对项目设置，添加到项目.vscode/setting.json文件里</p><div class="language-json"><pre><code><span class="token property">&quot;path-autocomplete.pathMappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;@&quot;</span><span class="token operator">:</span> <span class="token string">&quot;${folder}/src&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div><h2 id="vscode直接使用debugger"><a class="header-anchor" href="#vscode直接使用debugger" aria-hidden="true">#</a> VsCode直接使用debugger</h2><ol><li><p>场景：在浏览器debugger时，当查看到某个文件的错误时，需要修改文件，就得到编辑器里面找到该文件，比较鸡肋，现在使用vscode的debugger时，则是直接往文件里面跳转，可以直接方便的进行修改</p></li><li><p>好处：在编辑器里面直接调试，也可以明显的显示每个变量当前值，更方便操作</p></li><li><p>安装软件：Debugger for Chrome插件</p></li><li><p>配置vscode debugger</p></li></ol><div class="language-json"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.2.0&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;configurations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;chrome&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 使用chrome进行调试,会打开浏览器,操作到断点位置会跳转到断点文件</span>\n      <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token string">&quot;launch&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Chrome项目调试&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 会直接出现在第二步里提供选择</span>\n      <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:3006&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 打开的网址,端口和要调试的项目端口一致</span>\n      <span class="token property">&quot;webRoot&quot;</span><span class="token operator">:</span> <span class="token string">&quot;${workspaceFolder}/src&quot;</span><span class="token punctuation">,</span> <span class="token comment">// chrome插件带的,指定根目录或者执行文件</span>\n      <span class="token property">&quot;skipFiles&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">]</span> <span class="token comment">// 跳过node_modules文件不进入源码断点</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 调试js文件,不需要打开浏览器直接进行调试</span>\n      <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token string">&quot;launch&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node脚本调试&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;skipFiles&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">&quot;&lt;node_internals&gt;/**&quot;</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;program&quot;</span><span class="token operator">:</span> <span class="token string">&quot;${file}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 打开当前的js文件进行调试</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><img src="https://notecdn.heny.vip/images/VScode%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7-02.png" alt="image"></p><p><strong>launch.json会用到的预定变量：</strong></p><ul><li>${workspaceRoot}：VSCode中打开文件夹的路径</li><li>${workspaceRootFolderName}：VSCode中打开文件夹的路径, 但不包含&quot;/&quot;</li><li>${file} ：当前打开的文件</li><li>${relativeFile}：当前打开的文件,相对于workspaceRoot</li><li>${fileBasename} ：当前打开文件的文件名, 不含扩展名</li><li>${fileDirname} ：当前打开文件的目录名</li><li>${fileExtname}：当前打开文件的扩展名</li><li>${cwd} ：当前启动时的工作目录</li></ul><ol start="5"><li>项目断点</li></ol><p>可以直接在文件右侧点击红色小点，也可以直接填写debugger，打完断点就可以按f5开始了，操作和chrome的断点操作是一样的；</p><p><img src="https://notecdn.heny.vip/images/VScode%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7-03.png" alt="image"></p><h2 id="命令行操作"><a class="header-anchor" href="#命令行操作" aria-hidden="true">#</a> 命令行操作</h2><p>安装之后可以在cmd终端使用code命令，常用命令如下：</p><p>code ./ 以当前目录在vscode中打开</p><p>code 文件名 快速开始当前该文件编辑，如果是新文件按ctrl+s自动保存在目录上；</p>',61);p.render=function(a,t,p,e,l,c){return s(),n("div",null,[o])};export default p;export{t as __pageData};
